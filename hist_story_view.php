<?php
// This script and data application were generated by AppGini 5.94
// Download AppGini for free from https://bigprof.com/appgini/download/

	$currDir = dirname(__FILE__);
	include_once("{$currDir}/lib.php");
	@include_once("{$currDir}/hooks/hist_story.php");
	include_once("{$currDir}/hist_story_dml.php");

	// mm: can the current member access this page?
	$perm = getTablePermissions('hist_story');
	if(!$perm['access']) {
		echo error_message($Translation['tableAccessDenied'], false);
		echo '<script>setTimeout(function() { window.location = "index.php?signOut=1"; }, 2000);</script>';
		exit;
	}

	$x = new DataList;
	$x->TableName = 'hist_story';

	// Fields that can be displayed in the table view
	$x->QueryFieldsTV = [
		"`hist_story`.`id`" => "id",
		"IF(    CHAR_LENGTH(`hist_team1`.`id`) || CHAR_LENGTH(`hist_team1`.`team`), CONCAT_WS('',   `hist_team1`.`id`, ' - ', `hist_team1`.`team`), '') /* Team */" => "team",
		"IF(    CHAR_LENGTH(`game_agent1`.`id`) || CHAR_LENGTH(`game_agent1`.`memberID`) || CHAR_LENGTH(`game_agent1`.`memberID`), CONCAT_WS('',   `game_agent1`.`id`, '   ', `game_agent1`.`memberID`, `game_agent1`.`memberID`), '') /* Project leader */" => "hist_lead_id",
		"IF(    CHAR_LENGTH(`game_agent1`.`last_name`) || CHAR_LENGTH(`game_agent1`.`first_name`), CONCAT_WS('',   `game_agent1`.`last_name`, ', ', `game_agent1`.`first_name`), '') /* Proj. leader name */" => "hist_lead_name",
		"IF(    CHAR_LENGTH(`hist_community1`.`id`) || CHAR_LENGTH(`hist_community1`.`com_name`), CONCAT_WS('',   `hist_community1`.`id`, ' - ', `hist_community1`.`com_name`), '') /* Community name */" => "community_id",
		"`hist_story`.`story_title`" => "story_title",
		"IF(    CHAR_LENGTH(`class_bibliography_genre1`.`genre`), CONCAT_WS('',   `class_bibliography_genre1`.`genre`), '') /* Genre */" => "genre",
		"`hist_story`.`approach`" => "approach",
		"`hist_story`.`description`" => "description",
		"`hist_story`.`tags`" => "tags",
		"IF(    CHAR_LENGTH(`class_story_collab_type1`.`collab_type`), CONCAT_WS('',   `class_story_collab_type1`.`collab_type`), '') /* Collaboration status */" => "collaboration_status",
		"IF(    CHAR_LENGTH(`class_language1`.`short`), CONCAT_WS('',   `class_language1`.`short`), '') /* Language */" => "language",
	];
	// mapping incoming sort by requests to actual query fields
	$x->SortFields = [
		1 => '`hist_story`.`id`',
		2 => 2,
		3 => 3,
		4 => 4,
		5 => 5,
		6 => 6,
		7 => '`class_bibliography_genre1`.`genre`',
		8 => 8,
		9 => 9,
		10 => 10,
		11 => '`class_story_collab_type1`.`collab_type`',
		12 => '`class_language1`.`short`',
	];

	// Fields that can be displayed in the csv file
	$x->QueryFieldsCSV = [
		"`hist_story`.`id`" => "id",
		"IF(    CHAR_LENGTH(`hist_team1`.`id`) || CHAR_LENGTH(`hist_team1`.`team`), CONCAT_WS('',   `hist_team1`.`id`, ' - ', `hist_team1`.`team`), '') /* Team */" => "team",
		"IF(    CHAR_LENGTH(`game_agent1`.`id`) || CHAR_LENGTH(`game_agent1`.`memberID`) || CHAR_LENGTH(`game_agent1`.`memberID`), CONCAT_WS('',   `game_agent1`.`id`, '   ', `game_agent1`.`memberID`, `game_agent1`.`memberID`), '') /* Project leader */" => "hist_lead_id",
		"IF(    CHAR_LENGTH(`game_agent1`.`last_name`) || CHAR_LENGTH(`game_agent1`.`first_name`), CONCAT_WS('',   `game_agent1`.`last_name`, ', ', `game_agent1`.`first_name`), '') /* Proj. leader name */" => "hist_lead_name",
		"IF(    CHAR_LENGTH(`hist_community1`.`id`) || CHAR_LENGTH(`hist_community1`.`com_name`), CONCAT_WS('',   `hist_community1`.`id`, ' - ', `hist_community1`.`com_name`), '') /* Community name */" => "community_id",
		"`hist_story`.`story_title`" => "story_title",
		"IF(    CHAR_LENGTH(`class_bibliography_genre1`.`genre`), CONCAT_WS('',   `class_bibliography_genre1`.`genre`), '') /* Genre */" => "genre",
		"`hist_story`.`approach`" => "approach",
		"`hist_story`.`description`" => "description",
		"`hist_story`.`tags`" => "tags",
		"IF(    CHAR_LENGTH(`class_story_collab_type1`.`collab_type`), CONCAT_WS('',   `class_story_collab_type1`.`collab_type`), '') /* Collaboration status */" => "collaboration_status",
		"IF(    CHAR_LENGTH(`class_language1`.`short`), CONCAT_WS('',   `class_language1`.`short`), '') /* Language */" => "language",
	];
	// Fields that can be filtered
	$x->QueryFieldsFilters = [
		"`hist_story`.`id`" => "Id",
		"IF(    CHAR_LENGTH(`hist_team1`.`id`) || CHAR_LENGTH(`hist_team1`.`team`), CONCAT_WS('',   `hist_team1`.`id`, ' - ', `hist_team1`.`team`), '') /* Team */" => "Team",
		"IF(    CHAR_LENGTH(`game_agent1`.`id`) || CHAR_LENGTH(`game_agent1`.`memberID`) || CHAR_LENGTH(`game_agent1`.`memberID`), CONCAT_WS('',   `game_agent1`.`id`, '   ', `game_agent1`.`memberID`, `game_agent1`.`memberID`), '') /* Project leader */" => "Project leader",
		"IF(    CHAR_LENGTH(`game_agent1`.`last_name`) || CHAR_LENGTH(`game_agent1`.`first_name`), CONCAT_WS('',   `game_agent1`.`last_name`, ', ', `game_agent1`.`first_name`), '') /* Proj. leader name */" => "Proj. leader name",
		"IF(    CHAR_LENGTH(`hist_community1`.`id`) || CHAR_LENGTH(`hist_community1`.`com_name`), CONCAT_WS('',   `hist_community1`.`id`, ' - ', `hist_community1`.`com_name`), '') /* Community name */" => "Community name",
		"`hist_story`.`story_title`" => "Story title",
		"IF(    CHAR_LENGTH(`class_bibliography_genre1`.`genre`), CONCAT_WS('',   `class_bibliography_genre1`.`genre`), '') /* Genre */" => "Genre",
		"`hist_story`.`approach`" => "Approach",
		"`hist_story`.`description`" => "Description",
		"`hist_story`.`tags`" => "Tags",
		"IF(    CHAR_LENGTH(`class_story_collab_type1`.`collab_type`), CONCAT_WS('',   `class_story_collab_type1`.`collab_type`), '') /* Collaboration status */" => "Collaboration status",
		"IF(    CHAR_LENGTH(`class_language1`.`short`), CONCAT_WS('',   `class_language1`.`short`), '') /* Language */" => "Language",
	];

	// Fields that can be quick searched
	$x->QueryFieldsQS = [
		"`hist_story`.`id`" => "id",
		"IF(    CHAR_LENGTH(`hist_team1`.`id`) || CHAR_LENGTH(`hist_team1`.`team`), CONCAT_WS('',   `hist_team1`.`id`, ' - ', `hist_team1`.`team`), '') /* Team */" => "team",
		"IF(    CHAR_LENGTH(`game_agent1`.`id`) || CHAR_LENGTH(`game_agent1`.`memberID`) || CHAR_LENGTH(`game_agent1`.`memberID`), CONCAT_WS('',   `game_agent1`.`id`, '   ', `game_agent1`.`memberID`, `game_agent1`.`memberID`), '') /* Project leader */" => "hist_lead_id",
		"IF(    CHAR_LENGTH(`game_agent1`.`last_name`) || CHAR_LENGTH(`game_agent1`.`first_name`), CONCAT_WS('',   `game_agent1`.`last_name`, ', ', `game_agent1`.`first_name`), '') /* Proj. leader name */" => "hist_lead_name",
		"IF(    CHAR_LENGTH(`hist_community1`.`id`) || CHAR_LENGTH(`hist_community1`.`com_name`), CONCAT_WS('',   `hist_community1`.`id`, ' - ', `hist_community1`.`com_name`), '') /* Community name */" => "community_id",
		"`hist_story`.`story_title`" => "story_title",
		"IF(    CHAR_LENGTH(`class_bibliography_genre1`.`genre`), CONCAT_WS('',   `class_bibliography_genre1`.`genre`), '') /* Genre */" => "genre",
		"`hist_story`.`approach`" => "approach",
		"`hist_story`.`description`" => "description",
		"`hist_story`.`tags`" => "tags",
		"IF(    CHAR_LENGTH(`class_story_collab_type1`.`collab_type`), CONCAT_WS('',   `class_story_collab_type1`.`collab_type`), '') /* Collaboration status */" => "collaboration_status",
		"IF(    CHAR_LENGTH(`class_language1`.`short`), CONCAT_WS('',   `class_language1`.`short`), '') /* Language */" => "language",
	];

	// Lookup fields that can be used as filterers
	$x->filterers = ['team' => 'Team', 'hist_lead_id' => 'Project leader', 'community_id' => 'Community name', 'genre' => 'Genre', 'collaboration_status' => 'Collaboration status', 'language' => 'Language', ];

	$x->QueryFrom = "`hist_story` LEFT JOIN `hist_team` as hist_team1 ON `hist_team1`.`id`=`hist_story`.`team` LEFT JOIN `hist_author` as hist_author1 ON `hist_author1`.`id`=`hist_story`.`hist_lead_id` LEFT JOIN `game_agent` as game_agent1 ON `game_agent1`.`id`=`hist_author1`.`agent_id` LEFT JOIN `hist_community` as hist_community1 ON `hist_community1`.`id`=`hist_story`.`community_id` LEFT JOIN `class_bibliography_genre` as class_bibliography_genre1 ON `class_bibliography_genre1`.`id`=`hist_story`.`genre` LEFT JOIN `class_story_collab_type` as class_story_collab_type1 ON `class_story_collab_type1`.`id`=`hist_story`.`collaboration_status` LEFT JOIN `class_language` as class_language1 ON `class_language1`.`id`=`hist_story`.`language` ";
	$x->QueryWhere = '';
	$x->QueryOrder = '';

	$x->AllowSelection = 1;
	$x->HideTableView = ($perm['view'] == 0 ? 1 : 0);
	$x->AllowDelete = $perm['delete'];
	$x->AllowMassDelete = (getLoggedAdmin() !== false);
	$x->AllowInsert = $perm['insert'];
	$x->AllowUpdate = $perm['edit'];
	$x->SeparateDV = 1;
	$x->AllowDeleteOfParents = 0;
	$x->AllowFilters = 1;
	$x->AllowSavingFilters = 1;
	$x->AllowSorting = 1;
	$x->AllowNavigation = 1;
	$x->AllowPrinting = 1;
	$x->AllowPrintingDV = 1;
	$x->AllowCSV = 1;
	$x->RecordsPerPage = 10;
	$x->QuickSearch = 1;
	$x->QuickSearchText = $Translation['quick search'];
	$x->ScriptFileName = 'hist_story_view.php';
	$x->RedirectAfterInsert = 'hist_story_view.php';
	$x->TableTitle = 'Nation story';
	$x->TableIcon = 'resources/table_icons/butterfly.png';
	$x->PrimaryKey = '`hist_story`.`id`';

	$x->ColWidth = [150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, ];
	$x->ColCaption = ['Id', 'Team', 'Project leader', 'Proj. leader name', 'Community name', 'Story title', 'Genre', 'Approach', 'Description', 'Tags', 'Collaboration status', 'Language', ];
	$x->ColFieldName = ['id', 'team', 'hist_lead_id', 'hist_lead_name', 'community_id', 'story_title', 'genre', 'approach', 'description', 'tags', 'collaboration_status', 'language', ];
	$x->ColNumber  = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, ];

	// template paths below are based on the app main directory
	$x->Template = 'templates/hist_story_templateTV.html';
	$x->SelectedTemplate = 'templates/hist_story_templateTVS.html';
	$x->TemplateDV = 'templates/hist_story_templateDV.html';
	$x->TemplateDVP = 'templates/hist_story_templateDVP.html';

	$x->ShowTableHeader = 1;
	$x->TVClasses = "";
	$x->DVClasses = "";
	$x->HasCalculatedFields = false;
	$x->AllowConsoleLog = false;
	$x->AllowDVNavigation = true;

	// mm: build the query based on current member's permissions
	$DisplayRecords = $_REQUEST['DisplayRecords'];
	if(!in_array($DisplayRecords, ['user', 'group'])) { $DisplayRecords = 'all'; }
	if($perm['view'] == 1 || ($perm['view'] > 1 && $DisplayRecords == 'user' && !$_REQUEST['NoFilter_x'])) { // view owner only
		$x->QueryFrom .= ', `membership_userrecords`';
		$x->QueryWhere = "WHERE `hist_story`.`id`=`membership_userrecords`.`pkValue` AND `membership_userrecords`.`tableName`='hist_story' AND LCASE(`membership_userrecords`.`memberID`)='" . getLoggedMemberID() . "'";
	} elseif($perm['view'] == 2 || ($perm['view'] > 2 && $DisplayRecords == 'group' && !$_REQUEST['NoFilter_x'])) { // view group only
		$x->QueryFrom .= ', `membership_userrecords`';
		$x->QueryWhere = "WHERE `hist_story`.`id`=`membership_userrecords`.`pkValue` AND `membership_userrecords`.`tableName`='hist_story' AND `membership_userrecords`.`groupID`='" . getLoggedGroupID() . "'";
	} elseif($perm['view'] == 3) { // view all
		// no further action
	} elseif($perm['view'] == 0) { // view none
		$x->QueryFields = ['Not enough permissions' => 'NEP'];
		$x->QueryFrom = '`hist_story`';
		$x->QueryWhere = '';
		$x->DefaultSortField = '';
	}
	// hook: hist_story_init
	$render = true;
	if(function_exists('hist_story_init')) {
		$args = [];
		$render = hist_story_init($x, getMemberInfo(), $args);
	}

	if($render) $x->Render();

	// hook: hist_story_header
	$headerCode = '';
	if(function_exists('hist_story_header')) {
		$args = [];
		$headerCode = hist_story_header($x->ContentType, getMemberInfo(), $args);
	}

	if(!$headerCode) {
		include_once("{$currDir}/header.php"); 
	} else {
		ob_start();
		include_once("{$currDir}/header.php");
		echo str_replace('<%%HEADER%%>', ob_get_clean(), $headerCode);
	}

	echo $x->HTML;

	// hook: hist_story_footer
	$footerCode = '';
	if(function_exists('hist_story_footer')) {
		$args = [];
		$footerCode = hist_story_footer($x->ContentType, getMemberInfo(), $args);
	}

	if(!$footerCode) {
		include_once("{$currDir}/footer.php"); 
	} else {
		ob_start();
		include_once("{$currDir}/footer.php");
		echo str_replace('<%%FOOTER%%>', ob_get_clean(), $footerCode);
	}
