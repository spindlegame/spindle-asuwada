<?php
// This script and data application were generated by AppGini 5.94
// Download AppGini for free from https://bigprof.com/appgini/download/

	$currDir = dirname(__FILE__);
	include_once("{$currDir}/lib.php");
	@include_once("{$currDir}/hooks/bio_storyline.php");
	include_once("{$currDir}/bio_storyline_dml.php");

	// mm: can the current member access this page?
	$perm = getTablePermissions('bio_storyline');
	if(!$perm['access']) {
		echo error_message($Translation['tableAccessDenied'], false);
		echo '<script>setTimeout(function() { window.location = "index.php?signOut=1"; }, 2000);</script>';
		exit;
	}

	$x = new DataList;
	$x->TableName = 'bio_storyline';

	// Fields that can be displayed in the table view
	$x->QueryFieldsTV = [
		"`bio_storyline`.`id`" => "id",
		"IF(    CHAR_LENGTH(`bio_story1`.`id`) || CHAR_LENGTH(`bio_story1`.`story_title`), CONCAT_WS('',   `bio_story1`.`id`, ' -  ', `bio_story1`.`story_title`), '') /* Story */" => "biography",
		"IF(    CHAR_LENGTH(`biblio_author1`.`id`) || CHAR_LENGTH(`biblio_author1`.`memberID`), CONCAT_WS('',   `biblio_author1`.`id`, '   ', `biblio_author1`.`memberID`), '') /* Author id */" => "author_id",
		"IF(    CHAR_LENGTH(`biblio_author1`.`last_name`) || CHAR_LENGTH(`biblio_author1`.`first_name`), CONCAT_WS('',   `biblio_author1`.`last_name`, ', ', `biblio_author1`.`first_name`), '') /* Author name */" => "author_name",
		"IF(    CHAR_LENGTH(`biblio_doc1`.`id`) || CHAR_LENGTH(`biblio_doc1`.`title`), CONCAT_WS('',   `biblio_doc1`.`id`, ' - ', `biblio_doc1`.`title`), '') /* Bibliography */" => "bibliography",
		"IF(    CHAR_LENGTH(`biblio_transcript1`.`id`) || CHAR_LENGTH(`biblio_transcript1`.`transcript_title`), CONCAT_WS('',   `biblio_transcript1`.`id`, ' - ', `biblio_transcript1`.`transcript_title`), '') /* Transcript */" => "transcript",
		"IF(    CHAR_LENGTH(`biblio_token1`.`id`) || CHAR_LENGTH(`biblio_token1`.`token_sequence`), CONCAT_WS('',   `biblio_token1`.`id`, ' - ', `biblio_token1`.`token_sequence`), '') /* Token sequence */" => "token_sequence",
		"IF(    CHAR_LENGTH(`biblio_token1`.`token`), CONCAT_WS('',   `biblio_token1`.`token`), '') /* Token */" => "token",
		"IF(    CHAR_LENGTH(`class_story_acts1`.`act`), CONCAT_WS('',   `class_story_acts1`.`act`), '') /* Act */" => "story_act",
		"`bio_storyline`.`sequence`" => "sequence",
		"IF(    CHAR_LENGTH(`game_agent1`.`id`) || CHAR_LENGTH(`game_agent1`.`memberID`) || CHAR_LENGTH(`game_agent1`.`last_name`) || CHAR_LENGTH(`game_agent1`.`first_name`), CONCAT_WS('',   `game_agent1`.`id`, '   ', `game_agent1`.`memberID`, `game_agent1`.`last_name`, ', ', `game_agent1`.`first_name`), '') /* Character */" => "character",
		"IF(    CHAR_LENGTH(`class_dramatica_character1`.`character`) || CHAR_LENGTH(`bio_chr1`.`role`), CONCAT_WS('',   `class_dramatica_character1`.`character`, ' - ', `bio_chr1`.`role`), '') /* Role */" => "role",
		"`bio_storyline`.`storyline_no`" => "storyline_no",
		"`bio_storyline`.`parenthetic`" => "parenthetic",
		"`bio_storyline`.`storyline_title`" => "storyline_title",
		"`bio_storyline`.`storyline`" => "storyline",
		"`bio_storyline`.`notes`" => "notes",
		"IF(    CHAR_LENGTH(`class_dramatica_steps1`.`step`), CONCAT_WS('',   `class_dramatica_steps1`.`step`), '') /* Storyweaving scene no */" => "storyweaving_scene_no",
		"IF(    CHAR_LENGTH(`bio_storyweaving_scene1`.`id`), CONCAT_WS('',   `bio_storyweaving_scene1`.`id`), '') /* Storyweaving scene */" => "storyweaving_scene",
		"IF(    CHAR_LENGTH(`bio_storyweaving_scene1`.`sequence`), CONCAT_WS('',   `bio_storyweaving_scene1`.`sequence`), '') /* Storyweaving sequence */" => "storyweaving_sequence",
		"IF(    CHAR_LENGTH(`class_dramatica_themes1`.`theme`), CONCAT_WS('',   `class_dramatica_themes1`.`theme`), '') /* Storyweaving theme */" => "storyweaving_theme",
		"IF(    CHAR_LENGTH(`bio_chr_scene1`.`id`) || CHAR_LENGTH(`bio_chr_scene1`.`scene`), CONCAT_WS('',   `bio_chr_scene1`.`id`, '   ', `bio_chr_scene1`.`scene`), '') /* Characterevent_scene */" => "character_scene",
		"IF(    CHAR_LENGTH(`bio_encounter_scene1`.`scene`), CONCAT_WS('',   `bio_encounter_scene1`.`scene`), '') /* Character event */" => "character_event",
		"if(`bio_storyline`.`startdate`,date_format(`bio_storyline`.`startdate`,'%d/%m/%Y %H:%i'),'')" => "startdate",
		"if(`bio_storyline`.`enddate`,date_format(`bio_storyline`.`enddate`,'%d/%m/%Y %H:%i'),'')" => "enddate",
	];
	// mapping incoming sort by requests to actual query fields
	$x->SortFields = [
		1 => '`bio_storyline`.`id`',
		2 => 2,
		3 => 3,
		4 => 4,
		5 => 5,
		6 => 6,
		7 => 7,
		8 => '`biblio_token1`.`token`',
		9 => '`class_story_acts1`.`act`',
		10 => 10,
		11 => 11,
		12 => 12,
		13 => 13,
		14 => 14,
		15 => 15,
		16 => 16,
		17 => 17,
		18 => 18,
		19 => '`bio_storyweaving_scene1`.`id`',
		20 => '`bio_storyweaving_scene1`.`sequence`',
		21 => 21,
		22 => 22,
		23 => '`bio_encounter_scene1`.`scene`',
		24 => '`bio_storyline`.`startdate`',
		25 => '`bio_storyline`.`enddate`',
	];

	// Fields that can be displayed in the csv file
	$x->QueryFieldsCSV = [
		"`bio_storyline`.`id`" => "id",
		"IF(    CHAR_LENGTH(`bio_story1`.`id`) || CHAR_LENGTH(`bio_story1`.`story_title`), CONCAT_WS('',   `bio_story1`.`id`, ' -  ', `bio_story1`.`story_title`), '') /* Story */" => "biography",
		"IF(    CHAR_LENGTH(`biblio_author1`.`id`) || CHAR_LENGTH(`biblio_author1`.`memberID`), CONCAT_WS('',   `biblio_author1`.`id`, '   ', `biblio_author1`.`memberID`), '') /* Author id */" => "author_id",
		"IF(    CHAR_LENGTH(`biblio_author1`.`last_name`) || CHAR_LENGTH(`biblio_author1`.`first_name`), CONCAT_WS('',   `biblio_author1`.`last_name`, ', ', `biblio_author1`.`first_name`), '') /* Author name */" => "author_name",
		"IF(    CHAR_LENGTH(`biblio_doc1`.`id`) || CHAR_LENGTH(`biblio_doc1`.`title`), CONCAT_WS('',   `biblio_doc1`.`id`, ' - ', `biblio_doc1`.`title`), '') /* Bibliography */" => "bibliography",
		"IF(    CHAR_LENGTH(`biblio_transcript1`.`id`) || CHAR_LENGTH(`biblio_transcript1`.`transcript_title`), CONCAT_WS('',   `biblio_transcript1`.`id`, ' - ', `biblio_transcript1`.`transcript_title`), '') /* Transcript */" => "transcript",
		"IF(    CHAR_LENGTH(`biblio_token1`.`id`) || CHAR_LENGTH(`biblio_token1`.`token_sequence`), CONCAT_WS('',   `biblio_token1`.`id`, ' - ', `biblio_token1`.`token_sequence`), '') /* Token sequence */" => "token_sequence",
		"IF(    CHAR_LENGTH(`biblio_token1`.`token`), CONCAT_WS('',   `biblio_token1`.`token`), '') /* Token */" => "token",
		"IF(    CHAR_LENGTH(`class_story_acts1`.`act`), CONCAT_WS('',   `class_story_acts1`.`act`), '') /* Act */" => "story_act",
		"`bio_storyline`.`sequence`" => "sequence",
		"IF(    CHAR_LENGTH(`game_agent1`.`id`) || CHAR_LENGTH(`game_agent1`.`memberID`) || CHAR_LENGTH(`game_agent1`.`last_name`) || CHAR_LENGTH(`game_agent1`.`first_name`), CONCAT_WS('',   `game_agent1`.`id`, '   ', `game_agent1`.`memberID`, `game_agent1`.`last_name`, ', ', `game_agent1`.`first_name`), '') /* Character */" => "character",
		"IF(    CHAR_LENGTH(`class_dramatica_character1`.`character`) || CHAR_LENGTH(`bio_chr1`.`role`), CONCAT_WS('',   `class_dramatica_character1`.`character`, ' - ', `bio_chr1`.`role`), '') /* Role */" => "role",
		"`bio_storyline`.`storyline_no`" => "storyline_no",
		"`bio_storyline`.`parenthetic`" => "parenthetic",
		"`bio_storyline`.`storyline_title`" => "storyline_title",
		"`bio_storyline`.`storyline`" => "storyline",
		"`bio_storyline`.`notes`" => "notes",
		"IF(    CHAR_LENGTH(`class_dramatica_steps1`.`step`), CONCAT_WS('',   `class_dramatica_steps1`.`step`), '') /* Storyweaving scene no */" => "storyweaving_scene_no",
		"IF(    CHAR_LENGTH(`bio_storyweaving_scene1`.`id`), CONCAT_WS('',   `bio_storyweaving_scene1`.`id`), '') /* Storyweaving scene */" => "storyweaving_scene",
		"IF(    CHAR_LENGTH(`bio_storyweaving_scene1`.`sequence`), CONCAT_WS('',   `bio_storyweaving_scene1`.`sequence`), '') /* Storyweaving sequence */" => "storyweaving_sequence",
		"IF(    CHAR_LENGTH(`class_dramatica_themes1`.`theme`), CONCAT_WS('',   `class_dramatica_themes1`.`theme`), '') /* Storyweaving theme */" => "storyweaving_theme",
		"IF(    CHAR_LENGTH(`bio_chr_scene1`.`id`) || CHAR_LENGTH(`bio_chr_scene1`.`scene`), CONCAT_WS('',   `bio_chr_scene1`.`id`, '   ', `bio_chr_scene1`.`scene`), '') /* Characterevent_scene */" => "character_scene",
		"IF(    CHAR_LENGTH(`bio_encounter_scene1`.`scene`), CONCAT_WS('',   `bio_encounter_scene1`.`scene`), '') /* Character event */" => "character_event",
		"if(`bio_storyline`.`startdate`,date_format(`bio_storyline`.`startdate`,'%d/%m/%Y %H:%i'),'')" => "startdate",
		"if(`bio_storyline`.`enddate`,date_format(`bio_storyline`.`enddate`,'%d/%m/%Y %H:%i'),'')" => "enddate",
	];
	// Fields that can be filtered
	$x->QueryFieldsFilters = [
		"`bio_storyline`.`id`" => "Id",
		"IF(    CHAR_LENGTH(`bio_story1`.`id`) || CHAR_LENGTH(`bio_story1`.`story_title`), CONCAT_WS('',   `bio_story1`.`id`, ' -  ', `bio_story1`.`story_title`), '') /* Story */" => "Story",
		"IF(    CHAR_LENGTH(`biblio_author1`.`id`) || CHAR_LENGTH(`biblio_author1`.`memberID`), CONCAT_WS('',   `biblio_author1`.`id`, '   ', `biblio_author1`.`memberID`), '') /* Author id */" => "Author id",
		"IF(    CHAR_LENGTH(`biblio_author1`.`last_name`) || CHAR_LENGTH(`biblio_author1`.`first_name`), CONCAT_WS('',   `biblio_author1`.`last_name`, ', ', `biblio_author1`.`first_name`), '') /* Author name */" => "Author name",
		"IF(    CHAR_LENGTH(`biblio_doc1`.`id`) || CHAR_LENGTH(`biblio_doc1`.`title`), CONCAT_WS('',   `biblio_doc1`.`id`, ' - ', `biblio_doc1`.`title`), '') /* Bibliography */" => "Bibliography",
		"IF(    CHAR_LENGTH(`biblio_transcript1`.`id`) || CHAR_LENGTH(`biblio_transcript1`.`transcript_title`), CONCAT_WS('',   `biblio_transcript1`.`id`, ' - ', `biblio_transcript1`.`transcript_title`), '') /* Transcript */" => "Transcript",
		"IF(    CHAR_LENGTH(`biblio_token1`.`id`) || CHAR_LENGTH(`biblio_token1`.`token_sequence`), CONCAT_WS('',   `biblio_token1`.`id`, ' - ', `biblio_token1`.`token_sequence`), '') /* Token sequence */" => "Token sequence",
		"IF(    CHAR_LENGTH(`biblio_token1`.`token`), CONCAT_WS('',   `biblio_token1`.`token`), '') /* Token */" => "Token",
		"IF(    CHAR_LENGTH(`class_story_acts1`.`act`), CONCAT_WS('',   `class_story_acts1`.`act`), '') /* Act */" => "Act",
		"`bio_storyline`.`sequence`" => "Sequence",
		"IF(    CHAR_LENGTH(`game_agent1`.`id`) || CHAR_LENGTH(`game_agent1`.`memberID`) || CHAR_LENGTH(`game_agent1`.`last_name`) || CHAR_LENGTH(`game_agent1`.`first_name`), CONCAT_WS('',   `game_agent1`.`id`, '   ', `game_agent1`.`memberID`, `game_agent1`.`last_name`, ', ', `game_agent1`.`first_name`), '') /* Character */" => "Character",
		"IF(    CHAR_LENGTH(`class_dramatica_character1`.`character`) || CHAR_LENGTH(`bio_chr1`.`role`), CONCAT_WS('',   `class_dramatica_character1`.`character`, ' - ', `bio_chr1`.`role`), '') /* Role */" => "Role",
		"`bio_storyline`.`storyline_no`" => "Storyline no.",
		"`bio_storyline`.`parenthetic`" => "Parenthetic",
		"`bio_storyline`.`storyline_title`" => "Storyline title",
		"`bio_storyline`.`storyline`" => "Storyline",
		"`bio_storyline`.`notes`" => "Notes",
		"IF(    CHAR_LENGTH(`class_dramatica_steps1`.`step`), CONCAT_WS('',   `class_dramatica_steps1`.`step`), '') /* Storyweaving scene no */" => "Storyweaving scene no",
		"IF(    CHAR_LENGTH(`bio_storyweaving_scene1`.`id`), CONCAT_WS('',   `bio_storyweaving_scene1`.`id`), '') /* Storyweaving scene */" => "Storyweaving scene",
		"IF(    CHAR_LENGTH(`bio_storyweaving_scene1`.`sequence`), CONCAT_WS('',   `bio_storyweaving_scene1`.`sequence`), '') /* Storyweaving sequence */" => "Storyweaving sequence",
		"IF(    CHAR_LENGTH(`class_dramatica_themes1`.`theme`), CONCAT_WS('',   `class_dramatica_themes1`.`theme`), '') /* Storyweaving theme */" => "Storyweaving theme",
		"IF(    CHAR_LENGTH(`bio_chr_scene1`.`id`) || CHAR_LENGTH(`bio_chr_scene1`.`scene`), CONCAT_WS('',   `bio_chr_scene1`.`id`, '   ', `bio_chr_scene1`.`scene`), '') /* Characterevent_scene */" => "Characterevent_scene",
		"IF(    CHAR_LENGTH(`bio_encounter_scene1`.`scene`), CONCAT_WS('',   `bio_encounter_scene1`.`scene`), '') /* Character event */" => "Character event",
		"`bio_storyline`.`startdate`" => "Date start",
		"`bio_storyline`.`enddate`" => "Date end",
	];

	// Fields that can be quick searched
	$x->QueryFieldsQS = [
		"`bio_storyline`.`id`" => "id",
		"IF(    CHAR_LENGTH(`bio_story1`.`id`) || CHAR_LENGTH(`bio_story1`.`story_title`), CONCAT_WS('',   `bio_story1`.`id`, ' -  ', `bio_story1`.`story_title`), '') /* Story */" => "biography",
		"IF(    CHAR_LENGTH(`biblio_author1`.`id`) || CHAR_LENGTH(`biblio_author1`.`memberID`), CONCAT_WS('',   `biblio_author1`.`id`, '   ', `biblio_author1`.`memberID`), '') /* Author id */" => "author_id",
		"IF(    CHAR_LENGTH(`biblio_author1`.`last_name`) || CHAR_LENGTH(`biblio_author1`.`first_name`), CONCAT_WS('',   `biblio_author1`.`last_name`, ', ', `biblio_author1`.`first_name`), '') /* Author name */" => "author_name",
		"IF(    CHAR_LENGTH(`biblio_doc1`.`id`) || CHAR_LENGTH(`biblio_doc1`.`title`), CONCAT_WS('',   `biblio_doc1`.`id`, ' - ', `biblio_doc1`.`title`), '') /* Bibliography */" => "bibliography",
		"IF(    CHAR_LENGTH(`biblio_transcript1`.`id`) || CHAR_LENGTH(`biblio_transcript1`.`transcript_title`), CONCAT_WS('',   `biblio_transcript1`.`id`, ' - ', `biblio_transcript1`.`transcript_title`), '') /* Transcript */" => "transcript",
		"IF(    CHAR_LENGTH(`biblio_token1`.`id`) || CHAR_LENGTH(`biblio_token1`.`token_sequence`), CONCAT_WS('',   `biblio_token1`.`id`, ' - ', `biblio_token1`.`token_sequence`), '') /* Token sequence */" => "token_sequence",
		"IF(    CHAR_LENGTH(`biblio_token1`.`token`), CONCAT_WS('',   `biblio_token1`.`token`), '') /* Token */" => "token",
		"IF(    CHAR_LENGTH(`class_story_acts1`.`act`), CONCAT_WS('',   `class_story_acts1`.`act`), '') /* Act */" => "story_act",
		"`bio_storyline`.`sequence`" => "sequence",
		"IF(    CHAR_LENGTH(`game_agent1`.`id`) || CHAR_LENGTH(`game_agent1`.`memberID`) || CHAR_LENGTH(`game_agent1`.`last_name`) || CHAR_LENGTH(`game_agent1`.`first_name`), CONCAT_WS('',   `game_agent1`.`id`, '   ', `game_agent1`.`memberID`, `game_agent1`.`last_name`, ', ', `game_agent1`.`first_name`), '') /* Character */" => "character",
		"IF(    CHAR_LENGTH(`class_dramatica_character1`.`character`) || CHAR_LENGTH(`bio_chr1`.`role`), CONCAT_WS('',   `class_dramatica_character1`.`character`, ' - ', `bio_chr1`.`role`), '') /* Role */" => "role",
		"`bio_storyline`.`storyline_no`" => "storyline_no",
		"`bio_storyline`.`parenthetic`" => "parenthetic",
		"`bio_storyline`.`storyline_title`" => "storyline_title",
		"`bio_storyline`.`storyline`" => "storyline",
		"`bio_storyline`.`notes`" => "notes",
		"IF(    CHAR_LENGTH(`class_dramatica_steps1`.`step`), CONCAT_WS('',   `class_dramatica_steps1`.`step`), '') /* Storyweaving scene no */" => "storyweaving_scene_no",
		"IF(    CHAR_LENGTH(`bio_storyweaving_scene1`.`id`), CONCAT_WS('',   `bio_storyweaving_scene1`.`id`), '') /* Storyweaving scene */" => "storyweaving_scene",
		"IF(    CHAR_LENGTH(`bio_storyweaving_scene1`.`sequence`), CONCAT_WS('',   `bio_storyweaving_scene1`.`sequence`), '') /* Storyweaving sequence */" => "storyweaving_sequence",
		"IF(    CHAR_LENGTH(`class_dramatica_themes1`.`theme`), CONCAT_WS('',   `class_dramatica_themes1`.`theme`), '') /* Storyweaving theme */" => "storyweaving_theme",
		"IF(    CHAR_LENGTH(`bio_chr_scene1`.`id`) || CHAR_LENGTH(`bio_chr_scene1`.`scene`), CONCAT_WS('',   `bio_chr_scene1`.`id`, '   ', `bio_chr_scene1`.`scene`), '') /* Characterevent_scene */" => "character_scene",
		"IF(    CHAR_LENGTH(`bio_encounter_scene1`.`scene`), CONCAT_WS('',   `bio_encounter_scene1`.`scene`), '') /* Character event */" => "character_event",
		"if(`bio_storyline`.`startdate`,date_format(`bio_storyline`.`startdate`,'%d/%m/%Y %H:%i'),'')" => "startdate",
		"if(`bio_storyline`.`enddate`,date_format(`bio_storyline`.`enddate`,'%d/%m/%Y %H:%i'),'')" => "enddate",
	];

	// Lookup fields that can be used as filterers
	$x->filterers = ['biography' => 'Story', 'author_id' => 'Author id', 'bibliography' => 'Bibliography', 'transcript' => 'Transcript', 'token' => 'Token', 'story_act' => 'Act', 'character' => 'Character', 'storyweaving_scene_no' => 'Storyweaving scene no', 'character_scene' => 'Characterevent_scene', 'character_event' => 'Character event', ];

	$x->QueryFrom = "`bio_storyline` LEFT JOIN `bio_story` as bio_story1 ON `bio_story1`.`id`=`bio_storyline`.`biography` LEFT JOIN `biblio_author` as biblio_author1 ON `biblio_author1`.`id`=`bio_storyline`.`author_id` LEFT JOIN `biblio_doc` as biblio_doc1 ON `biblio_doc1`.`id`=`bio_storyline`.`bibliography` LEFT JOIN `biblio_transcript` as biblio_transcript1 ON `biblio_transcript1`.`id`=`bio_storyline`.`transcript` LEFT JOIN `biblio_token` as biblio_token1 ON `biblio_token1`.`id`=`bio_storyline`.`token` LEFT JOIN `class_story_acts` as class_story_acts1 ON `class_story_acts1`.`id`=`bio_storyline`.`story_act` LEFT JOIN `bio_chr` as bio_chr1 ON `bio_chr1`.`id`=`bio_storyline`.`character` LEFT JOIN `game_agent` as game_agent1 ON `game_agent1`.`id`=`bio_chr1`.`agent_id` LEFT JOIN `bio_storyweaving_scene` as bio_storyweaving_scene1 ON `bio_storyweaving_scene1`.`id`=`bio_storyline`.`storyweaving_scene_no` LEFT JOIN `class_dramatica_steps` as class_dramatica_steps1 ON `class_dramatica_steps1`.`id`=`bio_storyweaving_scene1`.`step` LEFT JOIN `bio_chr_scene` as bio_chr_scene1 ON `bio_chr_scene1`.`id`=`bio_storyline`.`character_scene` LEFT JOIN `bio_encounter_scene` as bio_encounter_scene1 ON `bio_encounter_scene1`.`id`=`bio_storyline`.`character_event` LEFT JOIN `class_dramatica_character` as class_dramatica_character1 ON `class_dramatica_character1`.`id`=`bio_chr1`.`bio_character` LEFT JOIN `class_dramatica_themes` as class_dramatica_themes1 ON `class_dramatica_themes1`.`id`=`bio_storyweaving_scene1`.`theme` ";
	$x->QueryWhere = '';
	$x->QueryOrder = '';

	$x->AllowSelection = 1;
	$x->HideTableView = ($perm['view'] == 0 ? 1 : 0);
	$x->AllowDelete = $perm['delete'];
	$x->AllowMassDelete = (getLoggedAdmin() !== false);
	$x->AllowInsert = $perm['insert'];
	$x->AllowUpdate = $perm['edit'];
	$x->SeparateDV = 1;
	$x->AllowDeleteOfParents = 0;
	$x->AllowFilters = 1;
	$x->AllowSavingFilters = 1;
	$x->AllowSorting = 1;
	$x->AllowNavigation = 1;
	$x->AllowPrinting = 1;
	$x->AllowPrintingDV = 1;
	$x->AllowCSV = 1;
	$x->RecordsPerPage = 10;
	$x->QuickSearch = 1;
	$x->QuickSearchText = $Translation['quick search'];
	$x->ScriptFileName = 'bio_storyline_view.php';
	$x->RedirectAfterInsert = 'bio_storyline_view.php?SelectedID=#ID#';
	$x->TableTitle = 'Bio. storylines';
	$x->TableIcon = 'resources/table_icons/chart_curve_edit.png';
	$x->PrimaryKey = '`bio_storyline`.`id`';

	$x->ColWidth = [150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, ];
	$x->ColCaption = ['Id', 'Story', 'Author id', 'Author name', 'Bibliography', 'Transcript', 'Token sequence', 'Token', 'Act', 'Sequence', 'Character', 'Role', 'Storyline no.', 'Parenthetic', 'Storyline title', 'Storyline', 'Notes', 'Storyweaving scene no', 'Storyweaving scene', 'Storyweaving sequence', 'Storyweaving theme', 'Characterevent_scene', 'Character event', 'Date start', 'Date end', ];
	$x->ColFieldName = ['id', 'biography', 'author_id', 'author_name', 'bibliography', 'transcript', 'token_sequence', 'token', 'story_act', 'sequence', 'character', 'role', 'storyline_no', 'parenthetic', 'storyline_title', 'storyline', 'notes', 'storyweaving_scene_no', 'storyweaving_scene', 'storyweaving_sequence', 'storyweaving_theme', 'character_scene', 'character_event', 'startdate', 'enddate', ];
	$x->ColNumber  = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, ];

	// template paths below are based on the app main directory
	$x->Template = 'templates/bio_storyline_templateTV.html';
	$x->SelectedTemplate = 'templates/bio_storyline_templateTVS.html';
	$x->TemplateDV = 'templates/bio_storyline_templateDV.html';
	$x->TemplateDVP = 'templates/bio_storyline_templateDVP.html';

	$x->ShowTableHeader = 1;
	$x->TVClasses = "";
	$x->DVClasses = "";
	$x->HasCalculatedFields = false;
	$x->AllowConsoleLog = false;
	$x->AllowDVNavigation = true;

	// mm: build the query based on current member's permissions
	$DisplayRecords = $_REQUEST['DisplayRecords'];
	if(!in_array($DisplayRecords, ['user', 'group'])) { $DisplayRecords = 'all'; }
	if($perm['view'] == 1 || ($perm['view'] > 1 && $DisplayRecords == 'user' && !$_REQUEST['NoFilter_x'])) { // view owner only
		$x->QueryFrom .= ', `membership_userrecords`';
		$x->QueryWhere = "WHERE `bio_storyline`.`id`=`membership_userrecords`.`pkValue` AND `membership_userrecords`.`tableName`='bio_storyline' AND LCASE(`membership_userrecords`.`memberID`)='" . getLoggedMemberID() . "'";
	} elseif($perm['view'] == 2 || ($perm['view'] > 2 && $DisplayRecords == 'group' && !$_REQUEST['NoFilter_x'])) { // view group only
		$x->QueryFrom .= ', `membership_userrecords`';
		$x->QueryWhere = "WHERE `bio_storyline`.`id`=`membership_userrecords`.`pkValue` AND `membership_userrecords`.`tableName`='bio_storyline' AND `membership_userrecords`.`groupID`='" . getLoggedGroupID() . "'";
	} elseif($perm['view'] == 3) { // view all
		// no further action
	} elseif($perm['view'] == 0) { // view none
		$x->QueryFields = ['Not enough permissions' => 'NEP'];
		$x->QueryFrom = '`bio_storyline`';
		$x->QueryWhere = '';
		$x->DefaultSortField = '';
	}
	// hook: bio_storyline_init
	$render = true;
	if(function_exists('bio_storyline_init')) {
		$args = [];
		$render = bio_storyline_init($x, getMemberInfo(), $args);
	}

	if($render) $x->Render();

	// hook: bio_storyline_header
	$headerCode = '';
	if(function_exists('bio_storyline_header')) {
		$args = [];
		$headerCode = bio_storyline_header($x->ContentType, getMemberInfo(), $args);
	}

	if(!$headerCode) {
		include_once("{$currDir}/header.php"); 
	} else {
		ob_start();
		include_once("{$currDir}/header.php");
		echo str_replace('<%%HEADER%%>', ob_get_clean(), $headerCode);
	}

	echo $x->HTML;

	// hook: bio_storyline_footer
	$footerCode = '';
	if(function_exists('bio_storyline_footer')) {
		$args = [];
		$footerCode = bio_storyline_footer($x->ContentType, getMemberInfo(), $args);
	}

	if(!$footerCode) {
		include_once("{$currDir}/footer.php"); 
	} else {
		ob_start();
		include_once("{$currDir}/footer.php");
		echo str_replace('<%%FOOTER%%>', ob_get_clean(), $footerCode);
	}
