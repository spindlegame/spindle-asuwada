<?php

// Data functions (insert, update, delete, form) for table hist_encounter

// This script and data application were generated by AppGini 5.94
// Download AppGini for free from https://bigprof.com/appgini/download/

function hist_encounter_insert(&$error_message = '') {
	global $Translation;

	// mm: can member insert record?
	$arrPerm = getTablePermissions('hist_encounter');
	if(!$arrPerm['insert']) return false;

	$data = [
		'bio_chrA' => Request::val('bio_chrA', ''),
		'bio_storyA' => Request::val('bio_storyA', ''),
		'bio_storyline' => Request::val('bio_storyline', ''),
		'bio_storytext' => Request::val('bio_storytext', ''),
		'sceneA' => Request::val('sceneA', ''),
		'bio_chrB' => Request::val('bio_chrB', ''),
		'bio_storyB' => Request::val('bio_storyB', ''),
		'bio_storylineB' => Request::val('bio_storylineB', ''),
		'bio_storytextB' => Request::val('bio_storytextB', ''),
		'type' => Request::val('type', ''),
		'conflicttype' => Request::val('conflicttype', ''),
		'story_scene' => Request::val('story_scene', ''),
		'nd_color' => Request::val('nd_color', ''),
		'nd_width' => Request::val('nd_width', ''),
		'nd_style' => Request::val('nd_style', ''),
		'nd_opacity' => Request::val('nd_opacity', ''),
		'nd_visibility' => Request::val('nd_visibility', ''),
		'lbl_lable' => Request::val('lbl_lable', ''),
		'lbl_color' => Request::val('lbl_color', ''),
		'lbl_size' => Request::val('lbl_size', ''),
	];


	// hook: hist_encounter_before_insert
	if(function_exists('hist_encounter_before_insert')) {
		$args = [];
		if(!hist_encounter_before_insert($data, getMemberInfo(), $args)) {
			if(isset($args['error_message'])) $error_message = $args['error_message'];
			return false;
		}
	}

	$error = '';
	// set empty fields to NULL
	$data = array_map(function($v) { return ($v === '' ? NULL : $v); }, $data);
	insert('hist_encounter', backtick_keys_once($data), $error);
	if($error)
		die("{$error}<br><a href=\"#\" onclick=\"history.go(-1);\">{$Translation['< back']}</a>");

	$recID = db_insert_id(db_link());

	update_calc_fields('hist_encounter', $recID, calculated_fields()['hist_encounter']);

	// hook: hist_encounter_after_insert
	if(function_exists('hist_encounter_after_insert')) {
		$res = sql("SELECT * FROM `hist_encounter` WHERE `id`='" . makeSafe($recID, false) . "' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)) {
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = makeSafe($recID, false);
		$args=[];
		if(!hist_encounter_after_insert($data, getMemberInfo(), $args)) { return $recID; }
	}

	// mm: save ownership data
	set_record_owner('hist_encounter', $recID, getLoggedMemberID());

	// if this record is a copy of another record, copy children if applicable
	if(!empty($_REQUEST['SelectedID'])) hist_encounter_copy_children($recID, $_REQUEST['SelectedID']);

	return $recID;
}

function hist_encounter_copy_children($destination_id, $source_id) {
	global $Translation;
	$requests = []; // array of curl handlers for launching insert requests
	$eo = ['silentErrors' => true];
	$safe_sid = makeSafe($source_id);

	// launch requests, asynchronously
	curl_batch($requests);
}

function hist_encounter_delete($selected_id, $AllowDeleteOfParents = false, $skipChecks = false) {
	// insure referential integrity ...
	global $Translation;
	$selected_id = makeSafe($selected_id);

	// mm: can member delete record?
	if(!check_record_permission('hist_encounter', $selected_id, 'delete')) {
		return $Translation['You don\'t have enough permissions to delete this record'];
	}

	// hook: hist_encounter_before_delete
	if(function_exists('hist_encounter_before_delete')) {
		$args = [];
		if(!hist_encounter_before_delete($selected_id, $skipChecks, getMemberInfo(), $args))
			return $Translation['Couldn\'t delete this record'] . (
				!empty($args['error_message']) ?
					'<div class="text-bold">' . strip_tags($args['error_message']) . '</div>'
					: '' 
			);
	}

	sql("DELETE FROM `hist_encounter` WHERE `id`='{$selected_id}'", $eo);

	// hook: hist_encounter_after_delete
	if(function_exists('hist_encounter_after_delete')) {
		$args = [];
		hist_encounter_after_delete($selected_id, getMemberInfo(), $args);
	}

	// mm: delete ownership data
	sql("DELETE FROM `membership_userrecords` WHERE `tableName`='hist_encounter' AND `pkValue`='{$selected_id}'", $eo);
}

function hist_encounter_update(&$selected_id, &$error_message = '') {
	global $Translation;

	// mm: can member edit record?
	if(!check_record_permission('hist_encounter', $selected_id, 'edit')) return false;

	$data = [
		'bio_chrA' => Request::val('bio_chrA', ''),
		'bio_storyA' => Request::val('bio_storyA', ''),
		'bio_storyline' => Request::val('bio_storyline', ''),
		'bio_storytext' => Request::val('bio_storytext', ''),
		'sceneA' => Request::val('sceneA', ''),
		'bio_chrB' => Request::val('bio_chrB', ''),
		'bio_storyB' => Request::val('bio_storyB', ''),
		'bio_storylineB' => Request::val('bio_storylineB', ''),
		'bio_storytextB' => Request::val('bio_storytextB', ''),
		'type' => Request::val('type', ''),
		'conflicttype' => Request::val('conflicttype', ''),
		'story_scene' => Request::val('story_scene', ''),
		'nd_color' => Request::val('nd_color', ''),
		'nd_width' => Request::val('nd_width', ''),
		'nd_style' => Request::val('nd_style', ''),
		'nd_opacity' => Request::val('nd_opacity', ''),
		'nd_visibility' => Request::val('nd_visibility', ''),
		'lbl_lable' => Request::val('lbl_lable', ''),
		'lbl_color' => Request::val('lbl_color', ''),
		'lbl_size' => Request::val('lbl_size', ''),
	];

	// get existing values
	$old_data = getRecord('hist_encounter', $selected_id);
	if(is_array($old_data)) {
		$old_data = array_map('makeSafe', $old_data);
		$old_data['selectedID'] = makeSafe($selected_id);
	}

	$data['selectedID'] = makeSafe($selected_id);

	// hook: hist_encounter_before_update
	if(function_exists('hist_encounter_before_update')) {
		$args = ['old_data' => $old_data];
		if(!hist_encounter_before_update($data, getMemberInfo(), $args)) {
			if(isset($args['error_message'])) $error_message = $args['error_message'];
			return false;
		}
	}

	$set = $data; unset($set['selectedID']);
	foreach ($set as $field => $value) {
		$set[$field] = ($value !== '' && $value !== NULL) ? $value : NULL;
	}

	if(!update(
		'hist_encounter', 
		backtick_keys_once($set), 
		['`id`' => $selected_id], 
		$error_message
	)) {
		echo $error_message;
		echo '<a href="hist_encounter_view.php?SelectedID=' . urlencode($selected_id) . "\">{$Translation['< back']}</a>";
		exit;
	}


	$eo = ['silentErrors' => true];

	update_calc_fields('hist_encounter', $data['selectedID'], calculated_fields()['hist_encounter']);

	// hook: hist_encounter_after_update
	if(function_exists('hist_encounter_after_update')) {
		$res = sql("SELECT * FROM `hist_encounter` WHERE `id`='{$data['selectedID']}' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)) $data = array_map('makeSafe', $row);

		$data['selectedID'] = $data['id'];
		$args = ['old_data' => $old_data];
		if(!hist_encounter_after_update($data, getMemberInfo(), $args)) return;
	}

	// mm: update ownership data
	sql("UPDATE `membership_userrecords` SET `dateUpdated`='" . time() . "' WHERE `tableName`='hist_encounter' AND `pkValue`='" . makeSafe($selected_id) . "'", $eo);
}

function hist_encounter_form($selected_id = '', $AllowUpdate = 1, $AllowInsert = 1, $AllowDelete = 1, $ShowCancel = 0, $TemplateDV = '', $TemplateDVP = '') {
	// function to return an editable form for a table records
	// and fill it with data of record whose ID is $selected_id. If $selected_id
	// is empty, an empty form is shown, with only an 'Add New'
	// button displayed.

	global $Translation;

	// mm: get table permissions
	$arrPerm = getTablePermissions('hist_encounter');
	if(!$arrPerm['insert'] && $selected_id=='') { return ''; }
	$AllowInsert = ($arrPerm['insert'] ? true : false);
	// print preview?
	$dvprint = false;
	if($selected_id && $_REQUEST['dvprint_x'] != '') {
		$dvprint = true;
	}

	$filterer_bio_chrA = thisOr($_REQUEST['filterer_bio_chrA'], '');
	$filterer_bio_storyA = thisOr($_REQUEST['filterer_bio_storyA'], '');
	$filterer_bio_storyline = thisOr($_REQUEST['filterer_bio_storyline'], '');
	$filterer_bio_storytext = thisOr($_REQUEST['filterer_bio_storytext'], '');
	$filterer_sceneA = thisOr($_REQUEST['filterer_sceneA'], '');
	$filterer_bio_chrB = thisOr($_REQUEST['filterer_bio_chrB'], '');
	$filterer_bio_storyB = thisOr($_REQUEST['filterer_bio_storyB'], '');
	$filterer_bio_storylineB = thisOr($_REQUEST['filterer_bio_storylineB'], '');
	$filterer_bio_storytextB = thisOr($_REQUEST['filterer_bio_storytextB'], '');

	// populate filterers, starting from children to grand-parents
	if($filterer_bio_storyline && !$filterer_bio_chrA) $filterer_bio_chrA = sqlValue("select character from bio_storyline where id='" . makeSafe($filterer_bio_storyline) . "'");
	if($filterer_bio_storyline && !$filterer_bio_storyA) $filterer_bio_storyA = sqlValue("select biography from bio_storyline where id='" . makeSafe($filterer_bio_storyline) . "'");
	if($filterer_bio_storytext && !$filterer_bio_chrA) $filterer_bio_chrA = sqlValue("select character from bio_storyline where id='" . makeSafe($filterer_bio_storytext) . "'");
	if($filterer_bio_storytext && !$filterer_bio_storyA) $filterer_bio_storyA = sqlValue("select biography from bio_storyline where id='" . makeSafe($filterer_bio_storytext) . "'");
	if($filterer_sceneA && !$filterer_bio_storyA) $filterer_bio_storyA = sqlValue("select bio_story from hist_chr_scene where id='" . makeSafe($filterer_sceneA) . "'");
	if($filterer_sceneA && !$filterer_bio_storyline) $filterer_bio_storyline = sqlValue("select bio_storyline_no from hist_chr_scene where id='" . makeSafe($filterer_sceneA) . "'");
	if($filterer_sceneA && !$filterer_bio_storytext) $filterer_bio_storytext = sqlValue("select bio_storyline_no from hist_chr_scene where id='" . makeSafe($filterer_sceneA) . "'");
	if($filterer_bio_storylineB && !$filterer_bio_chrB) $filterer_bio_chrB = sqlValue("select character from bio_storyline where id='" . makeSafe($filterer_bio_storylineB) . "'");
	if($filterer_bio_storylineB && !$filterer_bio_storyB) $filterer_bio_storyB = sqlValue("select biography from bio_storyline where id='" . makeSafe($filterer_bio_storylineB) . "'");
	if($filterer_bio_storytextB && !$filterer_bio_chrB) $filterer_bio_chrB = sqlValue("select character from bio_storyline where id='" . makeSafe($filterer_bio_storytextB) . "'");
	if($filterer_bio_storytextB && !$filterer_bio_storyB) $filterer_bio_storyB = sqlValue("select biography from bio_storyline where id='" . makeSafe($filterer_bio_storytextB) . "'");

	// unique random identifier
	$rnd1 = ($dvprint ? rand(1000000, 9999999) : '');
	// combobox: bio_chrA
	$combo_bio_chrA = new DataCombo;
	// combobox: bio_storyA
	$combo_bio_storyA = new DataCombo;
	// combobox: bio_storyline, filterable by: bio_chrA,bio_storyA
	$combo_bio_storyline = new DataCombo;
	// combobox: bio_storytext, filterable by: bio_chrA,bio_storyA
	$combo_bio_storytext = new DataCombo;
	// combobox: sceneA, filterable by: bio_storyA,bio_storyline,bio_storytext
	$combo_sceneA = new DataCombo;
	// combobox: bio_chrB
	$combo_bio_chrB = new DataCombo;
	// combobox: bio_storyB
	$combo_bio_storyB = new DataCombo;
	// combobox: bio_storylineB, filterable by: bio_chrB,bio_storyB
	$combo_bio_storylineB = new DataCombo;
	// combobox: bio_storytextB, filterable by: bio_chrB,bio_storyB
	$combo_bio_storytextB = new DataCombo;

	if($selected_id) {
		// mm: check member permissions
		if(!$arrPerm['view']) return '';

		// mm: who is the owner?
		$ownerGroupID = sqlValue("SELECT `groupID` FROM `membership_userrecords` WHERE `tableName`='hist_encounter' AND `pkValue`='" . makeSafe($selected_id) . "'");
		$ownerMemberID = sqlValue("SELECT LCASE(`memberID`) FROM `membership_userrecords` WHERE `tableName`='hist_encounter' AND `pkValue`='" . makeSafe($selected_id) . "'");

		if($arrPerm['view'] == 1 && getLoggedMemberID() != $ownerMemberID) return '';
		if($arrPerm['view'] == 2 && getLoggedGroupID() != $ownerGroupID) return '';

		// can edit?
		$AllowUpdate = 0;
		if(($arrPerm['edit'] == 1 && $ownerMemberID == getLoggedMemberID()) || ($arrPerm['edit'] == 2 && $ownerGroupID == getLoggedGroupID()) || $arrPerm['edit'] == 3) {
			$AllowUpdate = 1;
		}

		$res = sql("SELECT * FROM `hist_encounter` WHERE `id`='" . makeSafe($selected_id) . "'", $eo);
		if(!($row = db_fetch_array($res))) {
			return error_message($Translation['No records found'], 'hist_encounter_view.php', false);
		}
		$combo_bio_chrA->SelectedData = $row['bio_chrA'];
		$combo_bio_storyA->SelectedData = $row['bio_storyA'];
		$combo_bio_storyline->SelectedData = $row['bio_storyline'];
		$combo_bio_storytext->SelectedData = $row['bio_storytext'];
		$combo_sceneA->SelectedData = $row['sceneA'];
		$combo_bio_chrB->SelectedData = $row['bio_chrB'];
		$combo_bio_storyB->SelectedData = $row['bio_storyB'];
		$combo_bio_storylineB->SelectedData = $row['bio_storylineB'];
		$combo_bio_storytextB->SelectedData = $row['bio_storytextB'];
		$urow = $row; /* unsanitized data */
		$hc = new CI_Input(datalist_db_encoding);
		$row = $hc->xss_clean($row); /* sanitize data */
	} else {
		$combo_bio_chrA->SelectedData = $filterer_bio_chrA;
		$combo_bio_storyA->SelectedData = $filterer_bio_storyA;
		$combo_bio_storyline->SelectedData = $filterer_bio_storyline;
		$combo_bio_storytext->SelectedData = $filterer_bio_storytext;
		$combo_sceneA->SelectedData = $filterer_sceneA;
		$combo_bio_chrB->SelectedData = $filterer_bio_chrB;
		$combo_bio_storyB->SelectedData = $filterer_bio_storyB;
		$combo_bio_storylineB->SelectedData = $filterer_bio_storylineB;
		$combo_bio_storytextB->SelectedData = $filterer_bio_storytextB;
	}
	$combo_bio_chrA->HTML = '<span id="bio_chrA-container' . $rnd1 . '"></span><input type="hidden" name="bio_chrA" id="bio_chrA' . $rnd1 . '" value="' . html_attr($combo_bio_chrA->SelectedData) . '">';
	$combo_bio_chrA->MatchText = '<span id="bio_chrA-container-readonly' . $rnd1 . '"></span><input type="hidden" name="bio_chrA" id="bio_chrA' . $rnd1 . '" value="' . html_attr($combo_bio_chrA->SelectedData) . '">';
	$combo_bio_storyA->HTML = '<span id="bio_storyA-container' . $rnd1 . '"></span><input type="hidden" name="bio_storyA" id="bio_storyA' . $rnd1 . '" value="' . html_attr($combo_bio_storyA->SelectedData) . '">';
	$combo_bio_storyA->MatchText = '<span id="bio_storyA-container-readonly' . $rnd1 . '"></span><input type="hidden" name="bio_storyA" id="bio_storyA' . $rnd1 . '" value="' . html_attr($combo_bio_storyA->SelectedData) . '">';
	$combo_bio_storyline->HTML = '<span id="bio_storyline-container' . $rnd1 . '"></span><input type="hidden" name="bio_storyline" id="bio_storyline' . $rnd1 . '" value="' . html_attr($combo_bio_storyline->SelectedData) . '">';
	$combo_bio_storyline->MatchText = '<span id="bio_storyline-container-readonly' . $rnd1 . '"></span><input type="hidden" name="bio_storyline" id="bio_storyline' . $rnd1 . '" value="' . html_attr($combo_bio_storyline->SelectedData) . '">';
	$combo_bio_storytext->HTML = '<span id="bio_storytext-container' . $rnd1 . '"></span><input type="hidden" name="bio_storytext" id="bio_storytext' . $rnd1 . '" value="' . html_attr($combo_bio_storytext->SelectedData) . '">';
	$combo_bio_storytext->MatchText = '<span id="bio_storytext-container-readonly' . $rnd1 . '"></span><input type="hidden" name="bio_storytext" id="bio_storytext' . $rnd1 . '" value="' . html_attr($combo_bio_storytext->SelectedData) . '">';
	$combo_sceneA->HTML = '<span id="sceneA-container' . $rnd1 . '"></span><input type="hidden" name="sceneA" id="sceneA' . $rnd1 . '" value="' . html_attr($combo_sceneA->SelectedData) . '">';
	$combo_sceneA->MatchText = '<span id="sceneA-container-readonly' . $rnd1 . '"></span><input type="hidden" name="sceneA" id="sceneA' . $rnd1 . '" value="' . html_attr($combo_sceneA->SelectedData) . '">';
	$combo_bio_chrB->HTML = '<span id="bio_chrB-container' . $rnd1 . '"></span><input type="hidden" name="bio_chrB" id="bio_chrB' . $rnd1 . '" value="' . html_attr($combo_bio_chrB->SelectedData) . '">';
	$combo_bio_chrB->MatchText = '<span id="bio_chrB-container-readonly' . $rnd1 . '"></span><input type="hidden" name="bio_chrB" id="bio_chrB' . $rnd1 . '" value="' . html_attr($combo_bio_chrB->SelectedData) . '">';
	$combo_bio_storyB->HTML = '<span id="bio_storyB-container' . $rnd1 . '"></span><input type="hidden" name="bio_storyB" id="bio_storyB' . $rnd1 . '" value="' . html_attr($combo_bio_storyB->SelectedData) . '">';
	$combo_bio_storyB->MatchText = '<span id="bio_storyB-container-readonly' . $rnd1 . '"></span><input type="hidden" name="bio_storyB" id="bio_storyB' . $rnd1 . '" value="' . html_attr($combo_bio_storyB->SelectedData) . '">';
	$combo_bio_storylineB->HTML = '<span id="bio_storylineB-container' . $rnd1 . '"></span><input type="hidden" name="bio_storylineB" id="bio_storylineB' . $rnd1 . '" value="' . html_attr($combo_bio_storylineB->SelectedData) . '">';
	$combo_bio_storylineB->MatchText = '<span id="bio_storylineB-container-readonly' . $rnd1 . '"></span><input type="hidden" name="bio_storylineB" id="bio_storylineB' . $rnd1 . '" value="' . html_attr($combo_bio_storylineB->SelectedData) . '">';
	$combo_bio_storytextB->HTML = '<span id="bio_storytextB-container' . $rnd1 . '"></span><input type="hidden" name="bio_storytextB" id="bio_storytextB' . $rnd1 . '" value="' . html_attr($combo_bio_storytextB->SelectedData) . '">';
	$combo_bio_storytextB->MatchText = '<span id="bio_storytextB-container-readonly' . $rnd1 . '"></span><input type="hidden" name="bio_storytextB" id="bio_storytextB' . $rnd1 . '" value="' . html_attr($combo_bio_storytextB->SelectedData) . '">';

	ob_start();
	?>

	<script>
		// initial lookup values
		AppGini.current_bio_chrA__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['bio_chrA'] : $filterer_bio_chrA); ?>"};
		AppGini.current_bio_storyA__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['bio_storyA'] : $filterer_bio_storyA); ?>"};
		AppGini.current_bio_storyline__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['bio_storyline'] : $filterer_bio_storyline); ?>"};
		AppGini.current_bio_storytext__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['bio_storytext'] : $filterer_bio_storytext); ?>"};
		AppGini.current_sceneA__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['sceneA'] : $filterer_sceneA); ?>"};
		AppGini.current_bio_chrB__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['bio_chrB'] : $filterer_bio_chrB); ?>"};
		AppGini.current_bio_storyB__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['bio_storyB'] : $filterer_bio_storyB); ?>"};
		AppGini.current_bio_storylineB__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['bio_storylineB'] : $filterer_bio_storylineB); ?>"};
		AppGini.current_bio_storytextB__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['bio_storytextB'] : $filterer_bio_storytextB); ?>"};

		jQuery(function() {
			setTimeout(function() {
				if(typeof(bio_chrA_reload__RAND__) == 'function') bio_chrA_reload__RAND__();
				if(typeof(bio_storyA_reload__RAND__) == 'function') bio_storyA_reload__RAND__();
				<?php echo (!$AllowUpdate || $dvprint ? 'if(typeof(bio_storyline_reload__RAND__) == \'function\') bio_storyline_reload__RAND__(AppGini.current_bio_chrA__RAND__.value, AppGini.current_bio_storyA__RAND__.value);' : ''); ?>
				<?php echo (!$AllowUpdate || $dvprint ? 'if(typeof(bio_storytext_reload__RAND__) == \'function\') bio_storytext_reload__RAND__(AppGini.current_bio_chrA__RAND__.value, AppGini.current_bio_storyA__RAND__.value);' : ''); ?>
				<?php echo (!$AllowUpdate || $dvprint ? 'if(typeof(sceneA_reload__RAND__) == \'function\') sceneA_reload__RAND__(AppGini.current_bio_storyA__RAND__.value, AppGini.current_bio_storyline__RAND__.value, AppGini.current_bio_storytext__RAND__.value);' : ''); ?>
				if(typeof(bio_chrB_reload__RAND__) == 'function') bio_chrB_reload__RAND__();
				if(typeof(bio_storyB_reload__RAND__) == 'function') bio_storyB_reload__RAND__();
				<?php echo (!$AllowUpdate || $dvprint ? 'if(typeof(bio_storylineB_reload__RAND__) == \'function\') bio_storylineB_reload__RAND__(AppGini.current_bio_chrB__RAND__.value, AppGini.current_bio_storyB__RAND__.value);' : ''); ?>
				<?php echo (!$AllowUpdate || $dvprint ? 'if(typeof(bio_storytextB_reload__RAND__) == \'function\') bio_storytextB_reload__RAND__(AppGini.current_bio_chrB__RAND__.value, AppGini.current_bio_storyB__RAND__.value);' : ''); ?>
			}, 50); /* we need to slightly delay client-side execution of the above code to allow AppGini.ajaxCache to work */
		});
		function bio_chrA_reload__RAND__() {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#bio_chrA-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_bio_chrA__RAND__.value, t: 'hist_encounter', f: 'bio_chrA' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="bio_chrA"]').val(resp.results[0].id);
							$j('[id=bio_chrA-container-readonly__RAND__]').html('<span id="bio_chrA-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=bio_chr_view_parent]').hide(); } else { $j('.btn[id=bio_chr_view_parent]').show(); }

						if(typeof(bio_storyline_reload__RAND__) == 'function') bio_storyline_reload__RAND__(AppGini.current_bio_chrA__RAND__.value, $j('#bio_storyA').val());
						if(typeof(bio_storytext_reload__RAND__) == 'function') bio_storytext_reload__RAND__(AppGini.current_bio_chrA__RAND__.value, $j('#bio_storyA').val());

							if(typeof(bio_chrA_update_autofills__RAND__) == 'function') bio_chrA_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'hist_encounter', f: 'bio_chrA' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_bio_chrA__RAND__.value = e.added.id;
				AppGini.current_bio_chrA__RAND__.text = e.added.text;
				$j('[name="bio_chrA"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=bio_chr_view_parent]').hide(); } else { $j('.btn[id=bio_chr_view_parent]').show(); }

						if(typeof(bio_storyline_reload__RAND__) == 'function') bio_storyline_reload__RAND__(AppGini.current_bio_chrA__RAND__.value, $j('#bio_storyA').val());
						if(typeof(bio_storytext_reload__RAND__) == 'function') bio_storytext_reload__RAND__(AppGini.current_bio_chrA__RAND__.value, $j('#bio_storyA').val());

				if(typeof(bio_chrA_update_autofills__RAND__) == 'function') bio_chrA_update_autofills__RAND__();
			});

			if(!$j("#bio_chrA-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_bio_chrA__RAND__.value, t: 'hist_encounter', f: 'bio_chrA' },
					success: function(resp) {
						$j('[name="bio_chrA"]').val(resp.results[0].id);
						$j('[id=bio_chrA-container-readonly__RAND__]').html('<span id="bio_chrA-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=bio_chr_view_parent]').hide(); } else { $j('.btn[id=bio_chr_view_parent]').show(); }

						if(typeof(bio_chrA_update_autofills__RAND__) == 'function') bio_chrA_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_bio_chrA__RAND__.value, t: 'hist_encounter', f: 'bio_chrA' },
				success: function(resp) {
					$j('[id=bio_chrA-container__RAND__], [id=bio_chrA-container-readonly__RAND__]').html('<span id="bio_chrA-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=bio_chr_view_parent]').hide(); } else { $j('.btn[id=bio_chr_view_parent]').show(); }

					if(typeof(bio_chrA_update_autofills__RAND__) == 'function') bio_chrA_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function bio_storyA_reload__RAND__() {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#bio_storyA-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_bio_storyA__RAND__.value, t: 'hist_encounter', f: 'bio_storyA' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="bio_storyA"]').val(resp.results[0].id);
							$j('[id=bio_storyA-container-readonly__RAND__]').html('<span id="bio_storyA-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=bio_story_view_parent]').hide(); } else { $j('.btn[id=bio_story_view_parent]').show(); }

						if(typeof(bio_storyline_reload__RAND__) == 'function') bio_storyline_reload__RAND__($j('#bio_chrA').val(), AppGini.current_bio_storyA__RAND__.value);
						if(typeof(bio_storytext_reload__RAND__) == 'function') bio_storytext_reload__RAND__($j('#bio_chrA').val(), AppGini.current_bio_storyA__RAND__.value);

							if(typeof(bio_storyA_update_autofills__RAND__) == 'function') bio_storyA_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'hist_encounter', f: 'bio_storyA' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_bio_storyA__RAND__.value = e.added.id;
				AppGini.current_bio_storyA__RAND__.text = e.added.text;
				$j('[name="bio_storyA"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=bio_story_view_parent]').hide(); } else { $j('.btn[id=bio_story_view_parent]').show(); }

						if(typeof(bio_storyline_reload__RAND__) == 'function') bio_storyline_reload__RAND__($j('#bio_chrA').val(), AppGini.current_bio_storyA__RAND__.value);
						if(typeof(bio_storytext_reload__RAND__) == 'function') bio_storytext_reload__RAND__($j('#bio_chrA').val(), AppGini.current_bio_storyA__RAND__.value);

				if(typeof(bio_storyA_update_autofills__RAND__) == 'function') bio_storyA_update_autofills__RAND__();
			});

			if(!$j("#bio_storyA-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_bio_storyA__RAND__.value, t: 'hist_encounter', f: 'bio_storyA' },
					success: function(resp) {
						$j('[name="bio_storyA"]').val(resp.results[0].id);
						$j('[id=bio_storyA-container-readonly__RAND__]').html('<span id="bio_storyA-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=bio_story_view_parent]').hide(); } else { $j('.btn[id=bio_story_view_parent]').show(); }

						if(typeof(bio_storyA_update_autofills__RAND__) == 'function') bio_storyA_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_bio_storyA__RAND__.value, t: 'hist_encounter', f: 'bio_storyA' },
				success: function(resp) {
					$j('[id=bio_storyA-container__RAND__], [id=bio_storyA-container-readonly__RAND__]').html('<span id="bio_storyA-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=bio_story_view_parent]').hide(); } else { $j('.btn[id=bio_story_view_parent]').show(); }

					if(typeof(bio_storyA_update_autofills__RAND__) == 'function') bio_storyA_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function bio_storyline_reload__RAND__(filterer_bio_chrA, filterer_bio_storyA) {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#bio_storyline-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { filterer_bio_chrA: filterer_bio_chrA, filterer_bio_storyA: filterer_bio_storyA, id: AppGini.current_bio_storyline__RAND__.value, t: 'hist_encounter', f: 'bio_storyline' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="bio_storyline"]').val(resp.results[0].id);
							$j('[id=bio_storyline-container-readonly__RAND__]').html('<span id="bio_storyline-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=bio_storyline_view_parent]').hide(); } else { $j('.btn[id=bio_storyline_view_parent]').show(); }

						if(typeof(sceneA_reload__RAND__) == 'function') sceneA_reload__RAND__($j('#bio_storyA').val(), AppGini.current_bio_storyline__RAND__.value, $j('#bio_storytext').val());

							if(typeof(bio_storyline_update_autofills__RAND__) == 'function') bio_storyline_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { filterer_bio_chrA: filterer_bio_chrA, filterer_bio_storyA: filterer_bio_storyA, s: term, p: page, t: 'hist_encounter', f: 'bio_storyline' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_bio_storyline__RAND__.value = e.added.id;
				AppGini.current_bio_storyline__RAND__.text = e.added.text;
				$j('[name="bio_storyline"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=bio_storyline_view_parent]').hide(); } else { $j('.btn[id=bio_storyline_view_parent]').show(); }

						if(typeof(sceneA_reload__RAND__) == 'function') sceneA_reload__RAND__($j('#bio_storyA').val(), AppGini.current_bio_storyline__RAND__.value, $j('#bio_storytext').val());

				if(typeof(bio_storyline_update_autofills__RAND__) == 'function') bio_storyline_update_autofills__RAND__();
			});

			if(!$j("#bio_storyline-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_bio_storyline__RAND__.value, t: 'hist_encounter', f: 'bio_storyline' },
					success: function(resp) {
						$j('[name="bio_storyline"]').val(resp.results[0].id);
						$j('[id=bio_storyline-container-readonly__RAND__]').html('<span id="bio_storyline-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=bio_storyline_view_parent]').hide(); } else { $j('.btn[id=bio_storyline_view_parent]').show(); }

						if(typeof(bio_storyline_update_autofills__RAND__) == 'function') bio_storyline_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_bio_storyline__RAND__.value, t: 'hist_encounter', f: 'bio_storyline' },
				success: function(resp) {
					$j('[id=bio_storyline-container__RAND__], [id=bio_storyline-container-readonly__RAND__]').html('<span id="bio_storyline-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=bio_storyline_view_parent]').hide(); } else { $j('.btn[id=bio_storyline_view_parent]').show(); }

					if(typeof(bio_storyline_update_autofills__RAND__) == 'function') bio_storyline_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function bio_storytext_reload__RAND__(filterer_bio_chrA, filterer_bio_storyA) {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#bio_storytext-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { filterer_bio_chrA: filterer_bio_chrA, filterer_bio_storyA: filterer_bio_storyA, id: AppGini.current_bio_storytext__RAND__.value, t: 'hist_encounter', f: 'bio_storytext' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="bio_storytext"]').val(resp.results[0].id);
							$j('[id=bio_storytext-container-readonly__RAND__]').html('<span id="bio_storytext-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=bio_storyline_view_parent]').hide(); } else { $j('.btn[id=bio_storyline_view_parent]').show(); }

						if(typeof(sceneA_reload__RAND__) == 'function') sceneA_reload__RAND__($j('#bio_storyA').val(), $j('#bio_storyline').val(), AppGini.current_bio_storytext__RAND__.value);

							if(typeof(bio_storytext_update_autofills__RAND__) == 'function') bio_storytext_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { filterer_bio_chrA: filterer_bio_chrA, filterer_bio_storyA: filterer_bio_storyA, s: term, p: page, t: 'hist_encounter', f: 'bio_storytext' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_bio_storytext__RAND__.value = e.added.id;
				AppGini.current_bio_storytext__RAND__.text = e.added.text;
				$j('[name="bio_storytext"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=bio_storyline_view_parent]').hide(); } else { $j('.btn[id=bio_storyline_view_parent]').show(); }

						if(typeof(sceneA_reload__RAND__) == 'function') sceneA_reload__RAND__($j('#bio_storyA').val(), $j('#bio_storyline').val(), AppGini.current_bio_storytext__RAND__.value);

				if(typeof(bio_storytext_update_autofills__RAND__) == 'function') bio_storytext_update_autofills__RAND__();
			});

			if(!$j("#bio_storytext-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_bio_storytext__RAND__.value, t: 'hist_encounter', f: 'bio_storytext' },
					success: function(resp) {
						$j('[name="bio_storytext"]').val(resp.results[0].id);
						$j('[id=bio_storytext-container-readonly__RAND__]').html('<span id="bio_storytext-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=bio_storyline_view_parent]').hide(); } else { $j('.btn[id=bio_storyline_view_parent]').show(); }

						if(typeof(bio_storytext_update_autofills__RAND__) == 'function') bio_storytext_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_bio_storytext__RAND__.value, t: 'hist_encounter', f: 'bio_storytext' },
				success: function(resp) {
					$j('[id=bio_storytext-container__RAND__], [id=bio_storytext-container-readonly__RAND__]').html('<span id="bio_storytext-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=bio_storyline_view_parent]').hide(); } else { $j('.btn[id=bio_storyline_view_parent]').show(); }

					if(typeof(bio_storytext_update_autofills__RAND__) == 'function') bio_storytext_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function sceneA_reload__RAND__(filterer_bio_storyA, filterer_bio_storyline, filterer_bio_storytext) {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#sceneA-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { filterer_bio_storyA: filterer_bio_storyA, filterer_bio_storyline: filterer_bio_storyline, filterer_bio_storytext: filterer_bio_storytext, id: AppGini.current_sceneA__RAND__.value, t: 'hist_encounter', f: 'sceneA' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="sceneA"]').val(resp.results[0].id);
							$j('[id=sceneA-container-readonly__RAND__]').html('<span id="sceneA-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_chr_scene_view_parent]').hide(); } else { $j('.btn[id=hist_chr_scene_view_parent]').show(); }


							if(typeof(sceneA_update_autofills__RAND__) == 'function') sceneA_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { filterer_bio_storyA: filterer_bio_storyA, filterer_bio_storyline: filterer_bio_storyline, filterer_bio_storytext: filterer_bio_storytext, s: term, p: page, t: 'hist_encounter', f: 'sceneA' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_sceneA__RAND__.value = e.added.id;
				AppGini.current_sceneA__RAND__.text = e.added.text;
				$j('[name="sceneA"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_chr_scene_view_parent]').hide(); } else { $j('.btn[id=hist_chr_scene_view_parent]').show(); }


				if(typeof(sceneA_update_autofills__RAND__) == 'function') sceneA_update_autofills__RAND__();
			});

			if(!$j("#sceneA-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_sceneA__RAND__.value, t: 'hist_encounter', f: 'sceneA' },
					success: function(resp) {
						$j('[name="sceneA"]').val(resp.results[0].id);
						$j('[id=sceneA-container-readonly__RAND__]').html('<span id="sceneA-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_chr_scene_view_parent]').hide(); } else { $j('.btn[id=hist_chr_scene_view_parent]').show(); }

						if(typeof(sceneA_update_autofills__RAND__) == 'function') sceneA_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_sceneA__RAND__.value, t: 'hist_encounter', f: 'sceneA' },
				success: function(resp) {
					$j('[id=sceneA-container__RAND__], [id=sceneA-container-readonly__RAND__]').html('<span id="sceneA-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_chr_scene_view_parent]').hide(); } else { $j('.btn[id=hist_chr_scene_view_parent]').show(); }

					if(typeof(sceneA_update_autofills__RAND__) == 'function') sceneA_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function bio_chrB_reload__RAND__() {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#bio_chrB-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_bio_chrB__RAND__.value, t: 'hist_encounter', f: 'bio_chrB' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="bio_chrB"]').val(resp.results[0].id);
							$j('[id=bio_chrB-container-readonly__RAND__]').html('<span id="bio_chrB-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=bio_chr_view_parent]').hide(); } else { $j('.btn[id=bio_chr_view_parent]').show(); }

						if(typeof(bio_storylineB_reload__RAND__) == 'function') bio_storylineB_reload__RAND__(AppGini.current_bio_chrB__RAND__.value, $j('#bio_storyB').val());
						if(typeof(bio_storytextB_reload__RAND__) == 'function') bio_storytextB_reload__RAND__(AppGini.current_bio_chrB__RAND__.value, $j('#bio_storyB').val());

							if(typeof(bio_chrB_update_autofills__RAND__) == 'function') bio_chrB_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'hist_encounter', f: 'bio_chrB' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_bio_chrB__RAND__.value = e.added.id;
				AppGini.current_bio_chrB__RAND__.text = e.added.text;
				$j('[name="bio_chrB"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=bio_chr_view_parent]').hide(); } else { $j('.btn[id=bio_chr_view_parent]').show(); }

						if(typeof(bio_storylineB_reload__RAND__) == 'function') bio_storylineB_reload__RAND__(AppGini.current_bio_chrB__RAND__.value, $j('#bio_storyB').val());
						if(typeof(bio_storytextB_reload__RAND__) == 'function') bio_storytextB_reload__RAND__(AppGini.current_bio_chrB__RAND__.value, $j('#bio_storyB').val());

				if(typeof(bio_chrB_update_autofills__RAND__) == 'function') bio_chrB_update_autofills__RAND__();
			});

			if(!$j("#bio_chrB-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_bio_chrB__RAND__.value, t: 'hist_encounter', f: 'bio_chrB' },
					success: function(resp) {
						$j('[name="bio_chrB"]').val(resp.results[0].id);
						$j('[id=bio_chrB-container-readonly__RAND__]').html('<span id="bio_chrB-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=bio_chr_view_parent]').hide(); } else { $j('.btn[id=bio_chr_view_parent]').show(); }

						if(typeof(bio_chrB_update_autofills__RAND__) == 'function') bio_chrB_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_bio_chrB__RAND__.value, t: 'hist_encounter', f: 'bio_chrB' },
				success: function(resp) {
					$j('[id=bio_chrB-container__RAND__], [id=bio_chrB-container-readonly__RAND__]').html('<span id="bio_chrB-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=bio_chr_view_parent]').hide(); } else { $j('.btn[id=bio_chr_view_parent]').show(); }

					if(typeof(bio_chrB_update_autofills__RAND__) == 'function') bio_chrB_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function bio_storyB_reload__RAND__() {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#bio_storyB-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_bio_storyB__RAND__.value, t: 'hist_encounter', f: 'bio_storyB' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="bio_storyB"]').val(resp.results[0].id);
							$j('[id=bio_storyB-container-readonly__RAND__]').html('<span id="bio_storyB-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=bio_story_view_parent]').hide(); } else { $j('.btn[id=bio_story_view_parent]').show(); }

						if(typeof(bio_storylineB_reload__RAND__) == 'function') bio_storylineB_reload__RAND__($j('#bio_chrB').val(), AppGini.current_bio_storyB__RAND__.value);
						if(typeof(bio_storytextB_reload__RAND__) == 'function') bio_storytextB_reload__RAND__($j('#bio_chrB').val(), AppGini.current_bio_storyB__RAND__.value);

							if(typeof(bio_storyB_update_autofills__RAND__) == 'function') bio_storyB_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'hist_encounter', f: 'bio_storyB' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_bio_storyB__RAND__.value = e.added.id;
				AppGini.current_bio_storyB__RAND__.text = e.added.text;
				$j('[name="bio_storyB"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=bio_story_view_parent]').hide(); } else { $j('.btn[id=bio_story_view_parent]').show(); }

						if(typeof(bio_storylineB_reload__RAND__) == 'function') bio_storylineB_reload__RAND__($j('#bio_chrB').val(), AppGini.current_bio_storyB__RAND__.value);
						if(typeof(bio_storytextB_reload__RAND__) == 'function') bio_storytextB_reload__RAND__($j('#bio_chrB').val(), AppGini.current_bio_storyB__RAND__.value);

				if(typeof(bio_storyB_update_autofills__RAND__) == 'function') bio_storyB_update_autofills__RAND__();
			});

			if(!$j("#bio_storyB-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_bio_storyB__RAND__.value, t: 'hist_encounter', f: 'bio_storyB' },
					success: function(resp) {
						$j('[name="bio_storyB"]').val(resp.results[0].id);
						$j('[id=bio_storyB-container-readonly__RAND__]').html('<span id="bio_storyB-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=bio_story_view_parent]').hide(); } else { $j('.btn[id=bio_story_view_parent]').show(); }

						if(typeof(bio_storyB_update_autofills__RAND__) == 'function') bio_storyB_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_bio_storyB__RAND__.value, t: 'hist_encounter', f: 'bio_storyB' },
				success: function(resp) {
					$j('[id=bio_storyB-container__RAND__], [id=bio_storyB-container-readonly__RAND__]').html('<span id="bio_storyB-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=bio_story_view_parent]').hide(); } else { $j('.btn[id=bio_story_view_parent]').show(); }

					if(typeof(bio_storyB_update_autofills__RAND__) == 'function') bio_storyB_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function bio_storylineB_reload__RAND__(filterer_bio_chrB, filterer_bio_storyB) {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#bio_storylineB-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { filterer_bio_chrB: filterer_bio_chrB, filterer_bio_storyB: filterer_bio_storyB, id: AppGini.current_bio_storylineB__RAND__.value, t: 'hist_encounter', f: 'bio_storylineB' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="bio_storylineB"]').val(resp.results[0].id);
							$j('[id=bio_storylineB-container-readonly__RAND__]').html('<span id="bio_storylineB-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=bio_storyline_view_parent]').hide(); } else { $j('.btn[id=bio_storyline_view_parent]').show(); }


							if(typeof(bio_storylineB_update_autofills__RAND__) == 'function') bio_storylineB_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { filterer_bio_chrB: filterer_bio_chrB, filterer_bio_storyB: filterer_bio_storyB, s: term, p: page, t: 'hist_encounter', f: 'bio_storylineB' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_bio_storylineB__RAND__.value = e.added.id;
				AppGini.current_bio_storylineB__RAND__.text = e.added.text;
				$j('[name="bio_storylineB"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=bio_storyline_view_parent]').hide(); } else { $j('.btn[id=bio_storyline_view_parent]').show(); }


				if(typeof(bio_storylineB_update_autofills__RAND__) == 'function') bio_storylineB_update_autofills__RAND__();
			});

			if(!$j("#bio_storylineB-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_bio_storylineB__RAND__.value, t: 'hist_encounter', f: 'bio_storylineB' },
					success: function(resp) {
						$j('[name="bio_storylineB"]').val(resp.results[0].id);
						$j('[id=bio_storylineB-container-readonly__RAND__]').html('<span id="bio_storylineB-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=bio_storyline_view_parent]').hide(); } else { $j('.btn[id=bio_storyline_view_parent]').show(); }

						if(typeof(bio_storylineB_update_autofills__RAND__) == 'function') bio_storylineB_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_bio_storylineB__RAND__.value, t: 'hist_encounter', f: 'bio_storylineB' },
				success: function(resp) {
					$j('[id=bio_storylineB-container__RAND__], [id=bio_storylineB-container-readonly__RAND__]').html('<span id="bio_storylineB-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=bio_storyline_view_parent]').hide(); } else { $j('.btn[id=bio_storyline_view_parent]').show(); }

					if(typeof(bio_storylineB_update_autofills__RAND__) == 'function') bio_storylineB_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function bio_storytextB_reload__RAND__(filterer_bio_chrB, filterer_bio_storyB) {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#bio_storytextB-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { filterer_bio_chrB: filterer_bio_chrB, filterer_bio_storyB: filterer_bio_storyB, id: AppGini.current_bio_storytextB__RAND__.value, t: 'hist_encounter', f: 'bio_storytextB' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="bio_storytextB"]').val(resp.results[0].id);
							$j('[id=bio_storytextB-container-readonly__RAND__]').html('<span id="bio_storytextB-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=bio_storyline_view_parent]').hide(); } else { $j('.btn[id=bio_storyline_view_parent]').show(); }


							if(typeof(bio_storytextB_update_autofills__RAND__) == 'function') bio_storytextB_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { filterer_bio_chrB: filterer_bio_chrB, filterer_bio_storyB: filterer_bio_storyB, s: term, p: page, t: 'hist_encounter', f: 'bio_storytextB' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_bio_storytextB__RAND__.value = e.added.id;
				AppGini.current_bio_storytextB__RAND__.text = e.added.text;
				$j('[name="bio_storytextB"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=bio_storyline_view_parent]').hide(); } else { $j('.btn[id=bio_storyline_view_parent]').show(); }


				if(typeof(bio_storytextB_update_autofills__RAND__) == 'function') bio_storytextB_update_autofills__RAND__();
			});

			if(!$j("#bio_storytextB-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_bio_storytextB__RAND__.value, t: 'hist_encounter', f: 'bio_storytextB' },
					success: function(resp) {
						$j('[name="bio_storytextB"]').val(resp.results[0].id);
						$j('[id=bio_storytextB-container-readonly__RAND__]').html('<span id="bio_storytextB-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=bio_storyline_view_parent]').hide(); } else { $j('.btn[id=bio_storyline_view_parent]').show(); }

						if(typeof(bio_storytextB_update_autofills__RAND__) == 'function') bio_storytextB_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_bio_storytextB__RAND__.value, t: 'hist_encounter', f: 'bio_storytextB' },
				success: function(resp) {
					$j('[id=bio_storytextB-container__RAND__], [id=bio_storytextB-container-readonly__RAND__]').html('<span id="bio_storytextB-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=bio_storyline_view_parent]').hide(); } else { $j('.btn[id=bio_storyline_view_parent]').show(); }

					if(typeof(bio_storytextB_update_autofills__RAND__) == 'function') bio_storytextB_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
	</script>
	<?php

	$lookups = str_replace('__RAND__', $rnd1, ob_get_contents());
	ob_end_clean();


	// code for template based detail view forms

	// open the detail view template
	if($dvprint) {
		$template_file = is_file("./{$TemplateDVP}") ? "./{$TemplateDVP}" : './templates/hist_encounter_templateDVP.html';
		$templateCode = @file_get_contents($template_file);
	} else {
		$template_file = is_file("./{$TemplateDV}") ? "./{$TemplateDV}" : './templates/hist_encounter_templateDV.html';
		$templateCode = @file_get_contents($template_file);
	}

	// process form title
	$templateCode = str_replace('<%%DETAIL_VIEW_TITLE%%>', 'Detail View', $templateCode);
	$templateCode = str_replace('<%%RND1%%>', $rnd1, $templateCode);
	$templateCode = str_replace('<%%EMBEDDED%%>', ($_REQUEST['Embedded'] ? 'Embedded=1' : ''), $templateCode);
	// process buttons
	if($AllowInsert) {
		if(!$selected_id) $templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-success" id="insert" name="insert_x" value="1" onclick="return hist_encounter_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save New'] . '</button>', $templateCode);
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="insert" name="insert_x" value="1" onclick="return hist_encounter_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save As Copy'] . '</button>', $templateCode);
	} else {
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '', $templateCode);
	}

	// 'Back' button action
	if($_REQUEST['Embedded']) {
		$backAction = 'AppGini.closeParentModal(); return false;';
	} else {
		$backAction = '$j(\'form\').eq(0).attr(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;';
	}

	if($selected_id) {
		if(!$_REQUEST['Embedded']) $templateCode = str_replace('<%%DVPRINT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="dvprint" name="dvprint_x" value="1" onclick="$j(\'form\').eq(0).prop(\'novalidate\', true); document.myform.reset(); return true;" title="' . html_attr($Translation['Print Preview']) . '"><i class="glyphicon glyphicon-print"></i> ' . $Translation['Print Preview'] . '</button>', $templateCode);
		if($AllowUpdate) {
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '<button type="submit" class="btn btn-success btn-lg" id="update" name="update_x" value="1" onclick="return hist_encounter_validateData();" title="' . html_attr($Translation['Save Changes']) . '"><i class="glyphicon glyphicon-ok"></i> ' . $Translation['Save Changes'] . '</button>', $templateCode);
		} else {
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		}
		if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3) { // allow delete?
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '<button type="submit" class="btn btn-danger" id="delete" name="delete_x" value="1" onclick="return confirm(\'' . $Translation['are you sure?'] . '\');" title="' . html_attr($Translation['Delete']) . '"><i class="glyphicon glyphicon-trash"></i> ' . $Translation['Delete'] . '</button>', $templateCode);
		} else {
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		}
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>', $templateCode);
	} else {
		$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', ($ShowCancel ? '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>' : ''), $templateCode);
	}

	// set records to read only if user can't insert new records and can't edit current record
	if(($selected_id && !$AllowUpdate && !$AllowInsert) || (!$selected_id && !$AllowInsert)) {
		$jsReadOnly .= "\tjQuery('#bio_chrA').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#bio_chrA_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#bio_storyA').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#bio_storyA_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#bio_storyline').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#bio_storyline_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#bio_storytext').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#bio_storytext_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#sceneA').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#sceneA_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#bio_chrB').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#bio_chrB_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#bio_storyB').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#bio_storyB_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#bio_storylineB').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#bio_storylineB_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#bio_storytextB').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#bio_storytextB_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#type').replaceWith('<div class=\"form-control-static\" id=\"type\">' + (jQuery('#type').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#conflicttype').replaceWith('<div class=\"form-control-static\" id=\"conflicttype\">' + (jQuery('#conflicttype').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#story_scene').replaceWith('<div class=\"form-control-static\" id=\"story_scene\">' + (jQuery('#story_scene').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#nd_color').replaceWith('<div class=\"form-control-static\" id=\"nd_color\">' + (jQuery('#nd_color').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#nd_width').replaceWith('<div class=\"form-control-static\" id=\"nd_width\">' + (jQuery('#nd_width').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#nd_style').replaceWith('<div class=\"form-control-static\" id=\"nd_style\">' + (jQuery('#nd_style').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#nd_opacity').replaceWith('<div class=\"form-control-static\" id=\"nd_opacity\">' + (jQuery('#nd_opacity').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#nd_visibility').replaceWith('<div class=\"form-control-static\" id=\"nd_visibility\">' + (jQuery('#nd_visibility').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#lbl_lable').replaceWith('<div class=\"form-control-static\" id=\"lbl_lable\">' + (jQuery('#lbl_lable').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#lbl_color').replaceWith('<div class=\"form-control-static\" id=\"lbl_color\">' + (jQuery('#lbl_color').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#lbl_size').replaceWith('<div class=\"form-control-static\" id=\"lbl_size\">' + (jQuery('#lbl_size').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('.select2-container').hide();\n";

		$noUploads = true;
	} elseif($AllowInsert) {
		$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', true);"; // temporarily disable form change handler
			$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', false);"; // re-enable form change handler
	}

	// process combos
	$templateCode = str_replace('<%%COMBO(bio_chrA)%%>', $combo_bio_chrA->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(bio_chrA)%%>', $combo_bio_chrA->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(bio_chrA)%%>', urlencode($combo_bio_chrA->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(bio_storyA)%%>', $combo_bio_storyA->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(bio_storyA)%%>', $combo_bio_storyA->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(bio_storyA)%%>', urlencode($combo_bio_storyA->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(bio_storyline)%%>', $combo_bio_storyline->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(bio_storyline)%%>', $combo_bio_storyline->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(bio_storyline)%%>', urlencode($combo_bio_storyline->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(bio_storytext)%%>', $combo_bio_storytext->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(bio_storytext)%%>', $combo_bio_storytext->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(bio_storytext)%%>', urlencode($combo_bio_storytext->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(sceneA)%%>', $combo_sceneA->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(sceneA)%%>', $combo_sceneA->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(sceneA)%%>', urlencode($combo_sceneA->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(bio_chrB)%%>', $combo_bio_chrB->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(bio_chrB)%%>', $combo_bio_chrB->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(bio_chrB)%%>', urlencode($combo_bio_chrB->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(bio_storyB)%%>', $combo_bio_storyB->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(bio_storyB)%%>', $combo_bio_storyB->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(bio_storyB)%%>', urlencode($combo_bio_storyB->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(bio_storylineB)%%>', $combo_bio_storylineB->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(bio_storylineB)%%>', $combo_bio_storylineB->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(bio_storylineB)%%>', urlencode($combo_bio_storylineB->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(bio_storytextB)%%>', $combo_bio_storytextB->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(bio_storytextB)%%>', $combo_bio_storytextB->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(bio_storytextB)%%>', urlencode($combo_bio_storytextB->MatchText), $templateCode);

	/* lookup fields array: 'lookup field name' => array('parent table name', 'lookup field caption') */
	$lookup_fields = array('bio_chrA' => array('bio_chr', 'Author A'), 'bio_storyA' => array('bio_story', 'Bibliography A'), 'bio_storyline' => array('bio_storyline', 'Transcript A'), 'bio_storytext' => array('bio_storyline', 'Token A'), 'sceneA' => array('hist_chr_scene', 'Scene A'), 'bio_chrB' => array('bio_chr', 'Author B'), 'bio_storyB' => array('bio_story', 'Author name B'), 'bio_storylineB' => array('bio_storyline', 'Bibliography B'), 'bio_storytextB' => array('bio_storyline', 'Transcript B'), );
	foreach($lookup_fields as $luf => $ptfc) {
		$pt_perm = getTablePermissions($ptfc[0]);

		// process foreign key links
		if($pt_perm['view'] || $pt_perm['edit']) {
			$templateCode = str_replace("<%%PLINK({$luf})%%>", '<button type="button" class="btn btn-default view_parent hspacer-md" id="' . $ptfc[0] . '_view_parent" title="' . html_attr($Translation['View'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-eye-open"></i></button>', $templateCode);
		}

		// if user has insert permission to parent table of a lookup field, put an add new button
		if($pt_perm['insert'] && !$_REQUEST['Embedded']) {
			$templateCode = str_replace("<%%ADDNEW({$ptfc[0]})%%>", '<button type="button" class="btn btn-success add_new_parent hspacer-md" id="' . $ptfc[0] . '_add_new" title="' . html_attr($Translation['Add New'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-plus-sign"></i></button>', $templateCode);
		}
	}

	// process images
	$templateCode = str_replace('<%%UPLOADFILE(id)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(bio_chrA)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(bio_storyA)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(bio_storyline)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(bio_storytext)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(sceneA)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(bio_chrB)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(bio_storyB)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(bio_storylineB)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(bio_storytextB)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(type)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(conflicttype)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(story_scene)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(nd_color)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(nd_width)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(nd_style)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(nd_opacity)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(nd_visibility)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(lbl_lable)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(lbl_color)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(lbl_size)%%>', '', $templateCode);

	// process values
	if($selected_id) {
		if( $dvprint) $templateCode = str_replace('<%%VALUE(id)%%>', safe_html($urow['id']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(id)%%>', html_attr($row['id']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(id)%%>', urlencode($urow['id']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(bio_chrA)%%>', safe_html($urow['bio_chrA']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(bio_chrA)%%>', html_attr($row['bio_chrA']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(bio_chrA)%%>', urlencode($urow['bio_chrA']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(bio_storyA)%%>', safe_html($urow['bio_storyA']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(bio_storyA)%%>', html_attr($row['bio_storyA']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(bio_storyA)%%>', urlencode($urow['bio_storyA']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(bio_storyline)%%>', safe_html($urow['bio_storyline']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(bio_storyline)%%>', html_attr($row['bio_storyline']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(bio_storyline)%%>', urlencode($urow['bio_storyline']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(bio_storytext)%%>', safe_html($urow['bio_storytext']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(bio_storytext)%%>', html_attr($row['bio_storytext']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(bio_storytext)%%>', urlencode($urow['bio_storytext']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(sceneA)%%>', safe_html($urow['sceneA']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(sceneA)%%>', html_attr($row['sceneA']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(sceneA)%%>', urlencode($urow['sceneA']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(bio_chrB)%%>', safe_html($urow['bio_chrB']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(bio_chrB)%%>', html_attr($row['bio_chrB']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(bio_chrB)%%>', urlencode($urow['bio_chrB']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(bio_storyB)%%>', safe_html($urow['bio_storyB']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(bio_storyB)%%>', html_attr($row['bio_storyB']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(bio_storyB)%%>', urlencode($urow['bio_storyB']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(bio_storylineB)%%>', safe_html($urow['bio_storylineB']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(bio_storylineB)%%>', html_attr($row['bio_storylineB']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(bio_storylineB)%%>', urlencode($urow['bio_storylineB']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(bio_storytextB)%%>', safe_html($urow['bio_storytextB']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(bio_storytextB)%%>', html_attr($row['bio_storytextB']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(bio_storytextB)%%>', urlencode($urow['bio_storytextB']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(type)%%>', safe_html($urow['type']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(type)%%>', html_attr($row['type']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(type)%%>', urlencode($urow['type']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(conflicttype)%%>', safe_html($urow['conflicttype']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(conflicttype)%%>', html_attr($row['conflicttype']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(conflicttype)%%>', urlencode($urow['conflicttype']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(story_scene)%%>', safe_html($urow['story_scene']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(story_scene)%%>', html_attr($row['story_scene']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(story_scene)%%>', urlencode($urow['story_scene']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(nd_color)%%>', safe_html($urow['nd_color']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(nd_color)%%>', html_attr($row['nd_color']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(nd_color)%%>', urlencode($urow['nd_color']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(nd_width)%%>', safe_html($urow['nd_width']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(nd_width)%%>', html_attr($row['nd_width']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(nd_width)%%>', urlencode($urow['nd_width']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(nd_style)%%>', safe_html($urow['nd_style']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(nd_style)%%>', html_attr($row['nd_style']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(nd_style)%%>', urlencode($urow['nd_style']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(nd_opacity)%%>', safe_html($urow['nd_opacity']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(nd_opacity)%%>', html_attr($row['nd_opacity']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(nd_opacity)%%>', urlencode($urow['nd_opacity']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(nd_visibility)%%>', safe_html($urow['nd_visibility']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(nd_visibility)%%>', html_attr($row['nd_visibility']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(nd_visibility)%%>', urlencode($urow['nd_visibility']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(lbl_lable)%%>', safe_html($urow['lbl_lable']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(lbl_lable)%%>', html_attr($row['lbl_lable']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(lbl_lable)%%>', urlencode($urow['lbl_lable']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(lbl_color)%%>', safe_html($urow['lbl_color']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(lbl_color)%%>', html_attr($row['lbl_color']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(lbl_color)%%>', urlencode($urow['lbl_color']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(lbl_size)%%>', safe_html($urow['lbl_size']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(lbl_size)%%>', html_attr($row['lbl_size']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(lbl_size)%%>', urlencode($urow['lbl_size']), $templateCode);
	} else {
		$templateCode = str_replace('<%%VALUE(id)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(id)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(bio_chrA)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(bio_chrA)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(bio_storyA)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(bio_storyA)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(bio_storyline)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(bio_storyline)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(bio_storytext)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(bio_storytext)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(sceneA)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(sceneA)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(bio_chrB)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(bio_chrB)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(bio_storyB)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(bio_storyB)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(bio_storylineB)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(bio_storylineB)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(bio_storytextB)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(bio_storytextB)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(type)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(type)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(conflicttype)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(conflicttype)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(story_scene)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(story_scene)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(nd_color)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(nd_color)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(nd_width)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(nd_width)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(nd_style)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(nd_style)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(nd_opacity)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(nd_opacity)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(nd_visibility)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(nd_visibility)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(lbl_lable)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(lbl_lable)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(lbl_color)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(lbl_color)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(lbl_size)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(lbl_size)%%>', urlencode(''), $templateCode);
	}

	// process translations
	$templateCode = parseTemplate($templateCode);

	// clear scrap
	$templateCode = str_replace('<%%', '<!-- ', $templateCode);
	$templateCode = str_replace('%%>', ' -->', $templateCode);

	// hide links to inaccessible tables
	if($_REQUEST['dvprint_x'] == '') {
		$templateCode .= "\n\n<script>\$j(function() {\n";
		$arrTables = getTableList();
		foreach($arrTables as $name => $caption) {
			$templateCode .= "\t\$j('#{$name}_link').removeClass('hidden');\n";
			$templateCode .= "\t\$j('#xs_{$name}_link').removeClass('hidden');\n";
		}

		$templateCode .= $jsReadOnly;
		$templateCode .= $jsEditable;

		if(!$selected_id) {
		}

		$templateCode.="\n});</script>\n";
	}

	// ajaxed auto-fill fields
	$templateCode .= '<script>';
	$templateCode .= '$j(function() {';


	$templateCode.="});";
	$templateCode.="</script>";
	$templateCode .= $lookups;

	// handle enforced parent values for read-only lookup fields

	// don't include blank images in lightbox gallery
	$templateCode = preg_replace('/blank.gif" data-lightbox=".*?"/', 'blank.gif"', $templateCode);

	// don't display empty email links
	$templateCode=preg_replace('/<a .*?href="mailto:".*?<\/a>/', '', $templateCode);

	/* default field values */
	$rdata = $jdata = get_defaults('hist_encounter');
	if($selected_id) {
		$jdata = get_joined_record('hist_encounter', $selected_id);
		if($jdata === false) $jdata = get_defaults('hist_encounter');
		$rdata = $row;
	}
	$templateCode .= loadView('hist_encounter-ajax-cache', array('rdata' => $rdata, 'jdata' => $jdata));

	// hook: hist_encounter_dv
	if(function_exists('hist_encounter_dv')) {
		$args=[];
		hist_encounter_dv(($selected_id ? $selected_id : FALSE), getMemberInfo(), $templateCode, $args);
	}

	return $templateCode;
}