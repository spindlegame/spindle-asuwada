<?php

// Data functions (insert, update, delete, form) for table characters

// This script and data application were generated by AppGini 5.76
// Download AppGini for free from https://bigprof.com/appgini/download/

function characters_insert(){
	global $Translation;

	// mm: can member insert record?
	$arrPerm=getTablePermissions('characters');
	if(!$arrPerm[1]){
		return false;
	}

	$data['agent_id'] = makeSafe($_REQUEST['agent_id']);
		if($data['agent_id'] == empty_lookup_value){ $data['agent_id'] = ''; }
	$data['agent_name'] = makeSafe($_REQUEST['agent_id']);
		if($data['agent_name'] == empty_lookup_value){ $data['agent_name'] = ''; }
	$data['cw_name'] = makeSafe($_REQUEST['cw_name']);
		if($data['cw_name'] == empty_lookup_value){ $data['cw_name'] = ''; }
	$data['mc_resolve'] = makeSafe($_REQUEST['mc_resolve']);
		if($data['mc_resolve'] == empty_lookup_value){ $data['mc_resolve'] = ''; }
	$data['illust_resolve'] = makeSafe($_REQUEST['illust_resolve']);
		if($data['illust_resolve'] == empty_lookup_value){ $data['illust_resolve'] = ''; }
	$data['mc_growth'] = makeSafe($_REQUEST['mc_growth']);
		if($data['mc_growth'] == empty_lookup_value){ $data['mc_growth'] = ''; }
	$data['illust_growth'] = makeSafe($_REQUEST['illust_growth']);
		if($data['illust_growth'] == empty_lookup_value){ $data['illust_growth'] = ''; }
	$data['mc_approach'] = makeSafe($_REQUEST['mc_approach']);
		if($data['mc_approach'] == empty_lookup_value){ $data['mc_approach'] = ''; }
	$data['illust_approach'] = makeSafe($_REQUEST['illust_approach']);
		if($data['illust_approach'] == empty_lookup_value){ $data['illust_approach'] = ''; }
	$data['mc_ps_style'] = makeSafe($_REQUEST['mc_ps_style']);
		if($data['mc_ps_style'] == empty_lookup_value){ $data['mc_ps_style'] = ''; }
	$data['illust_ps_style'] = makeSafe($_REQUEST['illust_ps_style']);
		if($data['illust_ps_style'] == empty_lookup_value){ $data['illust_ps_style'] = ''; }
	$data['cw_age'] = makeSafe($_REQUEST['cw_age']);
		if($data['cw_age'] == empty_lookup_value){ $data['cw_age'] = ''; }
	$data['cw_gender'] = makeSafe($_REQUEST['cw_gender']);
		if($data['cw_gender'] == empty_lookup_value){ $data['cw_gender'] = ''; }
	$data['cw_communication_style'] = makeSafe($_REQUEST['cw_communication_style']);
		if($data['cw_communication_style'] == empty_lookup_value){ $data['cw_communication_style'] = ''; }
	$data['cw_background'] = makeSafe($_REQUEST['cw_background']);
		if($data['cw_background'] == empty_lookup_value){ $data['cw_background'] = ''; }
	$data['cw_appearance'] = makeSafe($_REQUEST['cw_appearance']);
		if($data['cw_appearance'] == empty_lookup_value){ $data['cw_appearance'] = ''; }
	$data['cw_relationships'] = makeSafe($_REQUEST['cw_relationships']);
		if($data['cw_relationships'] == empty_lookup_value){ $data['cw_relationships'] = ''; }
	$data['cw_ambition'] = makeSafe($_REQUEST['cw_ambition']);
		if($data['cw_ambition'] == empty_lookup_value){ $data['cw_ambition'] = ''; }
	$data['cw_defects'] = makeSafe($_REQUEST['cw_defects']);
		if($data['cw_defects'] == empty_lookup_value){ $data['cw_defects'] = ''; }
	$data['cw_thoughts'] = makeSafe($_REQUEST['cw_thoughts']);
		if($data['cw_thoughts'] == empty_lookup_value){ $data['cw_thoughts'] = ''; }
	$data['cw_relatedness'] = makeSafe($_REQUEST['cw_relatedness']);
		if($data['cw_relatedness'] == empty_lookup_value){ $data['cw_relatedness'] = ''; }
	$data['cw_restrictions'] = makeSafe($_REQUEST['cw_restrictions']);
		if($data['cw_restrictions'] == empty_lookup_value){ $data['cw_restrictions'] = ''; }
	$data['locations'] = makeSafe($_REQUEST['locations']);
		if($data['locations'] == empty_lookup_value){ $data['locations'] = ''; }
	$data['persons'] = makeSafe($_REQUEST['persons']);
		if($data['persons'] == empty_lookup_value){ $data['persons'] = ''; }
	$data['events'] = makeSafe($_REQUEST['events']);
		if($data['events'] == empty_lookup_value){ $data['events'] = ''; }
	$data['noetictension'] = makeSafe($_REQUEST['noetictension']);
		if($data['noetictension'] == empty_lookup_value){ $data['noetictension'] = ''; }
	$data['illust_nt'] = makeSafe($_REQUEST['illust_nt']);
		if($data['illust_nt'] == empty_lookup_value){ $data['illust_nt'] = ''; }
	$data['impression'] = makeSafe($_REQUEST['impression']);
		if($data['impression'] == empty_lookup_value){ $data['impression'] = ''; }
	$data['illust_im'] = makeSafe($_REQUEST['illust_im']);
		if($data['illust_im'] == empty_lookup_value){ $data['illust_im'] = ''; }
	$data['mcs_problem'] = makeSafe($_REQUEST['mcs_problem']);
		if($data['mcs_problem'] == empty_lookup_value){ $data['mcs_problem'] = ''; }
	$data['illust_mcs_problem'] = makeSafe($_REQUEST['illust_mcs_problem']);
		if($data['illust_mcs_problem'] == empty_lookup_value){ $data['illust_mcs_problem'] = ''; }
	$data['mcs_solution'] = makeSafe($_REQUEST['mcs_problem']);
		if($data['mcs_solution'] == empty_lookup_value){ $data['mcs_solution'] = ''; }
	$data['illust_mcs_solution'] = makeSafe($_REQUEST['illust_mcs_solution']);
		if($data['illust_mcs_solution'] == empty_lookup_value){ $data['illust_mcs_solution'] = ''; }
	$data['mcs_symptom'] = makeSafe($_REQUEST['mcs_problem']);
		if($data['mcs_symptom'] == empty_lookup_value){ $data['mcs_symptom'] = ''; }
	$data['illust_mcs_symptom'] = makeSafe($_REQUEST['illust_mcs_symptom']);
		if($data['illust_mcs_symptom'] == empty_lookup_value){ $data['illust_mcs_symptom'] = ''; }
	$data['mcs_response'] = makeSafe($_REQUEST['mcs_problem']);
		if($data['mcs_response'] == empty_lookup_value){ $data['mcs_response'] = ''; }
	$data['illust_mcs_response'] = makeSafe($_REQUEST['illust_mcs_response']);
		if($data['illust_mcs_response'] == empty_lookup_value){ $data['illust_mcs_response'] = ''; }
	$data['img'] = PrepareUploadedFile('img', 512000,'jpg|jpeg|gif|png', false, '');
	if($data['img']) createThumbnail($data['img'], getThumbnailSpecs('characters', 'img', 'tv'));
	if($data['img']) createThumbnail($data['img'], getThumbnailSpecs('characters', 'img', 'dv'));

	/* for empty upload fields, when saving a copy of an existing record, copy the original upload field */
	if($_REQUEST['SelectedID']){
		$res = sql("select * from characters where id='" . makeSafe($_REQUEST['SelectedID']) . "'", $eo);
		if($row = db_fetch_assoc($res)){
			if(!$data['img']) $data['img'] = makeSafe($row['img']);
		}
	}

	// hook: characters_before_insert
	if(function_exists('characters_before_insert')){
		$args=array();
		if(!characters_before_insert($data, getMemberInfo(), $args)){ return false; }
	}

	$o = array('silentErrors' => true);
	sql('insert into `characters` set       `agent_id`=' . (($data['agent_id'] !== '' && $data['agent_id'] !== NULL) ? "'{$data['agent_id']}'" : 'NULL') . ', `agent_name`=' . (($data['agent_name'] !== '' && $data['agent_name'] !== NULL) ? "'{$data['agent_name']}'" : 'NULL') . ', `cw_name`=' . (($data['cw_name'] !== '' && $data['cw_name'] !== NULL) ? "'{$data['cw_name']}'" : 'NULL') . ', ' . ($data['img'] != '' ? "`img`='{$data['img']}'" : '`img`=NULL') . ', `mc_resolve`=' . (($data['mc_resolve'] !== '' && $data['mc_resolve'] !== NULL) ? "'{$data['mc_resolve']}'" : 'NULL') . ', `illust_resolve`=' . (($data['illust_resolve'] !== '' && $data['illust_resolve'] !== NULL) ? "'{$data['illust_resolve']}'" : 'NULL') . ', `mc_growth`=' . (($data['mc_growth'] !== '' && $data['mc_growth'] !== NULL) ? "'{$data['mc_growth']}'" : 'NULL') . ', `illust_growth`=' . (($data['illust_growth'] !== '' && $data['illust_growth'] !== NULL) ? "'{$data['illust_growth']}'" : 'NULL') . ', `mc_approach`=' . (($data['mc_approach'] !== '' && $data['mc_approach'] !== NULL) ? "'{$data['mc_approach']}'" : 'NULL') . ', `illust_approach`=' . (($data['illust_approach'] !== '' && $data['illust_approach'] !== NULL) ? "'{$data['illust_approach']}'" : 'NULL') . ', `mc_ps_style`=' . (($data['mc_ps_style'] !== '' && $data['mc_ps_style'] !== NULL) ? "'{$data['mc_ps_style']}'" : 'NULL') . ', `illust_ps_style`=' . (($data['illust_ps_style'] !== '' && $data['illust_ps_style'] !== NULL) ? "'{$data['illust_ps_style']}'" : 'NULL') . ', `cw_age`=' . (($data['cw_age'] !== '' && $data['cw_age'] !== NULL) ? "'{$data['cw_age']}'" : 'NULL') . ', `cw_gender`=' . (($data['cw_gender'] !== '' && $data['cw_gender'] !== NULL) ? "'{$data['cw_gender']}'" : 'NULL') . ', `cw_communication_style`=' . (($data['cw_communication_style'] !== '' && $data['cw_communication_style'] !== NULL) ? "'{$data['cw_communication_style']}'" : 'NULL') . ', `cw_background`=' . (($data['cw_background'] !== '' && $data['cw_background'] !== NULL) ? "'{$data['cw_background']}'" : 'NULL') . ', `cw_appearance`=' . (($data['cw_appearance'] !== '' && $data['cw_appearance'] !== NULL) ? "'{$data['cw_appearance']}'" : 'NULL') . ', `cw_relationships`=' . (($data['cw_relationships'] !== '' && $data['cw_relationships'] !== NULL) ? "'{$data['cw_relationships']}'" : 'NULL') . ', `cw_ambition`=' . (($data['cw_ambition'] !== '' && $data['cw_ambition'] !== NULL) ? "'{$data['cw_ambition']}'" : 'NULL') . ', `cw_defects`=' . (($data['cw_defects'] !== '' && $data['cw_defects'] !== NULL) ? "'{$data['cw_defects']}'" : 'NULL') . ', `cw_thoughts`=' . (($data['cw_thoughts'] !== '' && $data['cw_thoughts'] !== NULL) ? "'{$data['cw_thoughts']}'" : 'NULL') . ', `cw_relatedness`=' . (($data['cw_relatedness'] !== '' && $data['cw_relatedness'] !== NULL) ? "'{$data['cw_relatedness']}'" : 'NULL') . ', `cw_restrictions`=' . (($data['cw_restrictions'] !== '' && $data['cw_restrictions'] !== NULL) ? "'{$data['cw_restrictions']}'" : 'NULL') . ', `locations`=' . (($data['locations'] !== '' && $data['locations'] !== NULL) ? "'{$data['locations']}'" : 'NULL') . ', `persons`=' . (($data['persons'] !== '' && $data['persons'] !== NULL) ? "'{$data['persons']}'" : 'NULL') . ', `events`=' . (($data['events'] !== '' && $data['events'] !== NULL) ? "'{$data['events']}'" : 'NULL') . ', `noetictension`=' . (($data['noetictension'] !== '' && $data['noetictension'] !== NULL) ? "'{$data['noetictension']}'" : 'NULL') . ', `illust_nt`=' . (($data['illust_nt'] !== '' && $data['illust_nt'] !== NULL) ? "'{$data['illust_nt']}'" : 'NULL') . ', `impression`=' . (($data['impression'] !== '' && $data['impression'] !== NULL) ? "'{$data['impression']}'" : 'NULL') . ', `illust_im`=' . (($data['illust_im'] !== '' && $data['illust_im'] !== NULL) ? "'{$data['illust_im']}'" : 'NULL') . ', `mcs_problem`=' . (($data['mcs_problem'] !== '' && $data['mcs_problem'] !== NULL) ? "'{$data['mcs_problem']}'" : 'NULL') . ', `illust_mcs_problem`=' . (($data['illust_mcs_problem'] !== '' && $data['illust_mcs_problem'] !== NULL) ? "'{$data['illust_mcs_problem']}'" : 'NULL') . ', `mcs_solution`=' . (($data['mcs_solution'] !== '' && $data['mcs_solution'] !== NULL) ? "'{$data['mcs_solution']}'" : 'NULL') . ', `illust_mcs_solution`=' . (($data['illust_mcs_solution'] !== '' && $data['illust_mcs_solution'] !== NULL) ? "'{$data['illust_mcs_solution']}'" : 'NULL') . ', `mcs_symptom`=' . (($data['mcs_symptom'] !== '' && $data['mcs_symptom'] !== NULL) ? "'{$data['mcs_symptom']}'" : 'NULL') . ', `illust_mcs_symptom`=' . (($data['illust_mcs_symptom'] !== '' && $data['illust_mcs_symptom'] !== NULL) ? "'{$data['illust_mcs_symptom']}'" : 'NULL') . ', `mcs_response`=' . (($data['mcs_response'] !== '' && $data['mcs_response'] !== NULL) ? "'{$data['mcs_response']}'" : 'NULL') . ', `illust_mcs_response`=' . (($data['illust_mcs_response'] !== '' && $data['illust_mcs_response'] !== NULL) ? "'{$data['illust_mcs_response']}'" : 'NULL'), $o);
	if($o['error']!=''){
		echo $o['error'];
		echo "<a href=\"characters_view.php?addNew_x=1\">{$Translation['< back']}</a>";
		exit;
	}

	$recID = db_insert_id(db_link());

	// hook: characters_after_insert
	if(function_exists('characters_after_insert')){
		$res = sql("select * from `characters` where `id`='" . makeSafe($recID, false) . "' limit 1", $eo);
		if($row = db_fetch_assoc($res)){
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = makeSafe($recID, false);
		$args=array();
		if(!characters_after_insert($data, getMemberInfo(), $args)){ return $recID; }
	}

	// mm: save ownership data
	set_record_owner('characters', $recID, getLoggedMemberID());

	return $recID;
}

function characters_delete($selected_id, $AllowDeleteOfParents=false, $skipChecks=false){
	// insure referential integrity ...
	global $Translation;
	$selected_id=makeSafe($selected_id);

	// mm: can member delete record?
	$arrPerm=getTablePermissions('characters');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='characters' and pkValue='$selected_id'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='characters' and pkValue='$selected_id'");
	if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3){ // allow delete?
		// delete allowed, so continue ...
	}else{
		return $Translation['You don\'t have enough permissions to delete this record'];
	}

	// hook: characters_before_delete
	if(function_exists('characters_before_delete')){
		$args=array();
		if(!characters_before_delete($selected_id, $skipChecks, getMemberInfo(), $args))
			return $Translation['Couldn\'t delete this record'];
	}

	// child table: character_development
	$res = sql("select `id` from `characters` where `id`='$selected_id'", $eo);
	$id = db_fetch_row($res);
	$rires = sql("select count(1) from `character_development` where `story_character`='".addslashes($id[0])."'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "character_development", $RetMsg);
		return $RetMsg;
	}elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["confirm delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "character_development", $RetMsg);
		$RetMsg = str_replace("<Delete>", "<input type=\"button\" class=\"button\" value=\"".$Translation['yes']."\" onClick=\"window.location='characters_view.php?SelectedID=".urlencode($selected_id)."&delete_x=1&confirmed=1';\">", $RetMsg);
		$RetMsg = str_replace("<Cancel>", "<input type=\"button\" class=\"button\" value=\"".$Translation['no']."\" onClick=\"window.location='characters_view.php?SelectedID=".urlencode($selected_id)."';\">", $RetMsg);
		return $RetMsg;
	}

	// child table: storylines
	$res = sql("select `id` from `characters` where `id`='$selected_id'", $eo);
	$id = db_fetch_row($res);
	$rires = sql("select count(1) from `storylines` where `role`='".addslashes($id[0])."'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "storylines", $RetMsg);
		return $RetMsg;
	}elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["confirm delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "storylines", $RetMsg);
		$RetMsg = str_replace("<Delete>", "<input type=\"button\" class=\"button\" value=\"".$Translation['yes']."\" onClick=\"window.location='characters_view.php?SelectedID=".urlencode($selected_id)."&delete_x=1&confirmed=1';\">", $RetMsg);
		$RetMsg = str_replace("<Cancel>", "<input type=\"button\" class=\"button\" value=\"".$Translation['no']."\" onClick=\"window.location='characters_view.php?SelectedID=".urlencode($selected_id)."';\">", $RetMsg);
		return $RetMsg;
	}

	// child table: storydynamic
	$res = sql("select `id` from `characters` where `id`='$selected_id'", $eo);
	$id = db_fetch_row($res);
	$rires = sql("select count(1) from `storydynamic` where `mc_character`='".addslashes($id[0])."'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "storydynamic", $RetMsg);
		return $RetMsg;
	}elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["confirm delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "storydynamic", $RetMsg);
		$RetMsg = str_replace("<Delete>", "<input type=\"button\" class=\"button\" value=\"".$Translation['yes']."\" onClick=\"window.location='characters_view.php?SelectedID=".urlencode($selected_id)."&delete_x=1&confirmed=1';\">", $RetMsg);
		$RetMsg = str_replace("<Cancel>", "<input type=\"button\" class=\"button\" value=\"".$Translation['no']."\" onClick=\"window.location='characters_view.php?SelectedID=".urlencode($selected_id)."';\">", $RetMsg);
		return $RetMsg;
	}

	// child table: storydynamic
	$res = sql("select `id` from `characters` where `id`='$selected_id'", $eo);
	$id = db_fetch_row($res);
	$rires = sql("select count(1) from `storydynamic` where `mc_resolve`='".addslashes($id[0])."'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "storydynamic", $RetMsg);
		return $RetMsg;
	}elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["confirm delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "storydynamic", $RetMsg);
		$RetMsg = str_replace("<Delete>", "<input type=\"button\" class=\"button\" value=\"".$Translation['yes']."\" onClick=\"window.location='characters_view.php?SelectedID=".urlencode($selected_id)."&delete_x=1&confirmed=1';\">", $RetMsg);
		$RetMsg = str_replace("<Cancel>", "<input type=\"button\" class=\"button\" value=\"".$Translation['no']."\" onClick=\"window.location='characters_view.php?SelectedID=".urlencode($selected_id)."';\">", $RetMsg);
		return $RetMsg;
	}

	sql("delete from `characters` where `id`='$selected_id'", $eo);

	// hook: characters_after_delete
	if(function_exists('characters_after_delete')){
		$args=array();
		characters_after_delete($selected_id, getMemberInfo(), $args);
	}

	// mm: delete ownership data
	sql("delete from membership_userrecords where tableName='characters' and pkValue='$selected_id'", $eo);
}

function characters_update($selected_id){
	global $Translation;

	// mm: can member edit record?
	$arrPerm=getTablePermissions('characters');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='characters' and pkValue='".makeSafe($selected_id)."'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='characters' and pkValue='".makeSafe($selected_id)."'");
	if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3){ // allow update?
		// update allowed, so continue ...
	}else{
		return false;
	}

	$data['agent_id'] = makeSafe($_REQUEST['agent_id']);
		if($data['agent_id'] == empty_lookup_value){ $data['agent_id'] = ''; }
	$data['agent_name'] = makeSafe($_REQUEST['agent_id']);
		if($data['agent_name'] == empty_lookup_value){ $data['agent_name'] = ''; }
	$data['cw_name'] = makeSafe($_REQUEST['cw_name']);
		if($data['cw_name'] == empty_lookup_value){ $data['cw_name'] = ''; }
	$data['mc_resolve'] = makeSafe($_REQUEST['mc_resolve']);
		if($data['mc_resolve'] == empty_lookup_value){ $data['mc_resolve'] = ''; }
	$data['illust_resolve'] = makeSafe($_REQUEST['illust_resolve']);
		if($data['illust_resolve'] == empty_lookup_value){ $data['illust_resolve'] = ''; }
	$data['mc_growth'] = makeSafe($_REQUEST['mc_growth']);
		if($data['mc_growth'] == empty_lookup_value){ $data['mc_growth'] = ''; }
	$data['illust_growth'] = makeSafe($_REQUEST['illust_growth']);
		if($data['illust_growth'] == empty_lookup_value){ $data['illust_growth'] = ''; }
	$data['mc_approach'] = makeSafe($_REQUEST['mc_approach']);
		if($data['mc_approach'] == empty_lookup_value){ $data['mc_approach'] = ''; }
	$data['illust_approach'] = makeSafe($_REQUEST['illust_approach']);
		if($data['illust_approach'] == empty_lookup_value){ $data['illust_approach'] = ''; }
	$data['mc_ps_style'] = makeSafe($_REQUEST['mc_ps_style']);
		if($data['mc_ps_style'] == empty_lookup_value){ $data['mc_ps_style'] = ''; }
	$data['illust_ps_style'] = makeSafe($_REQUEST['illust_ps_style']);
		if($data['illust_ps_style'] == empty_lookup_value){ $data['illust_ps_style'] = ''; }
	$data['cw_age'] = makeSafe($_REQUEST['cw_age']);
		if($data['cw_age'] == empty_lookup_value){ $data['cw_age'] = ''; }
	$data['cw_gender'] = makeSafe($_REQUEST['cw_gender']);
		if($data['cw_gender'] == empty_lookup_value){ $data['cw_gender'] = ''; }
	$data['cw_communication_style'] = makeSafe($_REQUEST['cw_communication_style']);
		if($data['cw_communication_style'] == empty_lookup_value){ $data['cw_communication_style'] = ''; }
	$data['cw_background'] = makeSafe($_REQUEST['cw_background']);
		if($data['cw_background'] == empty_lookup_value){ $data['cw_background'] = ''; }
	$data['cw_appearance'] = makeSafe($_REQUEST['cw_appearance']);
		if($data['cw_appearance'] == empty_lookup_value){ $data['cw_appearance'] = ''; }
	$data['cw_relationships'] = makeSafe($_REQUEST['cw_relationships']);
		if($data['cw_relationships'] == empty_lookup_value){ $data['cw_relationships'] = ''; }
	$data['cw_ambition'] = makeSafe($_REQUEST['cw_ambition']);
		if($data['cw_ambition'] == empty_lookup_value){ $data['cw_ambition'] = ''; }
	$data['cw_defects'] = makeSafe($_REQUEST['cw_defects']);
		if($data['cw_defects'] == empty_lookup_value){ $data['cw_defects'] = ''; }
	$data['cw_thoughts'] = makeSafe($_REQUEST['cw_thoughts']);
		if($data['cw_thoughts'] == empty_lookup_value){ $data['cw_thoughts'] = ''; }
	$data['cw_relatedness'] = makeSafe($_REQUEST['cw_relatedness']);
		if($data['cw_relatedness'] == empty_lookup_value){ $data['cw_relatedness'] = ''; }
	$data['cw_restrictions'] = makeSafe($_REQUEST['cw_restrictions']);
		if($data['cw_restrictions'] == empty_lookup_value){ $data['cw_restrictions'] = ''; }
	$data['locations'] = makeSafe($_REQUEST['locations']);
		if($data['locations'] == empty_lookup_value){ $data['locations'] = ''; }
	$data['persons'] = makeSafe($_REQUEST['persons']);
		if($data['persons'] == empty_lookup_value){ $data['persons'] = ''; }
	$data['events'] = makeSafe($_REQUEST['events']);
		if($data['events'] == empty_lookup_value){ $data['events'] = ''; }
	$data['noetictension'] = makeSafe($_REQUEST['noetictension']);
		if($data['noetictension'] == empty_lookup_value){ $data['noetictension'] = ''; }
	$data['illust_nt'] = makeSafe($_REQUEST['illust_nt']);
		if($data['illust_nt'] == empty_lookup_value){ $data['illust_nt'] = ''; }
	$data['impression'] = makeSafe($_REQUEST['impression']);
		if($data['impression'] == empty_lookup_value){ $data['impression'] = ''; }
	$data['illust_im'] = makeSafe($_REQUEST['illust_im']);
		if($data['illust_im'] == empty_lookup_value){ $data['illust_im'] = ''; }
	$data['mcs_problem'] = makeSafe($_REQUEST['mcs_problem']);
		if($data['mcs_problem'] == empty_lookup_value){ $data['mcs_problem'] = ''; }
	$data['illust_mcs_problem'] = makeSafe($_REQUEST['illust_mcs_problem']);
		if($data['illust_mcs_problem'] == empty_lookup_value){ $data['illust_mcs_problem'] = ''; }
	$data['mcs_solution'] = makeSafe($_REQUEST['mcs_problem']);
		if($data['mcs_solution'] == empty_lookup_value){ $data['mcs_solution'] = ''; }
	$data['illust_mcs_solution'] = makeSafe($_REQUEST['illust_mcs_solution']);
		if($data['illust_mcs_solution'] == empty_lookup_value){ $data['illust_mcs_solution'] = ''; }
	$data['mcs_symptom'] = makeSafe($_REQUEST['mcs_problem']);
		if($data['mcs_symptom'] == empty_lookup_value){ $data['mcs_symptom'] = ''; }
	$data['illust_mcs_symptom'] = makeSafe($_REQUEST['illust_mcs_symptom']);
		if($data['illust_mcs_symptom'] == empty_lookup_value){ $data['illust_mcs_symptom'] = ''; }
	$data['mcs_response'] = makeSafe($_REQUEST['mcs_problem']);
		if($data['mcs_response'] == empty_lookup_value){ $data['mcs_response'] = ''; }
	$data['illust_mcs_response'] = makeSafe($_REQUEST['illust_mcs_response']);
		if($data['illust_mcs_response'] == empty_lookup_value){ $data['illust_mcs_response'] = ''; }
	$data['selectedID']=makeSafe($selected_id);
	if($_REQUEST['img_remove'] == 1){
		$data['img'] = '';
	}else{
		$data['img'] = PrepareUploadedFile('img', 512000, 'jpg|jpeg|gif|png', false, "");
		if($data['img']) createThumbnail($data['img'], getThumbnailSpecs('characters', 'img', 'tv'));
		if($data['img']) createThumbnail($data['img'], getThumbnailSpecs('characters', 'img', 'dv'));
	}

	// hook: characters_before_update
	if(function_exists('characters_before_update')){
		$args=array();
		if(!characters_before_update($data, getMemberInfo(), $args)){ return false; }
	}

	$o=array('silentErrors' => true);
	sql('update `characters` set       `agent_id`=' . (($data['agent_id'] !== '' && $data['agent_id'] !== NULL) ? "'{$data['agent_id']}'" : 'NULL') . ', `agent_name`=' . (($data['agent_name'] !== '' && $data['agent_name'] !== NULL) ? "'{$data['agent_name']}'" : 'NULL') . ', `cw_name`=' . (($data['cw_name'] !== '' && $data['cw_name'] !== NULL) ? "'{$data['cw_name']}'" : 'NULL') . ', ' . ($data['img']!='' ? "`img`='{$data['img']}'" : ($_REQUEST['img_remove'] != 1 ? '`img`=`img`' : '`img`=NULL')) . ', `mc_resolve`=' . (($data['mc_resolve'] !== '' && $data['mc_resolve'] !== NULL) ? "'{$data['mc_resolve']}'" : 'NULL') . ', `illust_resolve`=' . (($data['illust_resolve'] !== '' && $data['illust_resolve'] !== NULL) ? "'{$data['illust_resolve']}'" : 'NULL') . ', `mc_growth`=' . (($data['mc_growth'] !== '' && $data['mc_growth'] !== NULL) ? "'{$data['mc_growth']}'" : 'NULL') . ', `illust_growth`=' . (($data['illust_growth'] !== '' && $data['illust_growth'] !== NULL) ? "'{$data['illust_growth']}'" : 'NULL') . ', `mc_approach`=' . (($data['mc_approach'] !== '' && $data['mc_approach'] !== NULL) ? "'{$data['mc_approach']}'" : 'NULL') . ', `illust_approach`=' . (($data['illust_approach'] !== '' && $data['illust_approach'] !== NULL) ? "'{$data['illust_approach']}'" : 'NULL') . ', `mc_ps_style`=' . (($data['mc_ps_style'] !== '' && $data['mc_ps_style'] !== NULL) ? "'{$data['mc_ps_style']}'" : 'NULL') . ', `illust_ps_style`=' . (($data['illust_ps_style'] !== '' && $data['illust_ps_style'] !== NULL) ? "'{$data['illust_ps_style']}'" : 'NULL') . ', `cw_age`=' . (($data['cw_age'] !== '' && $data['cw_age'] !== NULL) ? "'{$data['cw_age']}'" : 'NULL') . ', `cw_gender`=' . (($data['cw_gender'] !== '' && $data['cw_gender'] !== NULL) ? "'{$data['cw_gender']}'" : 'NULL') . ', `cw_communication_style`=' . (($data['cw_communication_style'] !== '' && $data['cw_communication_style'] !== NULL) ? "'{$data['cw_communication_style']}'" : 'NULL') . ', `cw_background`=' . (($data['cw_background'] !== '' && $data['cw_background'] !== NULL) ? "'{$data['cw_background']}'" : 'NULL') . ', `cw_appearance`=' . (($data['cw_appearance'] !== '' && $data['cw_appearance'] !== NULL) ? "'{$data['cw_appearance']}'" : 'NULL') . ', `cw_relationships`=' . (($data['cw_relationships'] !== '' && $data['cw_relationships'] !== NULL) ? "'{$data['cw_relationships']}'" : 'NULL') . ', `cw_ambition`=' . (($data['cw_ambition'] !== '' && $data['cw_ambition'] !== NULL) ? "'{$data['cw_ambition']}'" : 'NULL') . ', `cw_defects`=' . (($data['cw_defects'] !== '' && $data['cw_defects'] !== NULL) ? "'{$data['cw_defects']}'" : 'NULL') . ', `cw_thoughts`=' . (($data['cw_thoughts'] !== '' && $data['cw_thoughts'] !== NULL) ? "'{$data['cw_thoughts']}'" : 'NULL') . ', `cw_relatedness`=' . (($data['cw_relatedness'] !== '' && $data['cw_relatedness'] !== NULL) ? "'{$data['cw_relatedness']}'" : 'NULL') . ', `cw_restrictions`=' . (($data['cw_restrictions'] !== '' && $data['cw_restrictions'] !== NULL) ? "'{$data['cw_restrictions']}'" : 'NULL') . ', `locations`=' . (($data['locations'] !== '' && $data['locations'] !== NULL) ? "'{$data['locations']}'" : 'NULL') . ', `persons`=' . (($data['persons'] !== '' && $data['persons'] !== NULL) ? "'{$data['persons']}'" : 'NULL') . ', `events`=' . (($data['events'] !== '' && $data['events'] !== NULL) ? "'{$data['events']}'" : 'NULL') . ', `noetictension`=' . (($data['noetictension'] !== '' && $data['noetictension'] !== NULL) ? "'{$data['noetictension']}'" : 'NULL') . ', `illust_nt`=' . (($data['illust_nt'] !== '' && $data['illust_nt'] !== NULL) ? "'{$data['illust_nt']}'" : 'NULL') . ', `impression`=' . (($data['impression'] !== '' && $data['impression'] !== NULL) ? "'{$data['impression']}'" : 'NULL') . ', `illust_im`=' . (($data['illust_im'] !== '' && $data['illust_im'] !== NULL) ? "'{$data['illust_im']}'" : 'NULL') . ', `mcs_problem`=' . (($data['mcs_problem'] !== '' && $data['mcs_problem'] !== NULL) ? "'{$data['mcs_problem']}'" : 'NULL') . ', `illust_mcs_problem`=' . (($data['illust_mcs_problem'] !== '' && $data['illust_mcs_problem'] !== NULL) ? "'{$data['illust_mcs_problem']}'" : 'NULL') . ', `mcs_solution`=' . (($data['mcs_solution'] !== '' && $data['mcs_solution'] !== NULL) ? "'{$data['mcs_solution']}'" : 'NULL') . ', `illust_mcs_solution`=' . (($data['illust_mcs_solution'] !== '' && $data['illust_mcs_solution'] !== NULL) ? "'{$data['illust_mcs_solution']}'" : 'NULL') . ', `mcs_symptom`=' . (($data['mcs_symptom'] !== '' && $data['mcs_symptom'] !== NULL) ? "'{$data['mcs_symptom']}'" : 'NULL') . ', `illust_mcs_symptom`=' . (($data['illust_mcs_symptom'] !== '' && $data['illust_mcs_symptom'] !== NULL) ? "'{$data['illust_mcs_symptom']}'" : 'NULL') . ', `mcs_response`=' . (($data['mcs_response'] !== '' && $data['mcs_response'] !== NULL) ? "'{$data['mcs_response']}'" : 'NULL') . ', `illust_mcs_response`=' . (($data['illust_mcs_response'] !== '' && $data['illust_mcs_response'] !== NULL) ? "'{$data['illust_mcs_response']}'" : 'NULL') . " where `id`='".makeSafe($selected_id)."'", $o);
	if($o['error']!=''){
		echo $o['error'];
		echo '<a href="characters_view.php?SelectedID='.urlencode($selected_id)."\">{$Translation['< back']}</a>";
		exit;
	}


	// hook: characters_after_update
	if(function_exists('characters_after_update')){
		$res = sql("SELECT * FROM `characters` WHERE `id`='{$data['selectedID']}' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)){
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = $data['id'];
		$args = array();
		if(!characters_after_update($data, getMemberInfo(), $args)){ return; }
	}

	// mm: update ownership data
	sql("update membership_userrecords set dateUpdated='".time()."' where tableName='characters' and pkValue='".makeSafe($selected_id)."'", $eo);

}

function characters_form($selected_id = '', $AllowUpdate = 1, $AllowInsert = 1, $AllowDelete = 1, $ShowCancel = 0, $TemplateDV = '', $TemplateDVP = ''){
	// function to return an editable form for a table records
	// and fill it with data of record whose ID is $selected_id. If $selected_id
	// is empty, an empty form is shown, with only an 'Add New'
	// button displayed.

	global $Translation;

	// mm: get table permissions
	$arrPerm=getTablePermissions('characters');
	if(!$arrPerm[1] && $selected_id==''){ return ''; }
	$AllowInsert = ($arrPerm[1] ? true : false);
	// print preview?
	$dvprint = false;
	if($selected_id && $_REQUEST['dvprint_x'] != ''){
		$dvprint = true;
	}

	$filterer_agent_id = thisOr(undo_magic_quotes($_REQUEST['filterer_agent_id']), '');
	$filterer_illust_resolve = thisOr(undo_magic_quotes($_REQUEST['filterer_illust_resolve']), '');
	$filterer_illust_growth = thisOr(undo_magic_quotes($_REQUEST['filterer_illust_growth']), '');
	$filterer_illust_approach = thisOr(undo_magic_quotes($_REQUEST['filterer_illust_approach']), '');
	$filterer_illust_ps_style = thisOr(undo_magic_quotes($_REQUEST['filterer_illust_ps_style']), '');
	$filterer_noetictension = thisOr(undo_magic_quotes($_REQUEST['filterer_noetictension']), '');
	$filterer_illust_nt = thisOr(undo_magic_quotes($_REQUEST['filterer_illust_nt']), '');
	$filterer_impression = thisOr(undo_magic_quotes($_REQUEST['filterer_impression']), '');
	$filterer_illust_im = thisOr(undo_magic_quotes($_REQUEST['filterer_illust_im']), '');
	$filterer_mcs_problem = thisOr(undo_magic_quotes($_REQUEST['filterer_mcs_problem']), '');
	$filterer_illust_mcs_problem = thisOr(undo_magic_quotes($_REQUEST['filterer_illust_mcs_problem']), '');
	$filterer_illust_mcs_solution = thisOr(undo_magic_quotes($_REQUEST['filterer_illust_mcs_solution']), '');
	$filterer_illust_mcs_symptom = thisOr(undo_magic_quotes($_REQUEST['filterer_illust_mcs_symptom']), '');
	$filterer_illust_mcs_response = thisOr(undo_magic_quotes($_REQUEST['filterer_illust_mcs_response']), '');

	// populate filterers, starting from children to grand-parents
	if($filterer_illust_resolve && !$filterer_agent_id) $filterer_agent_id = sqlValue("select author from character_illustration where id='" . makeSafe($filterer_illust_resolve) . "'");
	if($filterer_illust_growth && !$filterer_agent_id) $filterer_agent_id = sqlValue("select author from character_illustration where id='" . makeSafe($filterer_illust_growth) . "'");
	if($filterer_illust_approach && !$filterer_agent_id) $filterer_agent_id = sqlValue("select author from character_illustration where id='" . makeSafe($filterer_illust_approach) . "'");
	if($filterer_mcs_problem && !$filterer_) $filterer_ = sqlValue("select  from storypoints_static where id='" . makeSafe($filterer_mcs_problem) . "'");

	// unique random identifier
	$rnd1 = ($dvprint ? rand(1000000, 9999999) : '');
	// combobox: agent_id
	$combo_agent_id = new DataCombo;
	// combobox: mc_resolve
	$combo_mc_resolve = new Combo;
	$combo_mc_resolve->ListType = 0;
	$combo_mc_resolve->MultipleSeparator = ', ';
	$combo_mc_resolve->ListBoxHeight = 10;
	$combo_mc_resolve->RadiosPerLine = 1;
	if(is_file(dirname(__FILE__).'/hooks/characters.mc_resolve.csv')){
		$mc_resolve_data = addslashes(implode('', @file(dirname(__FILE__).'/hooks/characters.mc_resolve.csv')));
		$combo_mc_resolve->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions($mc_resolve_data)));
		$combo_mc_resolve->ListData = $combo_mc_resolve->ListItem;
	}else{
		$combo_mc_resolve->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions("Change;;Steadfeast")));
		$combo_mc_resolve->ListData = $combo_mc_resolve->ListItem;
	}
	$combo_mc_resolve->SelectName = 'mc_resolve';
	// combobox: illust_resolve, filterable by: agent_id
	$combo_illust_resolve = new DataCombo;
	// combobox: mc_growth
	$combo_mc_growth = new Combo;
	$combo_mc_growth->ListType = 0;
	$combo_mc_growth->MultipleSeparator = ', ';
	$combo_mc_growth->ListBoxHeight = 10;
	$combo_mc_growth->RadiosPerLine = 1;
	if(is_file(dirname(__FILE__).'/hooks/characters.mc_growth.csv')){
		$mc_growth_data = addslashes(implode('', @file(dirname(__FILE__).'/hooks/characters.mc_growth.csv')));
		$combo_mc_growth->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions($mc_growth_data)));
		$combo_mc_growth->ListData = $combo_mc_growth->ListItem;
	}else{
		$combo_mc_growth->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions("Start;;Stop")));
		$combo_mc_growth->ListData = $combo_mc_growth->ListItem;
	}
	$combo_mc_growth->SelectName = 'mc_growth';
	// combobox: illust_growth, filterable by: agent_id
	$combo_illust_growth = new DataCombo;
	// combobox: mc_approach
	$combo_mc_approach = new Combo;
	$combo_mc_approach->ListType = 0;
	$combo_mc_approach->MultipleSeparator = ', ';
	$combo_mc_approach->ListBoxHeight = 10;
	$combo_mc_approach->RadiosPerLine = 1;
	if(is_file(dirname(__FILE__).'/hooks/characters.mc_approach.csv')){
		$mc_approach_data = addslashes(implode('', @file(dirname(__FILE__).'/hooks/characters.mc_approach.csv')));
		$combo_mc_approach->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions($mc_approach_data)));
		$combo_mc_approach->ListData = $combo_mc_approach->ListItem;
	}else{
		$combo_mc_approach->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions("Be-er;;Do-er")));
		$combo_mc_approach->ListData = $combo_mc_approach->ListItem;
	}
	$combo_mc_approach->SelectName = 'mc_approach';
	// combobox: illust_approach, filterable by: agent_id
	$combo_illust_approach = new DataCombo;
	// combobox: mc_ps_style
	$combo_mc_ps_style = new Combo;
	$combo_mc_ps_style->ListType = 0;
	$combo_mc_ps_style->MultipleSeparator = ', ';
	$combo_mc_ps_style->ListBoxHeight = 10;
	$combo_mc_ps_style->RadiosPerLine = 1;
	if(is_file(dirname(__FILE__).'/hooks/characters.mc_ps_style.csv')){
		$mc_ps_style_data = addslashes(implode('', @file(dirname(__FILE__).'/hooks/characters.mc_ps_style.csv')));
		$combo_mc_ps_style->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions($mc_ps_style_data)));
		$combo_mc_ps_style->ListData = $combo_mc_ps_style->ListItem;
	}else{
		$combo_mc_ps_style->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions("Logical;;Intuitive")));
		$combo_mc_ps_style->ListData = $combo_mc_ps_style->ListItem;
	}
	$combo_mc_ps_style->SelectName = 'mc_ps_style';
	// combobox: illust_ps_style
	$combo_illust_ps_style = new DataCombo;
	// combobox: noetictension
	$combo_noetictension = new DataCombo;
	// combobox: illust_nt
	$combo_illust_nt = new DataCombo;
	// combobox: impression
	$combo_impression = new DataCombo;
	// combobox: illust_im
	$combo_illust_im = new DataCombo;
	// combobox: mcs_problem, filterable by: story
	$combo_mcs_problem = new DataCombo;
	// combobox: illust_mcs_problem
	$combo_illust_mcs_problem = new DataCombo;
	// combobox: illust_mcs_solution
	$combo_illust_mcs_solution = new DataCombo;
	// combobox: illust_mcs_symptom
	$combo_illust_mcs_symptom = new DataCombo;
	// combobox: illust_mcs_response
	$combo_illust_mcs_response = new DataCombo;

	if($selected_id){
		// mm: check member permissions
		if(!$arrPerm[2]){
			return "";
		}
		// mm: who is the owner?
		$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='characters' and pkValue='".makeSafe($selected_id)."'");
		$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='characters' and pkValue='".makeSafe($selected_id)."'");
		if($arrPerm[2]==1 && getLoggedMemberID()!=$ownerMemberID){
			return "";
		}
		if($arrPerm[2]==2 && getLoggedGroupID()!=$ownerGroupID){
			return "";
		}

		// can edit?
		if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3){
			$AllowUpdate=1;
		}else{
			$AllowUpdate=0;
		}

		$res = sql("select * from `characters` where `id`='".makeSafe($selected_id)."'", $eo);
		if(!($row = db_fetch_array($res))){
			return error_message($Translation['No records found'], 'characters_view.php', false);
		}
		$urow = $row; /* unsanitized data */
		$hc = new CI_Input();
		$row = $hc->xss_clean($row); /* sanitize data */
		$combo_agent_id->SelectedData = $row['agent_id'];
		$combo_mc_resolve->SelectedData = $row['mc_resolve'];
		$combo_illust_resolve->SelectedData = $row['illust_resolve'];
		$combo_mc_growth->SelectedData = $row['mc_growth'];
		$combo_illust_growth->SelectedData = $row['illust_growth'];
		$combo_mc_approach->SelectedData = $row['mc_approach'];
		$combo_illust_approach->SelectedData = $row['illust_approach'];
		$combo_mc_ps_style->SelectedData = $row['mc_ps_style'];
		$combo_illust_ps_style->SelectedData = $row['illust_ps_style'];
		$combo_noetictension->SelectedData = $row['noetictension'];
		$combo_illust_nt->SelectedData = $row['illust_nt'];
		$combo_impression->SelectedData = $row['impression'];
		$combo_illust_im->SelectedData = $row['illust_im'];
		$combo_mcs_problem->SelectedData = $row['mcs_problem'];
		$combo_illust_mcs_problem->SelectedData = $row['illust_mcs_problem'];
		$combo_illust_mcs_solution->SelectedData = $row['illust_mcs_solution'];
		$combo_illust_mcs_symptom->SelectedData = $row['illust_mcs_symptom'];
		$combo_illust_mcs_response->SelectedData = $row['illust_mcs_response'];
	}else{
		$combo_agent_id->SelectedData = $filterer_agent_id;
		$combo_mc_resolve->SelectedText = ( $_REQUEST['FilterField'][1]=='6' && $_REQUEST['FilterOperator'][1]=='<=>' ? (get_magic_quotes_gpc() ? stripslashes($_REQUEST['FilterValue'][1]) : $_REQUEST['FilterValue'][1]) : "");
		$combo_illust_resolve->SelectedData = $filterer_illust_resolve;
		$combo_mc_growth->SelectedText = ( $_REQUEST['FilterField'][1]=='8' && $_REQUEST['FilterOperator'][1]=='<=>' ? (get_magic_quotes_gpc() ? stripslashes($_REQUEST['FilterValue'][1]) : $_REQUEST['FilterValue'][1]) : "");
		$combo_illust_growth->SelectedData = $filterer_illust_growth;
		$combo_mc_approach->SelectedText = ( $_REQUEST['FilterField'][1]=='10' && $_REQUEST['FilterOperator'][1]=='<=>' ? (get_magic_quotes_gpc() ? stripslashes($_REQUEST['FilterValue'][1]) : $_REQUEST['FilterValue'][1]) : "");
		$combo_illust_approach->SelectedData = $filterer_illust_approach;
		$combo_mc_ps_style->SelectedText = ( $_REQUEST['FilterField'][1]=='12' && $_REQUEST['FilterOperator'][1]=='<=>' ? (get_magic_quotes_gpc() ? stripslashes($_REQUEST['FilterValue'][1]) : $_REQUEST['FilterValue'][1]) : "");
		$combo_illust_ps_style->SelectedData = $filterer_illust_ps_style;
		$combo_noetictension->SelectedData = $filterer_noetictension;
		$combo_illust_nt->SelectedData = $filterer_illust_nt;
		$combo_impression->SelectedData = $filterer_impression;
		$combo_illust_im->SelectedData = $filterer_illust_im;
		$combo_mcs_problem->SelectedData = $filterer_mcs_problem;
		$combo_illust_mcs_problem->SelectedData = $filterer_illust_mcs_problem;
		$combo_illust_mcs_solution->SelectedData = $filterer_illust_mcs_solution;
		$combo_illust_mcs_symptom->SelectedData = $filterer_illust_mcs_symptom;
		$combo_illust_mcs_response->SelectedData = $filterer_illust_mcs_response;
	}
	$combo_agent_id->HTML = '<span id="agent_id-container' . $rnd1 . '"></span><input type="hidden" name="agent_id" id="agent_id' . $rnd1 . '" value="' . html_attr($combo_agent_id->SelectedData) . '">';
	$combo_agent_id->MatchText = '<span id="agent_id-container-readonly' . $rnd1 . '"></span><input type="hidden" name="agent_id" id="agent_id' . $rnd1 . '" value="' . html_attr($combo_agent_id->SelectedData) . '">';
	$combo_mc_resolve->Render();
	$combo_illust_resolve->HTML = '<span id="illust_resolve-container' . $rnd1 . '"></span><input type="hidden" name="illust_resolve" id="illust_resolve' . $rnd1 . '" value="' . html_attr($combo_illust_resolve->SelectedData) . '">';
	$combo_illust_resolve->MatchText = '<span id="illust_resolve-container-readonly' . $rnd1 . '"></span><input type="hidden" name="illust_resolve" id="illust_resolve' . $rnd1 . '" value="' . html_attr($combo_illust_resolve->SelectedData) . '">';
	$combo_mc_growth->Render();
	$combo_illust_growth->HTML = '<span id="illust_growth-container' . $rnd1 . '"></span><input type="hidden" name="illust_growth" id="illust_growth' . $rnd1 . '" value="' . html_attr($combo_illust_growth->SelectedData) . '">';
	$combo_illust_growth->MatchText = '<span id="illust_growth-container-readonly' . $rnd1 . '"></span><input type="hidden" name="illust_growth" id="illust_growth' . $rnd1 . '" value="' . html_attr($combo_illust_growth->SelectedData) . '">';
	$combo_mc_approach->Render();
	$combo_illust_approach->HTML = '<span id="illust_approach-container' . $rnd1 . '"></span><input type="hidden" name="illust_approach" id="illust_approach' . $rnd1 . '" value="' . html_attr($combo_illust_approach->SelectedData) . '">';
	$combo_illust_approach->MatchText = '<span id="illust_approach-container-readonly' . $rnd1 . '"></span><input type="hidden" name="illust_approach" id="illust_approach' . $rnd1 . '" value="' . html_attr($combo_illust_approach->SelectedData) . '">';
	$combo_mc_ps_style->Render();
	$combo_illust_ps_style->HTML = '<span id="illust_ps_style-container' . $rnd1 . '"></span><input type="hidden" name="illust_ps_style" id="illust_ps_style' . $rnd1 . '" value="' . html_attr($combo_illust_ps_style->SelectedData) . '">';
	$combo_illust_ps_style->MatchText = '<span id="illust_ps_style-container-readonly' . $rnd1 . '"></span><input type="hidden" name="illust_ps_style" id="illust_ps_style' . $rnd1 . '" value="' . html_attr($combo_illust_ps_style->SelectedData) . '">';
	$combo_noetictension->HTML = '<span id="noetictension-container' . $rnd1 . '"></span><input type="hidden" name="noetictension" id="noetictension' . $rnd1 . '" value="' . html_attr($combo_noetictension->SelectedData) . '">';
	$combo_noetictension->MatchText = '<span id="noetictension-container-readonly' . $rnd1 . '"></span><input type="hidden" name="noetictension" id="noetictension' . $rnd1 . '" value="' . html_attr($combo_noetictension->SelectedData) . '">';
	$combo_illust_nt->HTML = '<span id="illust_nt-container' . $rnd1 . '"></span><input type="hidden" name="illust_nt" id="illust_nt' . $rnd1 . '" value="' . html_attr($combo_illust_nt->SelectedData) . '">';
	$combo_illust_nt->MatchText = '<span id="illust_nt-container-readonly' . $rnd1 . '"></span><input type="hidden" name="illust_nt" id="illust_nt' . $rnd1 . '" value="' . html_attr($combo_illust_nt->SelectedData) . '">';
	$combo_impression->HTML = '<span id="impression-container' . $rnd1 . '"></span><input type="hidden" name="impression" id="impression' . $rnd1 . '" value="' . html_attr($combo_impression->SelectedData) . '">';
	$combo_impression->MatchText = '<span id="impression-container-readonly' . $rnd1 . '"></span><input type="hidden" name="impression" id="impression' . $rnd1 . '" value="' . html_attr($combo_impression->SelectedData) . '">';
	$combo_illust_im->HTML = '<span id="illust_im-container' . $rnd1 . '"></span><input type="hidden" name="illust_im" id="illust_im' . $rnd1 . '" value="' . html_attr($combo_illust_im->SelectedData) . '">';
	$combo_illust_im->MatchText = '<span id="illust_im-container-readonly' . $rnd1 . '"></span><input type="hidden" name="illust_im" id="illust_im' . $rnd1 . '" value="' . html_attr($combo_illust_im->SelectedData) . '">';
	$combo_mcs_problem->HTML = '<span id="mcs_problem-container' . $rnd1 . '"></span><input type="hidden" name="mcs_problem" id="mcs_problem' . $rnd1 . '" value="' . html_attr($combo_mcs_problem->SelectedData) . '">';
	$combo_mcs_problem->MatchText = '<span id="mcs_problem-container-readonly' . $rnd1 . '"></span><input type="hidden" name="mcs_problem" id="mcs_problem' . $rnd1 . '" value="' . html_attr($combo_mcs_problem->SelectedData) . '">';
	$combo_illust_mcs_problem->HTML = '<span id="illust_mcs_problem-container' . $rnd1 . '"></span><input type="hidden" name="illust_mcs_problem" id="illust_mcs_problem' . $rnd1 . '" value="' . html_attr($combo_illust_mcs_problem->SelectedData) . '">';
	$combo_illust_mcs_problem->MatchText = '<span id="illust_mcs_problem-container-readonly' . $rnd1 . '"></span><input type="hidden" name="illust_mcs_problem" id="illust_mcs_problem' . $rnd1 . '" value="' . html_attr($combo_illust_mcs_problem->SelectedData) . '">';
	$combo_illust_mcs_solution->HTML = '<span id="illust_mcs_solution-container' . $rnd1 . '"></span><input type="hidden" name="illust_mcs_solution" id="illust_mcs_solution' . $rnd1 . '" value="' . html_attr($combo_illust_mcs_solution->SelectedData) . '">';
	$combo_illust_mcs_solution->MatchText = '<span id="illust_mcs_solution-container-readonly' . $rnd1 . '"></span><input type="hidden" name="illust_mcs_solution" id="illust_mcs_solution' . $rnd1 . '" value="' . html_attr($combo_illust_mcs_solution->SelectedData) . '">';
	$combo_illust_mcs_symptom->HTML = '<span id="illust_mcs_symptom-container' . $rnd1 . '"></span><input type="hidden" name="illust_mcs_symptom" id="illust_mcs_symptom' . $rnd1 . '" value="' . html_attr($combo_illust_mcs_symptom->SelectedData) . '">';
	$combo_illust_mcs_symptom->MatchText = '<span id="illust_mcs_symptom-container-readonly' . $rnd1 . '"></span><input type="hidden" name="illust_mcs_symptom" id="illust_mcs_symptom' . $rnd1 . '" value="' . html_attr($combo_illust_mcs_symptom->SelectedData) . '">';
	$combo_illust_mcs_response->HTML = '<span id="illust_mcs_response-container' . $rnd1 . '"></span><input type="hidden" name="illust_mcs_response" id="illust_mcs_response' . $rnd1 . '" value="' . html_attr($combo_illust_mcs_response->SelectedData) . '">';
	$combo_illust_mcs_response->MatchText = '<span id="illust_mcs_response-container-readonly' . $rnd1 . '"></span><input type="hidden" name="illust_mcs_response" id="illust_mcs_response' . $rnd1 . '" value="' . html_attr($combo_illust_mcs_response->SelectedData) . '">';

	ob_start();
	?>

	<script>
		// initial lookup values
		AppGini.current_agent_id__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['agent_id'] : $filterer_agent_id); ?>"};
		AppGini.current_illust_resolve__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['illust_resolve'] : $filterer_illust_resolve); ?>"};
		AppGini.current_illust_growth__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['illust_growth'] : $filterer_illust_growth); ?>"};
		AppGini.current_illust_approach__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['illust_approach'] : $filterer_illust_approach); ?>"};
		AppGini.current_illust_ps_style__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['illust_ps_style'] : $filterer_illust_ps_style); ?>"};
		AppGini.current_noetictension__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['noetictension'] : $filterer_noetictension); ?>"};
		AppGini.current_illust_nt__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['illust_nt'] : $filterer_illust_nt); ?>"};
		AppGini.current_impression__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['impression'] : $filterer_impression); ?>"};
		AppGini.current_illust_im__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['illust_im'] : $filterer_illust_im); ?>"};
		AppGini.current_mcs_problem__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['mcs_problem'] : $filterer_mcs_problem); ?>"};
		AppGini.current_illust_mcs_problem__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['illust_mcs_problem'] : $filterer_illust_mcs_problem); ?>"};
		AppGini.current_illust_mcs_solution__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['illust_mcs_solution'] : $filterer_illust_mcs_solution); ?>"};
		AppGini.current_illust_mcs_symptom__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['illust_mcs_symptom'] : $filterer_illust_mcs_symptom); ?>"};
		AppGini.current_illust_mcs_response__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['illust_mcs_response'] : $filterer_illust_mcs_response); ?>"};

		jQuery(function() {
			setTimeout(function(){
				if(typeof(agent_id_reload__RAND__) == 'function') agent_id_reload__RAND__();
				<?php echo (!$AllowUpdate || $dvprint ? 'if(typeof(illust_resolve_reload__RAND__) == \'function\') illust_resolve_reload__RAND__(AppGini.current_agent_id__RAND__.value);' : ''); ?>
				<?php echo (!$AllowUpdate || $dvprint ? 'if(typeof(illust_growth_reload__RAND__) == \'function\') illust_growth_reload__RAND__(AppGini.current_agent_id__RAND__.value);' : ''); ?>
				<?php echo (!$AllowUpdate || $dvprint ? 'if(typeof(illust_approach_reload__RAND__) == \'function\') illust_approach_reload__RAND__(AppGini.current_agent_id__RAND__.value);' : ''); ?>
				if(typeof(illust_ps_style_reload__RAND__) == 'function') illust_ps_style_reload__RAND__();
				if(typeof(noetictension_reload__RAND__) == 'function') noetictension_reload__RAND__();
				if(typeof(illust_nt_reload__RAND__) == 'function') illust_nt_reload__RAND__();
				if(typeof(impression_reload__RAND__) == 'function') impression_reload__RAND__();
				if(typeof(illust_im_reload__RAND__) == 'function') illust_im_reload__RAND__();
				<?php echo (!$AllowUpdate || $dvprint ? 'if(typeof(mcs_problem_reload__RAND__) == \'function\') mcs_problem_reload__RAND__(AppGini.current_story__RAND__.value);' : ''); ?>
				if(typeof(illust_mcs_problem_reload__RAND__) == 'function') illust_mcs_problem_reload__RAND__();
				if(typeof(illust_mcs_solution_reload__RAND__) == 'function') illust_mcs_solution_reload__RAND__();
				if(typeof(illust_mcs_symptom_reload__RAND__) == 'function') illust_mcs_symptom_reload__RAND__();
				if(typeof(illust_mcs_response_reload__RAND__) == 'function') illust_mcs_response_reload__RAND__();
			}, 10); /* we need to slightly delay client-side execution of the above code to allow AppGini.ajaxCache to work */
		});
		function agent_id_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#agent_id-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_agent_id__RAND__.value, t: 'characters', f: 'agent_id' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="agent_id"]').val(resp.results[0].id);
							$j('[id=agent_id-container-readonly__RAND__]').html('<span id="agent_id-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=biblio_author_view_parent]').hide(); }else{ $j('.btn[id=biblio_author_view_parent]').show(); }

						if(typeof(illust_resolve_reload__RAND__) == 'function') illust_resolve_reload__RAND__(AppGini.current_agent_id__RAND__.value);
						if(typeof(illust_growth_reload__RAND__) == 'function') illust_growth_reload__RAND__(AppGini.current_agent_id__RAND__.value);
						if(typeof(illust_approach_reload__RAND__) == 'function') illust_approach_reload__RAND__(AppGini.current_agent_id__RAND__.value);

							if(typeof(agent_id_update_autofills__RAND__) == 'function') agent_id_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ /* */ return { s: term, p: page, t: 'characters', f: 'agent_id' }; },
					results: function(resp, page){ /* */ return resp; }
				},
				escapeMarkup: function(str){ /* */ return str; }
			}).on('change', function(e){
				AppGini.current_agent_id__RAND__.value = e.added.id;
				AppGini.current_agent_id__RAND__.text = e.added.text;
				$j('[name="agent_id"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=biblio_author_view_parent]').hide(); }else{ $j('.btn[id=biblio_author_view_parent]').show(); }

						if(typeof(illust_resolve_reload__RAND__) == 'function') illust_resolve_reload__RAND__(AppGini.current_agent_id__RAND__.value);
						if(typeof(illust_growth_reload__RAND__) == 'function') illust_growth_reload__RAND__(AppGini.current_agent_id__RAND__.value);
						if(typeof(illust_approach_reload__RAND__) == 'function') illust_approach_reload__RAND__(AppGini.current_agent_id__RAND__.value);

				if(typeof(agent_id_update_autofills__RAND__) == 'function') agent_id_update_autofills__RAND__();
			});

			if(!$j("#agent_id-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_agent_id__RAND__.value, t: 'characters', f: 'agent_id' },
					success: function(resp){
						$j('[name="agent_id"]').val(resp.results[0].id);
						$j('[id=agent_id-container-readonly__RAND__]').html('<span id="agent_id-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=biblio_author_view_parent]').hide(); }else{ $j('.btn[id=biblio_author_view_parent]').show(); }

						if(typeof(agent_id_update_autofills__RAND__) == 'function') agent_id_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_agent_id__RAND__.value, t: 'characters', f: 'agent_id' },
				success: function(resp){
					$j('[id=agent_id-container__RAND__], [id=agent_id-container-readonly__RAND__]').html('<span id="agent_id-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=biblio_author_view_parent]').hide(); }else{ $j('.btn[id=biblio_author_view_parent]').show(); }

					if(typeof(agent_id_update_autofills__RAND__) == 'function') agent_id_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function illust_resolve_reload__RAND__(filterer_agent_id){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#illust_resolve-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { filterer_agent_id: filterer_agent_id, id: AppGini.current_illust_resolve__RAND__.value, t: 'characters', f: 'illust_resolve' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="illust_resolve"]').val(resp.results[0].id);
							$j('[id=illust_resolve-container-readonly__RAND__]').html('<span id="illust_resolve-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=character_illustration_view_parent]').hide(); }else{ $j('.btn[id=character_illustration_view_parent]').show(); }


							if(typeof(illust_resolve_update_autofills__RAND__) == 'function') illust_resolve_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ /* */ return { filterer_agent_id: filterer_agent_id, s: term, p: page, t: 'characters', f: 'illust_resolve' }; },
					results: function(resp, page){ /* */ return resp; }
				},
				escapeMarkup: function(str){ /* */ return str; }
			}).on('change', function(e){
				AppGini.current_illust_resolve__RAND__.value = e.added.id;
				AppGini.current_illust_resolve__RAND__.text = e.added.text;
				$j('[name="illust_resolve"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=character_illustration_view_parent]').hide(); }else{ $j('.btn[id=character_illustration_view_parent]').show(); }


				if(typeof(illust_resolve_update_autofills__RAND__) == 'function') illust_resolve_update_autofills__RAND__();
			});

			if(!$j("#illust_resolve-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_illust_resolve__RAND__.value, t: 'characters', f: 'illust_resolve' },
					success: function(resp){
						$j('[name="illust_resolve"]').val(resp.results[0].id);
						$j('[id=illust_resolve-container-readonly__RAND__]').html('<span id="illust_resolve-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=character_illustration_view_parent]').hide(); }else{ $j('.btn[id=character_illustration_view_parent]').show(); }

						if(typeof(illust_resolve_update_autofills__RAND__) == 'function') illust_resolve_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_illust_resolve__RAND__.value, t: 'characters', f: 'illust_resolve' },
				success: function(resp){
					$j('[id=illust_resolve-container__RAND__], [id=illust_resolve-container-readonly__RAND__]').html('<span id="illust_resolve-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=character_illustration_view_parent]').hide(); }else{ $j('.btn[id=character_illustration_view_parent]').show(); }

					if(typeof(illust_resolve_update_autofills__RAND__) == 'function') illust_resolve_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function illust_growth_reload__RAND__(filterer_agent_id){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#illust_growth-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { filterer_agent_id: filterer_agent_id, id: AppGini.current_illust_growth__RAND__.value, t: 'characters', f: 'illust_growth' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="illust_growth"]').val(resp.results[0].id);
							$j('[id=illust_growth-container-readonly__RAND__]').html('<span id="illust_growth-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=character_illustration_view_parent]').hide(); }else{ $j('.btn[id=character_illustration_view_parent]').show(); }


							if(typeof(illust_growth_update_autofills__RAND__) == 'function') illust_growth_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ /* */ return { filterer_agent_id: filterer_agent_id, s: term, p: page, t: 'characters', f: 'illust_growth' }; },
					results: function(resp, page){ /* */ return resp; }
				},
				escapeMarkup: function(str){ /* */ return str; }
			}).on('change', function(e){
				AppGini.current_illust_growth__RAND__.value = e.added.id;
				AppGini.current_illust_growth__RAND__.text = e.added.text;
				$j('[name="illust_growth"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=character_illustration_view_parent]').hide(); }else{ $j('.btn[id=character_illustration_view_parent]').show(); }


				if(typeof(illust_growth_update_autofills__RAND__) == 'function') illust_growth_update_autofills__RAND__();
			});

			if(!$j("#illust_growth-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_illust_growth__RAND__.value, t: 'characters', f: 'illust_growth' },
					success: function(resp){
						$j('[name="illust_growth"]').val(resp.results[0].id);
						$j('[id=illust_growth-container-readonly__RAND__]').html('<span id="illust_growth-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=character_illustration_view_parent]').hide(); }else{ $j('.btn[id=character_illustration_view_parent]').show(); }

						if(typeof(illust_growth_update_autofills__RAND__) == 'function') illust_growth_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_illust_growth__RAND__.value, t: 'characters', f: 'illust_growth' },
				success: function(resp){
					$j('[id=illust_growth-container__RAND__], [id=illust_growth-container-readonly__RAND__]').html('<span id="illust_growth-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=character_illustration_view_parent]').hide(); }else{ $j('.btn[id=character_illustration_view_parent]').show(); }

					if(typeof(illust_growth_update_autofills__RAND__) == 'function') illust_growth_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function illust_approach_reload__RAND__(filterer_agent_id){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#illust_approach-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { filterer_agent_id: filterer_agent_id, id: AppGini.current_illust_approach__RAND__.value, t: 'characters', f: 'illust_approach' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="illust_approach"]').val(resp.results[0].id);
							$j('[id=illust_approach-container-readonly__RAND__]').html('<span id="illust_approach-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=character_illustration_view_parent]').hide(); }else{ $j('.btn[id=character_illustration_view_parent]').show(); }


							if(typeof(illust_approach_update_autofills__RAND__) == 'function') illust_approach_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ /* */ return { filterer_agent_id: filterer_agent_id, s: term, p: page, t: 'characters', f: 'illust_approach' }; },
					results: function(resp, page){ /* */ return resp; }
				},
				escapeMarkup: function(str){ /* */ return str; }
			}).on('change', function(e){
				AppGini.current_illust_approach__RAND__.value = e.added.id;
				AppGini.current_illust_approach__RAND__.text = e.added.text;
				$j('[name="illust_approach"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=character_illustration_view_parent]').hide(); }else{ $j('.btn[id=character_illustration_view_parent]').show(); }


				if(typeof(illust_approach_update_autofills__RAND__) == 'function') illust_approach_update_autofills__RAND__();
			});

			if(!$j("#illust_approach-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_illust_approach__RAND__.value, t: 'characters', f: 'illust_approach' },
					success: function(resp){
						$j('[name="illust_approach"]').val(resp.results[0].id);
						$j('[id=illust_approach-container-readonly__RAND__]').html('<span id="illust_approach-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=character_illustration_view_parent]').hide(); }else{ $j('.btn[id=character_illustration_view_parent]').show(); }

						if(typeof(illust_approach_update_autofills__RAND__) == 'function') illust_approach_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_illust_approach__RAND__.value, t: 'characters', f: 'illust_approach' },
				success: function(resp){
					$j('[id=illust_approach-container__RAND__], [id=illust_approach-container-readonly__RAND__]').html('<span id="illust_approach-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=character_illustration_view_parent]').hide(); }else{ $j('.btn[id=character_illustration_view_parent]').show(); }

					if(typeof(illust_approach_update_autofills__RAND__) == 'function') illust_approach_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function illust_ps_style_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#illust_ps_style-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_illust_ps_style__RAND__.value, t: 'characters', f: 'illust_ps_style' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="illust_ps_style"]').val(resp.results[0].id);
							$j('[id=illust_ps_style-container-readonly__RAND__]').html('<span id="illust_ps_style-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=character_illustration_view_parent]').hide(); }else{ $j('.btn[id=character_illustration_view_parent]').show(); }


							if(typeof(illust_ps_style_update_autofills__RAND__) == 'function') illust_ps_style_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ /* */ return { s: term, p: page, t: 'characters', f: 'illust_ps_style' }; },
					results: function(resp, page){ /* */ return resp; }
				},
				escapeMarkup: function(str){ /* */ return str; }
			}).on('change', function(e){
				AppGini.current_illust_ps_style__RAND__.value = e.added.id;
				AppGini.current_illust_ps_style__RAND__.text = e.added.text;
				$j('[name="illust_ps_style"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=character_illustration_view_parent]').hide(); }else{ $j('.btn[id=character_illustration_view_parent]').show(); }


				if(typeof(illust_ps_style_update_autofills__RAND__) == 'function') illust_ps_style_update_autofills__RAND__();
			});

			if(!$j("#illust_ps_style-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_illust_ps_style__RAND__.value, t: 'characters', f: 'illust_ps_style' },
					success: function(resp){
						$j('[name="illust_ps_style"]').val(resp.results[0].id);
						$j('[id=illust_ps_style-container-readonly__RAND__]').html('<span id="illust_ps_style-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=character_illustration_view_parent]').hide(); }else{ $j('.btn[id=character_illustration_view_parent]').show(); }

						if(typeof(illust_ps_style_update_autofills__RAND__) == 'function') illust_ps_style_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_illust_ps_style__RAND__.value, t: 'characters', f: 'illust_ps_style' },
				success: function(resp){
					$j('[id=illust_ps_style-container__RAND__], [id=illust_ps_style-container-readonly__RAND__]').html('<span id="illust_ps_style-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=character_illustration_view_parent]').hide(); }else{ $j('.btn[id=character_illustration_view_parent]').show(); }

					if(typeof(illust_ps_style_update_autofills__RAND__) == 'function') illust_ps_style_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function noetictension_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#noetictension-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_noetictension__RAND__.value, t: 'characters', f: 'noetictension' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="noetictension"]').val(resp.results[0].id);
							$j('[id=noetictension-container-readonly__RAND__]').html('<span id="noetictension-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_nt_view_parent]').hide(); }else{ $j('.btn[id=class_nt_view_parent]').show(); }


							if(typeof(noetictension_update_autofills__RAND__) == 'function') noetictension_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ /* */ return { s: term, p: page, t: 'characters', f: 'noetictension' }; },
					results: function(resp, page){ /* */ return resp; }
				},
				escapeMarkup: function(str){ /* */ return str; }
			}).on('change', function(e){
				AppGini.current_noetictension__RAND__.value = e.added.id;
				AppGini.current_noetictension__RAND__.text = e.added.text;
				$j('[name="noetictension"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_nt_view_parent]').hide(); }else{ $j('.btn[id=class_nt_view_parent]').show(); }


				if(typeof(noetictension_update_autofills__RAND__) == 'function') noetictension_update_autofills__RAND__();
			});

			if(!$j("#noetictension-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_noetictension__RAND__.value, t: 'characters', f: 'noetictension' },
					success: function(resp){
						$j('[name="noetictension"]').val(resp.results[0].id);
						$j('[id=noetictension-container-readonly__RAND__]').html('<span id="noetictension-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_nt_view_parent]').hide(); }else{ $j('.btn[id=class_nt_view_parent]').show(); }

						if(typeof(noetictension_update_autofills__RAND__) == 'function') noetictension_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_noetictension__RAND__.value, t: 'characters', f: 'noetictension' },
				success: function(resp){
					$j('[id=noetictension-container__RAND__], [id=noetictension-container-readonly__RAND__]').html('<span id="noetictension-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_nt_view_parent]').hide(); }else{ $j('.btn[id=class_nt_view_parent]').show(); }

					if(typeof(noetictension_update_autofills__RAND__) == 'function') noetictension_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function illust_nt_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#illust_nt-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_illust_nt__RAND__.value, t: 'characters', f: 'illust_nt' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="illust_nt"]').val(resp.results[0].id);
							$j('[id=illust_nt-container-readonly__RAND__]').html('<span id="illust_nt-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=character_illustration_view_parent]').hide(); }else{ $j('.btn[id=character_illustration_view_parent]').show(); }


							if(typeof(illust_nt_update_autofills__RAND__) == 'function') illust_nt_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ /* */ return { s: term, p: page, t: 'characters', f: 'illust_nt' }; },
					results: function(resp, page){ /* */ return resp; }
				},
				escapeMarkup: function(str){ /* */ return str; }
			}).on('change', function(e){
				AppGini.current_illust_nt__RAND__.value = e.added.id;
				AppGini.current_illust_nt__RAND__.text = e.added.text;
				$j('[name="illust_nt"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=character_illustration_view_parent]').hide(); }else{ $j('.btn[id=character_illustration_view_parent]').show(); }


				if(typeof(illust_nt_update_autofills__RAND__) == 'function') illust_nt_update_autofills__RAND__();
			});

			if(!$j("#illust_nt-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_illust_nt__RAND__.value, t: 'characters', f: 'illust_nt' },
					success: function(resp){
						$j('[name="illust_nt"]').val(resp.results[0].id);
						$j('[id=illust_nt-container-readonly__RAND__]').html('<span id="illust_nt-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=character_illustration_view_parent]').hide(); }else{ $j('.btn[id=character_illustration_view_parent]').show(); }

						if(typeof(illust_nt_update_autofills__RAND__) == 'function') illust_nt_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_illust_nt__RAND__.value, t: 'characters', f: 'illust_nt' },
				success: function(resp){
					$j('[id=illust_nt-container__RAND__], [id=illust_nt-container-readonly__RAND__]').html('<span id="illust_nt-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=character_illustration_view_parent]').hide(); }else{ $j('.btn[id=character_illustration_view_parent]').show(); }

					if(typeof(illust_nt_update_autofills__RAND__) == 'function') illust_nt_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function impression_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#impression-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_impression__RAND__.value, t: 'characters', f: 'impression' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="impression"]').val(resp.results[0].id);
							$j('[id=impression-container-readonly__RAND__]').html('<span id="impression-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_im_view_parent]').hide(); }else{ $j('.btn[id=class_im_view_parent]').show(); }


							if(typeof(impression_update_autofills__RAND__) == 'function') impression_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ /* */ return { s: term, p: page, t: 'characters', f: 'impression' }; },
					results: function(resp, page){ /* */ return resp; }
				},
				escapeMarkup: function(str){ /* */ return str; }
			}).on('change', function(e){
				AppGini.current_impression__RAND__.value = e.added.id;
				AppGini.current_impression__RAND__.text = e.added.text;
				$j('[name="impression"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_im_view_parent]').hide(); }else{ $j('.btn[id=class_im_view_parent]').show(); }


				if(typeof(impression_update_autofills__RAND__) == 'function') impression_update_autofills__RAND__();
			});

			if(!$j("#impression-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_impression__RAND__.value, t: 'characters', f: 'impression' },
					success: function(resp){
						$j('[name="impression"]').val(resp.results[0].id);
						$j('[id=impression-container-readonly__RAND__]').html('<span id="impression-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_im_view_parent]').hide(); }else{ $j('.btn[id=class_im_view_parent]').show(); }

						if(typeof(impression_update_autofills__RAND__) == 'function') impression_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_impression__RAND__.value, t: 'characters', f: 'impression' },
				success: function(resp){
					$j('[id=impression-container__RAND__], [id=impression-container-readonly__RAND__]').html('<span id="impression-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_im_view_parent]').hide(); }else{ $j('.btn[id=class_im_view_parent]').show(); }

					if(typeof(impression_update_autofills__RAND__) == 'function') impression_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function illust_im_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#illust_im-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_illust_im__RAND__.value, t: 'characters', f: 'illust_im' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="illust_im"]').val(resp.results[0].id);
							$j('[id=illust_im-container-readonly__RAND__]').html('<span id="illust_im-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=character_illustration_view_parent]').hide(); }else{ $j('.btn[id=character_illustration_view_parent]').show(); }


							if(typeof(illust_im_update_autofills__RAND__) == 'function') illust_im_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ /* */ return { s: term, p: page, t: 'characters', f: 'illust_im' }; },
					results: function(resp, page){ /* */ return resp; }
				},
				escapeMarkup: function(str){ /* */ return str; }
			}).on('change', function(e){
				AppGini.current_illust_im__RAND__.value = e.added.id;
				AppGini.current_illust_im__RAND__.text = e.added.text;
				$j('[name="illust_im"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=character_illustration_view_parent]').hide(); }else{ $j('.btn[id=character_illustration_view_parent]').show(); }


				if(typeof(illust_im_update_autofills__RAND__) == 'function') illust_im_update_autofills__RAND__();
			});

			if(!$j("#illust_im-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_illust_im__RAND__.value, t: 'characters', f: 'illust_im' },
					success: function(resp){
						$j('[name="illust_im"]').val(resp.results[0].id);
						$j('[id=illust_im-container-readonly__RAND__]').html('<span id="illust_im-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=character_illustration_view_parent]').hide(); }else{ $j('.btn[id=character_illustration_view_parent]').show(); }

						if(typeof(illust_im_update_autofills__RAND__) == 'function') illust_im_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_illust_im__RAND__.value, t: 'characters', f: 'illust_im' },
				success: function(resp){
					$j('[id=illust_im-container__RAND__], [id=illust_im-container-readonly__RAND__]').html('<span id="illust_im-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=character_illustration_view_parent]').hide(); }else{ $j('.btn[id=character_illustration_view_parent]').show(); }

					if(typeof(illust_im_update_autofills__RAND__) == 'function') illust_im_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function mcs_problem_reload__RAND__(filterer_story){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#mcs_problem-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { filterer_story: filterer_story, id: AppGini.current_mcs_problem__RAND__.value, t: 'characters', f: 'mcs_problem' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="mcs_problem"]').val(resp.results[0].id);
							$j('[id=mcs_problem-container-readonly__RAND__]').html('<span id="mcs_problem-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=storypoints_static_view_parent]').hide(); }else{ $j('.btn[id=storypoints_static_view_parent]').show(); }


							if(typeof(mcs_problem_update_autofills__RAND__) == 'function') mcs_problem_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ /* */ return { filterer_story: filterer_story, s: term, p: page, t: 'characters', f: 'mcs_problem' }; },
					results: function(resp, page){ /* */ return resp; }
				},
				escapeMarkup: function(str){ /* */ return str; }
			}).on('change', function(e){
				AppGini.current_mcs_problem__RAND__.value = e.added.id;
				AppGini.current_mcs_problem__RAND__.text = e.added.text;
				$j('[name="mcs_problem"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=storypoints_static_view_parent]').hide(); }else{ $j('.btn[id=storypoints_static_view_parent]').show(); }


				if(typeof(mcs_problem_update_autofills__RAND__) == 'function') mcs_problem_update_autofills__RAND__();
			});

			if(!$j("#mcs_problem-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_mcs_problem__RAND__.value, t: 'characters', f: 'mcs_problem' },
					success: function(resp){
						$j('[name="mcs_problem"]').val(resp.results[0].id);
						$j('[id=mcs_problem-container-readonly__RAND__]').html('<span id="mcs_problem-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=storypoints_static_view_parent]').hide(); }else{ $j('.btn[id=storypoints_static_view_parent]').show(); }

						if(typeof(mcs_problem_update_autofills__RAND__) == 'function') mcs_problem_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_mcs_problem__RAND__.value, t: 'characters', f: 'mcs_problem' },
				success: function(resp){
					$j('[id=mcs_problem-container__RAND__], [id=mcs_problem-container-readonly__RAND__]').html('<span id="mcs_problem-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=storypoints_static_view_parent]').hide(); }else{ $j('.btn[id=storypoints_static_view_parent]').show(); }

					if(typeof(mcs_problem_update_autofills__RAND__) == 'function') mcs_problem_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function illust_mcs_problem_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#illust_mcs_problem-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_illust_mcs_problem__RAND__.value, t: 'characters', f: 'illust_mcs_problem' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="illust_mcs_problem"]').val(resp.results[0].id);
							$j('[id=illust_mcs_problem-container-readonly__RAND__]').html('<span id="illust_mcs_problem-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=character_illustration_view_parent]').hide(); }else{ $j('.btn[id=character_illustration_view_parent]').show(); }


							if(typeof(illust_mcs_problem_update_autofills__RAND__) == 'function') illust_mcs_problem_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ /* */ return { s: term, p: page, t: 'characters', f: 'illust_mcs_problem' }; },
					results: function(resp, page){ /* */ return resp; }
				},
				escapeMarkup: function(str){ /* */ return str; }
			}).on('change', function(e){
				AppGini.current_illust_mcs_problem__RAND__.value = e.added.id;
				AppGini.current_illust_mcs_problem__RAND__.text = e.added.text;
				$j('[name="illust_mcs_problem"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=character_illustration_view_parent]').hide(); }else{ $j('.btn[id=character_illustration_view_parent]').show(); }


				if(typeof(illust_mcs_problem_update_autofills__RAND__) == 'function') illust_mcs_problem_update_autofills__RAND__();
			});

			if(!$j("#illust_mcs_problem-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_illust_mcs_problem__RAND__.value, t: 'characters', f: 'illust_mcs_problem' },
					success: function(resp){
						$j('[name="illust_mcs_problem"]').val(resp.results[0].id);
						$j('[id=illust_mcs_problem-container-readonly__RAND__]').html('<span id="illust_mcs_problem-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=character_illustration_view_parent]').hide(); }else{ $j('.btn[id=character_illustration_view_parent]').show(); }

						if(typeof(illust_mcs_problem_update_autofills__RAND__) == 'function') illust_mcs_problem_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_illust_mcs_problem__RAND__.value, t: 'characters', f: 'illust_mcs_problem' },
				success: function(resp){
					$j('[id=illust_mcs_problem-container__RAND__], [id=illust_mcs_problem-container-readonly__RAND__]').html('<span id="illust_mcs_problem-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=character_illustration_view_parent]').hide(); }else{ $j('.btn[id=character_illustration_view_parent]').show(); }

					if(typeof(illust_mcs_problem_update_autofills__RAND__) == 'function') illust_mcs_problem_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function illust_mcs_solution_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#illust_mcs_solution-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_illust_mcs_solution__RAND__.value, t: 'characters', f: 'illust_mcs_solution' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="illust_mcs_solution"]').val(resp.results[0].id);
							$j('[id=illust_mcs_solution-container-readonly__RAND__]').html('<span id="illust_mcs_solution-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=character_illustration_view_parent]').hide(); }else{ $j('.btn[id=character_illustration_view_parent]').show(); }


							if(typeof(illust_mcs_solution_update_autofills__RAND__) == 'function') illust_mcs_solution_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ /* */ return { s: term, p: page, t: 'characters', f: 'illust_mcs_solution' }; },
					results: function(resp, page){ /* */ return resp; }
				},
				escapeMarkup: function(str){ /* */ return str; }
			}).on('change', function(e){
				AppGini.current_illust_mcs_solution__RAND__.value = e.added.id;
				AppGini.current_illust_mcs_solution__RAND__.text = e.added.text;
				$j('[name="illust_mcs_solution"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=character_illustration_view_parent]').hide(); }else{ $j('.btn[id=character_illustration_view_parent]').show(); }


				if(typeof(illust_mcs_solution_update_autofills__RAND__) == 'function') illust_mcs_solution_update_autofills__RAND__();
			});

			if(!$j("#illust_mcs_solution-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_illust_mcs_solution__RAND__.value, t: 'characters', f: 'illust_mcs_solution' },
					success: function(resp){
						$j('[name="illust_mcs_solution"]').val(resp.results[0].id);
						$j('[id=illust_mcs_solution-container-readonly__RAND__]').html('<span id="illust_mcs_solution-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=character_illustration_view_parent]').hide(); }else{ $j('.btn[id=character_illustration_view_parent]').show(); }

						if(typeof(illust_mcs_solution_update_autofills__RAND__) == 'function') illust_mcs_solution_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_illust_mcs_solution__RAND__.value, t: 'characters', f: 'illust_mcs_solution' },
				success: function(resp){
					$j('[id=illust_mcs_solution-container__RAND__], [id=illust_mcs_solution-container-readonly__RAND__]').html('<span id="illust_mcs_solution-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=character_illustration_view_parent]').hide(); }else{ $j('.btn[id=character_illustration_view_parent]').show(); }

					if(typeof(illust_mcs_solution_update_autofills__RAND__) == 'function') illust_mcs_solution_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function illust_mcs_symptom_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#illust_mcs_symptom-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_illust_mcs_symptom__RAND__.value, t: 'characters', f: 'illust_mcs_symptom' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="illust_mcs_symptom"]').val(resp.results[0].id);
							$j('[id=illust_mcs_symptom-container-readonly__RAND__]').html('<span id="illust_mcs_symptom-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=character_illustration_view_parent]').hide(); }else{ $j('.btn[id=character_illustration_view_parent]').show(); }


							if(typeof(illust_mcs_symptom_update_autofills__RAND__) == 'function') illust_mcs_symptom_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ /* */ return { s: term, p: page, t: 'characters', f: 'illust_mcs_symptom' }; },
					results: function(resp, page){ /* */ return resp; }
				},
				escapeMarkup: function(str){ /* */ return str; }
			}).on('change', function(e){
				AppGini.current_illust_mcs_symptom__RAND__.value = e.added.id;
				AppGini.current_illust_mcs_symptom__RAND__.text = e.added.text;
				$j('[name="illust_mcs_symptom"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=character_illustration_view_parent]').hide(); }else{ $j('.btn[id=character_illustration_view_parent]').show(); }


				if(typeof(illust_mcs_symptom_update_autofills__RAND__) == 'function') illust_mcs_symptom_update_autofills__RAND__();
			});

			if(!$j("#illust_mcs_symptom-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_illust_mcs_symptom__RAND__.value, t: 'characters', f: 'illust_mcs_symptom' },
					success: function(resp){
						$j('[name="illust_mcs_symptom"]').val(resp.results[0].id);
						$j('[id=illust_mcs_symptom-container-readonly__RAND__]').html('<span id="illust_mcs_symptom-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=character_illustration_view_parent]').hide(); }else{ $j('.btn[id=character_illustration_view_parent]').show(); }

						if(typeof(illust_mcs_symptom_update_autofills__RAND__) == 'function') illust_mcs_symptom_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_illust_mcs_symptom__RAND__.value, t: 'characters', f: 'illust_mcs_symptom' },
				success: function(resp){
					$j('[id=illust_mcs_symptom-container__RAND__], [id=illust_mcs_symptom-container-readonly__RAND__]').html('<span id="illust_mcs_symptom-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=character_illustration_view_parent]').hide(); }else{ $j('.btn[id=character_illustration_view_parent]').show(); }

					if(typeof(illust_mcs_symptom_update_autofills__RAND__) == 'function') illust_mcs_symptom_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function illust_mcs_response_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#illust_mcs_response-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_illust_mcs_response__RAND__.value, t: 'characters', f: 'illust_mcs_response' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="illust_mcs_response"]').val(resp.results[0].id);
							$j('[id=illust_mcs_response-container-readonly__RAND__]').html('<span id="illust_mcs_response-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=character_illustration_view_parent]').hide(); }else{ $j('.btn[id=character_illustration_view_parent]').show(); }


							if(typeof(illust_mcs_response_update_autofills__RAND__) == 'function') illust_mcs_response_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ /* */ return { s: term, p: page, t: 'characters', f: 'illust_mcs_response' }; },
					results: function(resp, page){ /* */ return resp; }
				},
				escapeMarkup: function(str){ /* */ return str; }
			}).on('change', function(e){
				AppGini.current_illust_mcs_response__RAND__.value = e.added.id;
				AppGini.current_illust_mcs_response__RAND__.text = e.added.text;
				$j('[name="illust_mcs_response"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=character_illustration_view_parent]').hide(); }else{ $j('.btn[id=character_illustration_view_parent]').show(); }


				if(typeof(illust_mcs_response_update_autofills__RAND__) == 'function') illust_mcs_response_update_autofills__RAND__();
			});

			if(!$j("#illust_mcs_response-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_illust_mcs_response__RAND__.value, t: 'characters', f: 'illust_mcs_response' },
					success: function(resp){
						$j('[name="illust_mcs_response"]').val(resp.results[0].id);
						$j('[id=illust_mcs_response-container-readonly__RAND__]').html('<span id="illust_mcs_response-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=character_illustration_view_parent]').hide(); }else{ $j('.btn[id=character_illustration_view_parent]').show(); }

						if(typeof(illust_mcs_response_update_autofills__RAND__) == 'function') illust_mcs_response_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_illust_mcs_response__RAND__.value, t: 'characters', f: 'illust_mcs_response' },
				success: function(resp){
					$j('[id=illust_mcs_response-container__RAND__], [id=illust_mcs_response-container-readonly__RAND__]').html('<span id="illust_mcs_response-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=character_illustration_view_parent]').hide(); }else{ $j('.btn[id=character_illustration_view_parent]').show(); }

					if(typeof(illust_mcs_response_update_autofills__RAND__) == 'function') illust_mcs_response_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
	</script>
	<?php

	$lookups = str_replace('__RAND__', $rnd1, ob_get_contents());
	ob_end_clean();


	// code for template based detail view forms

	// open the detail view template
	if($dvprint){
		$template_file = is_file("./{$TemplateDVP}") ? "./{$TemplateDVP}" : './templates/characters_templateDVP.html';
		$templateCode = @file_get_contents($template_file);
	}else{
		$template_file = is_file("./{$TemplateDV}") ? "./{$TemplateDV}" : './templates/characters_templateDV.html';
		$templateCode = @file_get_contents($template_file);
	}

	// process form title
	$templateCode = str_replace('<%%DETAIL_VIEW_TITLE%%>', 'Detail View', $templateCode);
	$templateCode = str_replace('<%%RND1%%>', $rnd1, $templateCode);
	$templateCode = str_replace('<%%EMBEDDED%%>', ($_REQUEST['Embedded'] ? 'Embedded=1' : ''), $templateCode);
	// process buttons
	if($AllowInsert){
		if(!$selected_id) $templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-success" id="insert" name="insert_x" value="1" onclick="return characters_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save New'] . '</button>', $templateCode);
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="insert" name="insert_x" value="1" onclick="return characters_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save As Copy'] . '</button>', $templateCode);
	}else{
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '', $templateCode);
	}

	// 'Back' button action
	if($_REQUEST['Embedded']){
		$backAction = 'AppGini.closeParentModal(); return false;';
	}else{
		$backAction = '$j(\'form\').eq(0).attr(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;';
	}

	if($selected_id){
		if(!$_REQUEST['Embedded']) $templateCode = str_replace('<%%DVPRINT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="dvprint" name="dvprint_x" value="1" onclick="$j(\'form\').eq(0).prop(\'novalidate\', true); document.myform.reset(); return true;" title="' . html_attr($Translation['Print Preview']) . '"><i class="glyphicon glyphicon-print"></i> ' . $Translation['Print Preview'] . '</button>', $templateCode);
		if($AllowUpdate){
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '<button type="submit" class="btn btn-success btn-lg" id="update" name="update_x" value="1" onclick="return characters_validateData();" title="' . html_attr($Translation['Save Changes']) . '"><i class="glyphicon glyphicon-ok"></i> ' . $Translation['Save Changes'] . '</button>', $templateCode);
		}else{
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		}
		if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3){ // allow delete?
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '<button type="submit" class="btn btn-danger" id="delete" name="delete_x" value="1" onclick="return confirm(\'' . $Translation['are you sure?'] . '\');" title="' . html_attr($Translation['Delete']) . '"><i class="glyphicon glyphicon-trash"></i> ' . $Translation['Delete'] . '</button>', $templateCode);
		}else{
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		}
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>', $templateCode);
	}else{
		$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', ($ShowCancel ? '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>' : ''), $templateCode);
	}

	// set records to read only if user can't insert new records and can't edit current record
	if(($selected_id && !$AllowUpdate && !$AllowInsert) || (!$selected_id && !$AllowInsert)){
		$jsReadOnly .= "\tjQuery('#agent_id').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#agent_id_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#cw_name').replaceWith('<div class=\"form-control-static\" id=\"cw_name\">' + (jQuery('#cw_name').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#img').replaceWith('<div class=\"form-control-static\" id=\"img\">' + (jQuery('#img').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#mc_resolve').replaceWith('<div class=\"form-control-static\" id=\"mc_resolve\">' + (jQuery('#mc_resolve').val() || '') + '</div>'); jQuery('#mc_resolve-multi-selection-help').hide();\n";
		$jsReadOnly .= "\tjQuery('#illust_resolve').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#illust_resolve_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#mc_growth').replaceWith('<div class=\"form-control-static\" id=\"mc_growth\">' + (jQuery('#mc_growth').val() || '') + '</div>'); jQuery('#mc_growth-multi-selection-help').hide();\n";
		$jsReadOnly .= "\tjQuery('#illust_growth').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#illust_growth_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#mc_approach').replaceWith('<div class=\"form-control-static\" id=\"mc_approach\">' + (jQuery('#mc_approach').val() || '') + '</div>'); jQuery('#mc_approach-multi-selection-help').hide();\n";
		$jsReadOnly .= "\tjQuery('#illust_approach').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#illust_approach_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#mc_ps_style').replaceWith('<div class=\"form-control-static\" id=\"mc_ps_style\">' + (jQuery('#mc_ps_style').val() || '') + '</div>'); jQuery('#mc_ps_style-multi-selection-help').hide();\n";
		$jsReadOnly .= "\tjQuery('#illust_ps_style').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#illust_ps_style_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#cw_age').replaceWith('<div class=\"form-control-static\" id=\"cw_age\">' + (jQuery('#cw_age').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#cw_gender').replaceWith('<div class=\"form-control-static\" id=\"cw_gender\">' + (jQuery('#cw_gender').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#cw_communication_style').replaceWith('<div class=\"form-control-static\" id=\"cw_communication_style\">' + (jQuery('#cw_communication_style').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#cw_background').replaceWith('<div class=\"form-control-static\" id=\"cw_background\">' + (jQuery('#cw_background').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#cw_appearance').replaceWith('<div class=\"form-control-static\" id=\"cw_appearance\">' + (jQuery('#cw_appearance').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#cw_relationships').replaceWith('<div class=\"form-control-static\" id=\"cw_relationships\">' + (jQuery('#cw_relationships').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#cw_ambition').replaceWith('<div class=\"form-control-static\" id=\"cw_ambition\">' + (jQuery('#cw_ambition').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#cw_defects').replaceWith('<div class=\"form-control-static\" id=\"cw_defects\">' + (jQuery('#cw_defects').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#cw_thoughts').replaceWith('<div class=\"form-control-static\" id=\"cw_thoughts\">' + (jQuery('#cw_thoughts').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#cw_relatedness').replaceWith('<div class=\"form-control-static\" id=\"cw_relatedness\">' + (jQuery('#cw_relatedness').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#cw_restrictions').replaceWith('<div class=\"form-control-static\" id=\"cw_restrictions\">' + (jQuery('#cw_restrictions').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#locations').replaceWith('<div class=\"form-control-static\" id=\"locations\">' + (jQuery('#locations').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#persons').replaceWith('<div class=\"form-control-static\" id=\"persons\">' + (jQuery('#persons').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#events').replaceWith('<div class=\"form-control-static\" id=\"events\">' + (jQuery('#events').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#noetictension').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#noetictension_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#illust_nt').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#illust_nt_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#impression').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#impression_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#illust_im').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#illust_im_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#mcs_problem').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#mcs_problem_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#illust_mcs_problem').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#illust_mcs_problem_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#illust_mcs_solution').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#illust_mcs_solution_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#illust_mcs_symptom').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#illust_mcs_symptom_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#illust_mcs_response').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#illust_mcs_response_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('.select2-container').hide();\n";

		$noUploads = true;
	}elseif($AllowInsert){
		$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', true);"; // temporarily disable form change handler
			$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', false);"; // re-enable form change handler
	}

	// process combos
	$templateCode = str_replace('<%%COMBO(agent_id)%%>', $combo_agent_id->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(agent_id)%%>', $combo_agent_id->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(agent_id)%%>', urlencode($combo_agent_id->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(mc_resolve)%%>', $combo_mc_resolve->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(mc_resolve)%%>', $combo_mc_resolve->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(illust_resolve)%%>', $combo_illust_resolve->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(illust_resolve)%%>', $combo_illust_resolve->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(illust_resolve)%%>', urlencode($combo_illust_resolve->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(mc_growth)%%>', $combo_mc_growth->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(mc_growth)%%>', $combo_mc_growth->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(illust_growth)%%>', $combo_illust_growth->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(illust_growth)%%>', $combo_illust_growth->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(illust_growth)%%>', urlencode($combo_illust_growth->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(mc_approach)%%>', $combo_mc_approach->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(mc_approach)%%>', $combo_mc_approach->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(illust_approach)%%>', $combo_illust_approach->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(illust_approach)%%>', $combo_illust_approach->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(illust_approach)%%>', urlencode($combo_illust_approach->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(mc_ps_style)%%>', $combo_mc_ps_style->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(mc_ps_style)%%>', $combo_mc_ps_style->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(illust_ps_style)%%>', $combo_illust_ps_style->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(illust_ps_style)%%>', $combo_illust_ps_style->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(illust_ps_style)%%>', urlencode($combo_illust_ps_style->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(noetictension)%%>', $combo_noetictension->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(noetictension)%%>', $combo_noetictension->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(noetictension)%%>', urlencode($combo_noetictension->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(illust_nt)%%>', $combo_illust_nt->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(illust_nt)%%>', $combo_illust_nt->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(illust_nt)%%>', urlencode($combo_illust_nt->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(impression)%%>', $combo_impression->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(impression)%%>', $combo_impression->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(impression)%%>', urlencode($combo_impression->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(illust_im)%%>', $combo_illust_im->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(illust_im)%%>', $combo_illust_im->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(illust_im)%%>', urlencode($combo_illust_im->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(mcs_problem)%%>', $combo_mcs_problem->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(mcs_problem)%%>', $combo_mcs_problem->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(mcs_problem)%%>', urlencode($combo_mcs_problem->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(illust_mcs_problem)%%>', $combo_illust_mcs_problem->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(illust_mcs_problem)%%>', $combo_illust_mcs_problem->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(illust_mcs_problem)%%>', urlencode($combo_illust_mcs_problem->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(illust_mcs_solution)%%>', $combo_illust_mcs_solution->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(illust_mcs_solution)%%>', $combo_illust_mcs_solution->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(illust_mcs_solution)%%>', urlencode($combo_illust_mcs_solution->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(illust_mcs_symptom)%%>', $combo_illust_mcs_symptom->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(illust_mcs_symptom)%%>', $combo_illust_mcs_symptom->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(illust_mcs_symptom)%%>', urlencode($combo_illust_mcs_symptom->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(illust_mcs_response)%%>', $combo_illust_mcs_response->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(illust_mcs_response)%%>', $combo_illust_mcs_response->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(illust_mcs_response)%%>', urlencode($combo_illust_mcs_response->MatchText), $templateCode);

	/* lookup fields array: 'lookup field name' => array('parent table name', 'lookup field caption') */
	$lookup_fields = array(  'agent_id' => array('biblio_author', 'MemberID'), 'illust_resolve' => array('character_illustration', 'Illustration of MC Resolve'), 'illust_growth' => array('character_illustration', 'Illustration of MC Growth'), 'illust_approach' => array('character_illustration', 'Illustration of MC Approach'), 'illust_ps_style' => array('character_illustration', 'Illustration of MC PS Style'), 'noetictension' => array('class_nt', 'Noetic tension'), 'illust_nt' => array('character_illustration', 'Illustration of Noetic Tension'), 'impression' => array('class_im', 'Overall Impression Management'), 'illust_im' => array('character_illustration', 'Illustration of Impression Mnmt.'), 'mcs_problem' => array('storypoints_static', 'Problem'), 'illust_mcs_problem' => array('character_illustration', 'Illustration of MCS Problem'), 'illust_mcs_solution' => array('character_illustration', 'Illustration of MCS Solution'), 'illust_mcs_symptom' => array('character_illustration', 'Illustration of MCS Symptome'), 'illust_mcs_response' => array('character_illustration', 'Illustration of MCS Response'));
	foreach($lookup_fields as $luf => $ptfc){
		$pt_perm = getTablePermissions($ptfc[0]);

		// process foreign key links
		if($pt_perm['view'] || $pt_perm['edit']){
			$templateCode = str_replace("<%%PLINK({$luf})%%>", '<button type="button" class="btn btn-default view_parent hspacer-md" id="' . $ptfc[0] . '_view_parent" title="' . html_attr($Translation['View'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-eye-open"></i></button>', $templateCode);
		}

		// if user has insert permission to parent table of a lookup field, put an add new button
		if($pt_perm['insert'] && !$_REQUEST['Embedded']){
			$templateCode = str_replace("<%%ADDNEW({$ptfc[0]})%%>", '<button type="button" class="btn btn-success add_new_parent hspacer-md" id="' . $ptfc[0] . '_add_new" title="' . html_attr($Translation['Add New'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-plus-sign"></i></button>', $templateCode);
		}
	}

	// process images
	$templateCode = str_replace('<%%UPLOADFILE(id)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(agent_id)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(cw_name)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(img)%%>', ($noUploads ? '' : '<input type=hidden name=MAX_FILE_SIZE value=512000>'.$Translation['upload image'].' <input type="file" name="img" id="img">'), $templateCode);
	if($AllowUpdate && $row['img'] != ''){
		$templateCode = str_replace('<%%REMOVEFILE(img)%%>', '<br><input type="checkbox" name="img_remove" id="img_remove" value="1"> <label for="img_remove" style="color: red; font-weight: bold;">'.$Translation['remove image'].'</label>', $templateCode);
	}else{
		$templateCode = str_replace('<%%REMOVEFILE(img)%%>', '', $templateCode);
	}
	$templateCode = str_replace('<%%UPLOADFILE(mc_resolve)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(illust_resolve)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(mc_growth)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(illust_growth)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(mc_approach)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(illust_approach)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(mc_ps_style)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(illust_ps_style)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(cw_age)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(cw_gender)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(cw_communication_style)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(cw_background)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(cw_appearance)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(cw_relationships)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(cw_ambition)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(cw_defects)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(cw_thoughts)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(cw_relatedness)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(cw_restrictions)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(locations)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(persons)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(events)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(noetictension)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(illust_nt)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(impression)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(illust_im)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(mcs_problem)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(illust_mcs_problem)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(illust_mcs_solution)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(illust_mcs_symptom)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(illust_mcs_response)%%>', '', $templateCode);

	// process values
	if($selected_id){
		if( $dvprint) $templateCode = str_replace('<%%VALUE(id)%%>', safe_html($urow['id']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(id)%%>', html_attr($row['id']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(id)%%>', urlencode($urow['id']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(agent_id)%%>', safe_html($urow['agent_id']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(agent_id)%%>', html_attr($row['agent_id']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(agent_id)%%>', urlencode($urow['agent_id']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(cw_name)%%>', safe_html($urow['cw_name']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(cw_name)%%>', html_attr($row['cw_name']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(cw_name)%%>', urlencode($urow['cw_name']), $templateCode);
		$row['img'] = ($row['img'] != '' ? $row['img'] : 'blank.gif');
		if( $dvprint) $templateCode = str_replace('<%%VALUE(img)%%>', safe_html($urow['img']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(img)%%>', html_attr($row['img']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(img)%%>', urlencode($urow['img']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(mc_resolve)%%>', safe_html($urow['mc_resolve']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(mc_resolve)%%>', html_attr($row['mc_resolve']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(mc_resolve)%%>', urlencode($urow['mc_resolve']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(illust_resolve)%%>', safe_html($urow['illust_resolve']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(illust_resolve)%%>', html_attr($row['illust_resolve']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(illust_resolve)%%>', urlencode($urow['illust_resolve']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(mc_growth)%%>', safe_html($urow['mc_growth']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(mc_growth)%%>', html_attr($row['mc_growth']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(mc_growth)%%>', urlencode($urow['mc_growth']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(illust_growth)%%>', safe_html($urow['illust_growth']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(illust_growth)%%>', html_attr($row['illust_growth']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(illust_growth)%%>', urlencode($urow['illust_growth']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(mc_approach)%%>', safe_html($urow['mc_approach']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(mc_approach)%%>', html_attr($row['mc_approach']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(mc_approach)%%>', urlencode($urow['mc_approach']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(illust_approach)%%>', safe_html($urow['illust_approach']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(illust_approach)%%>', html_attr($row['illust_approach']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(illust_approach)%%>', urlencode($urow['illust_approach']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(mc_ps_style)%%>', safe_html($urow['mc_ps_style']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(mc_ps_style)%%>', html_attr($row['mc_ps_style']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(mc_ps_style)%%>', urlencode($urow['mc_ps_style']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(illust_ps_style)%%>', safe_html($urow['illust_ps_style']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(illust_ps_style)%%>', html_attr($row['illust_ps_style']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(illust_ps_style)%%>', urlencode($urow['illust_ps_style']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(cw_age)%%>', safe_html($urow['cw_age']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(cw_age)%%>', html_attr($row['cw_age']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(cw_age)%%>', urlencode($urow['cw_age']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(cw_gender)%%>', safe_html($urow['cw_gender']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(cw_gender)%%>', html_attr($row['cw_gender']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(cw_gender)%%>', urlencode($urow['cw_gender']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(cw_communication_style)%%>', safe_html($urow['cw_communication_style']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(cw_communication_style)%%>', html_attr($row['cw_communication_style']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(cw_communication_style)%%>', urlencode($urow['cw_communication_style']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(cw_background)%%>', safe_html($urow['cw_background']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(cw_background)%%>', html_attr($row['cw_background']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(cw_background)%%>', urlencode($urow['cw_background']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(cw_appearance)%%>', safe_html($urow['cw_appearance']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(cw_appearance)%%>', html_attr($row['cw_appearance']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(cw_appearance)%%>', urlencode($urow['cw_appearance']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(cw_relationships)%%>', safe_html($urow['cw_relationships']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(cw_relationships)%%>', html_attr($row['cw_relationships']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(cw_relationships)%%>', urlencode($urow['cw_relationships']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(cw_ambition)%%>', safe_html($urow['cw_ambition']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(cw_ambition)%%>', html_attr($row['cw_ambition']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(cw_ambition)%%>', urlencode($urow['cw_ambition']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(cw_defects)%%>', safe_html($urow['cw_defects']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(cw_defects)%%>', html_attr($row['cw_defects']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(cw_defects)%%>', urlencode($urow['cw_defects']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(cw_thoughts)%%>', safe_html($urow['cw_thoughts']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(cw_thoughts)%%>', html_attr($row['cw_thoughts']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(cw_thoughts)%%>', urlencode($urow['cw_thoughts']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(cw_relatedness)%%>', safe_html($urow['cw_relatedness']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(cw_relatedness)%%>', html_attr($row['cw_relatedness']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(cw_relatedness)%%>', urlencode($urow['cw_relatedness']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(cw_restrictions)%%>', safe_html($urow['cw_restrictions']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(cw_restrictions)%%>', html_attr($row['cw_restrictions']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(cw_restrictions)%%>', urlencode($urow['cw_restrictions']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(locations)%%>', safe_html($urow['locations']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(locations)%%>', html_attr($row['locations']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(locations)%%>', urlencode($urow['locations']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(persons)%%>', safe_html($urow['persons']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(persons)%%>', html_attr($row['persons']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(persons)%%>', urlencode($urow['persons']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(events)%%>', safe_html($urow['events']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(events)%%>', html_attr($row['events']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(events)%%>', urlencode($urow['events']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(noetictension)%%>', safe_html($urow['noetictension']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(noetictension)%%>', html_attr($row['noetictension']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(noetictension)%%>', urlencode($urow['noetictension']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(illust_nt)%%>', safe_html($urow['illust_nt']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(illust_nt)%%>', html_attr($row['illust_nt']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(illust_nt)%%>', urlencode($urow['illust_nt']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(impression)%%>', safe_html($urow['impression']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(impression)%%>', html_attr($row['impression']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(impression)%%>', urlencode($urow['impression']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(illust_im)%%>', safe_html($urow['illust_im']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(illust_im)%%>', html_attr($row['illust_im']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(illust_im)%%>', urlencode($urow['illust_im']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(mcs_problem)%%>', safe_html($urow['mcs_problem']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(mcs_problem)%%>', html_attr($row['mcs_problem']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(mcs_problem)%%>', urlencode($urow['mcs_problem']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(illust_mcs_problem)%%>', safe_html($urow['illust_mcs_problem']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(illust_mcs_problem)%%>', html_attr($row['illust_mcs_problem']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(illust_mcs_problem)%%>', urlencode($urow['illust_mcs_problem']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(illust_mcs_solution)%%>', safe_html($urow['illust_mcs_solution']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(illust_mcs_solution)%%>', html_attr($row['illust_mcs_solution']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(illust_mcs_solution)%%>', urlencode($urow['illust_mcs_solution']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(illust_mcs_symptom)%%>', safe_html($urow['illust_mcs_symptom']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(illust_mcs_symptom)%%>', html_attr($row['illust_mcs_symptom']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(illust_mcs_symptom)%%>', urlencode($urow['illust_mcs_symptom']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(illust_mcs_response)%%>', safe_html($urow['illust_mcs_response']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(illust_mcs_response)%%>', html_attr($row['illust_mcs_response']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(illust_mcs_response)%%>', urlencode($urow['illust_mcs_response']), $templateCode);
	}else{
		$templateCode = str_replace('<%%VALUE(id)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(id)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(agent_id)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(agent_id)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(cw_name)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(cw_name)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(img)%%>', 'blank.gif', $templateCode);
		$templateCode = str_replace('<%%VALUE(mc_resolve)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(mc_resolve)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(illust_resolve)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(illust_resolve)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(mc_growth)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(mc_growth)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(illust_growth)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(illust_growth)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(mc_approach)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(mc_approach)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(illust_approach)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(illust_approach)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(mc_ps_style)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(mc_ps_style)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(illust_ps_style)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(illust_ps_style)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(cw_age)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(cw_age)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(cw_gender)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(cw_gender)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(cw_communication_style)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(cw_communication_style)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(cw_background)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(cw_background)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(cw_appearance)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(cw_appearance)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(cw_relationships)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(cw_relationships)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(cw_ambition)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(cw_ambition)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(cw_defects)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(cw_defects)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(cw_thoughts)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(cw_thoughts)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(cw_relatedness)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(cw_relatedness)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(cw_restrictions)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(cw_restrictions)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(locations)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(locations)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(persons)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(persons)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(events)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(events)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(noetictension)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(noetictension)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(illust_nt)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(illust_nt)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(impression)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(impression)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(illust_im)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(illust_im)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(mcs_problem)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(mcs_problem)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(illust_mcs_problem)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(illust_mcs_problem)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(illust_mcs_solution)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(illust_mcs_solution)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(illust_mcs_symptom)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(illust_mcs_symptom)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(illust_mcs_response)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(illust_mcs_response)%%>', urlencode(''), $templateCode);
	}

	// process translations
	foreach($Translation as $symbol=>$trans){
		$templateCode = str_replace("<%%TRANSLATION($symbol)%%>", $trans, $templateCode);
	}

	// clear scrap
	$templateCode = str_replace('<%%', '<!-- ', $templateCode);
	$templateCode = str_replace('%%>', ' -->', $templateCode);

	// hide links to inaccessible tables
	if($_REQUEST['dvprint_x'] == ''){
		$templateCode .= "\n\n<script>\$j(function(){\n";
		$arrTables = getTableList();
		foreach($arrTables as $name => $caption){
			$templateCode .= "\t\$j('#{$name}_link').removeClass('hidden');\n";
			$templateCode .= "\t\$j('#xs_{$name}_link').removeClass('hidden');\n";
		}

		$templateCode .= $jsReadOnly;
		$templateCode .= $jsEditable;

		if(!$selected_id){
		}

		$templateCode.="\n});</script>\n";
	}

	// ajaxed auto-fill fields
	$templateCode .= '<script>';
	$templateCode .= '$j(function() {';

	$templateCode .= "\tagent_id_update_autofills$rnd1 = function(){\n";
	$templateCode .= "\t\t\$j.ajax({\n";
	if($dvprint) {
		$templateCode .= "\t\t\turl: 'characters_autofill.php?rnd1=$rnd1&mfk=agent_id&id=' + encodeURIComponent('".addslashes($row['agent_id'])."'),\n";
		$templateCode .= "\t\t\tcontentType: 'application/x-www-form-urlencoded; charset=" . datalist_db_encoding . "',\n";
		$templateCode .= "\t\t\ttype: 'GET'\n";
	} else {
		$templateCode .= "\t\t\turl: 'characters_autofill.php?rnd1=$rnd1&mfk=agent_id&id=' + encodeURIComponent(AppGini.current_agent_id{$rnd1}.value),\n";
		$templateCode .= "\t\t\tcontentType: 'application/x-www-form-urlencoded; charset=" . datalist_db_encoding . "',\n";
		$templateCode .= "\t\t\ttype: 'GET',\n";
		$templateCode .= "\t\t\tbeforeSend: function() { \$j('#agent_id$rnd1').prop('disabled', true); \$j('#agent_idLoading').html('<img src=loading.gif align=top>'); },\n";
		$templateCode .= "\t\t\tcomplete: function() { " . (($arrPerm[1] || (($arrPerm[3] == 1 && $ownerMemberID == getLoggedMemberID()) || ($arrPerm[3] == 2 && $ownerGroupID == getLoggedGroupID()) || $arrPerm[3] == 3)) ? "\$j('#agent_id$rnd1').prop('disabled', false); " : "\$j('#agent_id$rnd1').prop('disabled', true); ")."\$j('#agent_idLoading').html(''); \$j(window).resize(); }\n";
	}
	$templateCode .= "\t\t});\n";
	$templateCode .= "\t};\n";
	if(!$dvprint) $templateCode .= "\tif(\$j('#agent_id_caption').length) \$j('#agent_id_caption').click(function(){ /* */ agent_id_update_autofills$rnd1(); });\n";

	$templateCode .= "\tmcs_problem_update_autofills$rnd1 = function(){\n";
	$templateCode .= "\t\t\$j.ajax({\n";
	if($dvprint) {
		$templateCode .= "\t\t\turl: 'characters_autofill.php?rnd1=$rnd1&mfk=mcs_problem&id=' + encodeURIComponent('".addslashes($row['mcs_problem'])."'),\n";
		$templateCode .= "\t\t\tcontentType: 'application/x-www-form-urlencoded; charset=" . datalist_db_encoding . "',\n";
		$templateCode .= "\t\t\ttype: 'GET'\n";
	} else {
		$templateCode .= "\t\t\turl: 'characters_autofill.php?rnd1=$rnd1&mfk=mcs_problem&id=' + encodeURIComponent(AppGini.current_mcs_problem{$rnd1}.value),\n";
		$templateCode .= "\t\t\tcontentType: 'application/x-www-form-urlencoded; charset=" . datalist_db_encoding . "',\n";
		$templateCode .= "\t\t\ttype: 'GET',\n";
		$templateCode .= "\t\t\tbeforeSend: function() { \$j('#mcs_problem$rnd1').prop('disabled', true); \$j('#mcs_problemLoading').html('<img src=loading.gif align=top>'); },\n";
		$templateCode .= "\t\t\tcomplete: function() { " . (($arrPerm[1] || (($arrPerm[3] == 1 && $ownerMemberID == getLoggedMemberID()) || ($arrPerm[3] == 2 && $ownerGroupID == getLoggedGroupID()) || $arrPerm[3] == 3)) ? "\$j('#mcs_problem$rnd1').prop('disabled', false); " : "\$j('#mcs_problem$rnd1').prop('disabled', true); ")."\$j('#mcs_problemLoading').html(''); \$j(window).resize(); }\n";
	}
	$templateCode .= "\t\t});\n";
	$templateCode .= "\t};\n";
	if(!$dvprint) $templateCode .= "\tif(\$j('#mcs_problem_caption').length) \$j('#mcs_problem_caption').click(function(){ /* */ mcs_problem_update_autofills$rnd1(); });\n";


	$templateCode.="});";
	$templateCode.="</script>";
	$templateCode .= $lookups;

	// handle enforced parent values for read-only lookup fields

	// don't include blank images in lightbox gallery
	$templateCode = preg_replace('/blank.gif" data-lightbox=".*?"/', 'blank.gif"', $templateCode);

	// don't display empty email links
	$templateCode=preg_replace('/<a .*?href="mailto:".*?<\/a>/', '', $templateCode);

	/* default field values */
	$rdata = $jdata = get_defaults('characters');
	if($selected_id){
		$jdata = get_joined_record('characters', $selected_id);
		if($jdata === false) $jdata = get_defaults('characters');
		$rdata = $row;
	}
	$templateCode .= loadView('characters-ajax-cache', array('rdata' => $rdata, 'jdata' => $jdata));

	// hook: characters_dv
	if(function_exists('characters_dv')){
		$args=array();
		characters_dv(($selected_id ? $selected_id : FALSE), getMemberInfo(), $templateCode, $args);
	}

	return $templateCode;
}
?>