<?php
// This script and data application were generated by AppGini 5.94
// Download AppGini for free from https://bigprof.com/appgini/download/

	$currDir = dirname(__FILE__);
	include_once("{$currDir}/lib.php");
	@include_once("{$currDir}/hooks/hist_chr_scenes.php");
	include_once("{$currDir}/hist_chr_scenes_dml.php");

	// mm: can the current member access this page?
	$perm = getTablePermissions('hist_chr_scenes');
	if(!$perm['access']) {
		echo error_message($Translation['tableAccessDenied'], false);
		echo '<script>setTimeout(function() { window.location = "index.php?signOut=1"; }, 2000);</script>';
		exit;
	}

	$x = new DataList;
	$x->TableName = 'hist_chr_scenes';

	// Fields that can be displayed in the table view
	$x->QueryFieldsTV = [
		"`hist_chr_scenes`.`id`" => "id",
		"IF(    CHAR_LENGTH(`game_agents1`.`id`) || CHAR_LENGTH(`game_agents1`.`memberID`) || CHAR_LENGTH(`game_agents1`.`memberID`), CONCAT_WS('',   `game_agents1`.`id`, '   ', `game_agents1`.`memberID`, `game_agents1`.`memberID`), '') /* Author */" => "author_id",
		"IF(    CHAR_LENGTH(`game_agents1`.`last_name`) || CHAR_LENGTH(`game_agents1`.`first_name`), CONCAT_WS('',   `game_agents1`.`last_name`, ', ', `game_agents1`.`first_name`), '') /* Author name */" => "author_name",
		"IF(    CHAR_LENGTH(`hist_story1`.`id`) || CHAR_LENGTH(`hist_story1`.`story_title`), CONCAT_WS('',   `hist_story1`.`id`, ' - ', `hist_story1`.`story_title`), '') /* Hist story */" => "hist_story",
		"IF(    CHAR_LENGTH(`class_dramatica_character1`.`character`) || CHAR_LENGTH(`class_dramatica_archetype1`.`archetype`), CONCAT_WS('',   `class_dramatica_character1`.`character`, ' - ', `class_dramatica_archetype1`.`archetype`, ' '), '') /* Character */" => "character",
		"IF(    CHAR_LENGTH(`game_agents3`.`id`) || CHAR_LENGTH(`game_agents3`.`memberID`), CONCAT_WS('',   `game_agents3`.`id`, '   ', `game_agents3`.`memberID`), '') /* Agent id */" => "agent_id",
		"IF(    CHAR_LENGTH(`game_agents3`.`last_name`) || CHAR_LENGTH(`game_agents3`.`first_name`), CONCAT_WS('',   `game_agents3`.`last_name`, ', ', `game_agents3`.`first_name`), '') /* Agent name */" => "agent_name",
		"IF(    CHAR_LENGTH(`bio_story1`.`id`) || CHAR_LENGTH(`bio_story1`.`story_title`), CONCAT_WS('',   `bio_story1`.`id`, ' -     ', `bio_story1`.`story_title`), '') /* Bibliography */" => "bio_story",
		"IF(    CHAR_LENGTH(`bio_storylines1`.`storyline_no`) || CHAR_LENGTH(`bio_storylines1`.`storyline_title`), CONCAT_WS('',   `bio_storylines1`.`storyline_no`, ' - ', `bio_storylines1`.`storyline_title`), '') /* Token */" => "bio_storyline_no",
		"IF(    CHAR_LENGTH(`bio_storylines1`.`id`) || CHAR_LENGTH(`bio_storylines1`.`storyline`), CONCAT_WS('',   `bio_storylines1`.`id`, '- ', `bio_storylines1`.`storyline`), '') /* Token_sequence */" => "bio_storyline_text",
		"IF(    CHAR_LENGTH(`class_character_element1`.`element`) || CHAR_LENGTH(`class_character_element1`.`value`), CONCAT_WS('',   `class_character_element1`.`element`, '- ', `class_character_element1`.`value`), '') /* Chr element */" => "chr_element",
		"`hist_chr_scenes`.`scene`" => "scene",
		"`hist_chr_scenes`.`illustration`" => "illustration",
		"`hist_chr_scenes`.`comment`" => "comment",
	];
	// mapping incoming sort by requests to actual query fields
	$x->SortFields = [
		1 => '`hist_chr_scenes`.`id`',
		2 => 2,
		3 => 3,
		4 => 4,
		5 => 5,
		6 => 6,
		7 => 7,
		8 => 8,
		9 => 9,
		10 => 10,
		11 => 11,
		12 => 12,
		13 => 13,
		14 => 14,
	];

	// Fields that can be displayed in the csv file
	$x->QueryFieldsCSV = [
		"`hist_chr_scenes`.`id`" => "id",
		"IF(    CHAR_LENGTH(`game_agents1`.`id`) || CHAR_LENGTH(`game_agents1`.`memberID`) || CHAR_LENGTH(`game_agents1`.`memberID`), CONCAT_WS('',   `game_agents1`.`id`, '   ', `game_agents1`.`memberID`, `game_agents1`.`memberID`), '') /* Author */" => "author_id",
		"IF(    CHAR_LENGTH(`game_agents1`.`last_name`) || CHAR_LENGTH(`game_agents1`.`first_name`), CONCAT_WS('',   `game_agents1`.`last_name`, ', ', `game_agents1`.`first_name`), '') /* Author name */" => "author_name",
		"IF(    CHAR_LENGTH(`hist_story1`.`id`) || CHAR_LENGTH(`hist_story1`.`story_title`), CONCAT_WS('',   `hist_story1`.`id`, ' - ', `hist_story1`.`story_title`), '') /* Hist story */" => "hist_story",
		"IF(    CHAR_LENGTH(`class_dramatica_character1`.`character`) || CHAR_LENGTH(`class_dramatica_archetype1`.`archetype`), CONCAT_WS('',   `class_dramatica_character1`.`character`, ' - ', `class_dramatica_archetype1`.`archetype`, ' '), '') /* Character */" => "character",
		"IF(    CHAR_LENGTH(`game_agents3`.`id`) || CHAR_LENGTH(`game_agents3`.`memberID`), CONCAT_WS('',   `game_agents3`.`id`, '   ', `game_agents3`.`memberID`), '') /* Agent id */" => "agent_id",
		"IF(    CHAR_LENGTH(`game_agents3`.`last_name`) || CHAR_LENGTH(`game_agents3`.`first_name`), CONCAT_WS('',   `game_agents3`.`last_name`, ', ', `game_agents3`.`first_name`), '') /* Agent name */" => "agent_name",
		"IF(    CHAR_LENGTH(`bio_story1`.`id`) || CHAR_LENGTH(`bio_story1`.`story_title`), CONCAT_WS('',   `bio_story1`.`id`, ' -     ', `bio_story1`.`story_title`), '') /* Bibliography */" => "bio_story",
		"IF(    CHAR_LENGTH(`bio_storylines1`.`storyline_no`) || CHAR_LENGTH(`bio_storylines1`.`storyline_title`), CONCAT_WS('',   `bio_storylines1`.`storyline_no`, ' - ', `bio_storylines1`.`storyline_title`), '') /* Token */" => "bio_storyline_no",
		"IF(    CHAR_LENGTH(`bio_storylines1`.`id`) || CHAR_LENGTH(`bio_storylines1`.`storyline`), CONCAT_WS('',   `bio_storylines1`.`id`, '- ', `bio_storylines1`.`storyline`), '') /* Token_sequence */" => "bio_storyline_text",
		"IF(    CHAR_LENGTH(`class_character_element1`.`element`) || CHAR_LENGTH(`class_character_element1`.`value`), CONCAT_WS('',   `class_character_element1`.`element`, '- ', `class_character_element1`.`value`), '') /* Chr element */" => "chr_element",
		"`hist_chr_scenes`.`scene`" => "scene",
		"`hist_chr_scenes`.`illustration`" => "illustration",
		"`hist_chr_scenes`.`comment`" => "comment",
	];
	// Fields that can be filtered
	$x->QueryFieldsFilters = [
		"`hist_chr_scenes`.`id`" => "ID",
		"IF(    CHAR_LENGTH(`game_agents1`.`id`) || CHAR_LENGTH(`game_agents1`.`memberID`) || CHAR_LENGTH(`game_agents1`.`memberID`), CONCAT_WS('',   `game_agents1`.`id`, '   ', `game_agents1`.`memberID`, `game_agents1`.`memberID`), '') /* Author */" => "Author",
		"IF(    CHAR_LENGTH(`game_agents1`.`last_name`) || CHAR_LENGTH(`game_agents1`.`first_name`), CONCAT_WS('',   `game_agents1`.`last_name`, ', ', `game_agents1`.`first_name`), '') /* Author name */" => "Author name",
		"IF(    CHAR_LENGTH(`hist_story1`.`id`) || CHAR_LENGTH(`hist_story1`.`story_title`), CONCAT_WS('',   `hist_story1`.`id`, ' - ', `hist_story1`.`story_title`), '') /* Hist story */" => "Hist story",
		"IF(    CHAR_LENGTH(`class_dramatica_character1`.`character`) || CHAR_LENGTH(`class_dramatica_archetype1`.`archetype`), CONCAT_WS('',   `class_dramatica_character1`.`character`, ' - ', `class_dramatica_archetype1`.`archetype`, ' '), '') /* Character */" => "Character",
		"IF(    CHAR_LENGTH(`game_agents3`.`id`) || CHAR_LENGTH(`game_agents3`.`memberID`), CONCAT_WS('',   `game_agents3`.`id`, '   ', `game_agents3`.`memberID`), '') /* Agent id */" => "Agent id",
		"IF(    CHAR_LENGTH(`game_agents3`.`last_name`) || CHAR_LENGTH(`game_agents3`.`first_name`), CONCAT_WS('',   `game_agents3`.`last_name`, ', ', `game_agents3`.`first_name`), '') /* Agent name */" => "Agent name",
		"IF(    CHAR_LENGTH(`bio_story1`.`id`) || CHAR_LENGTH(`bio_story1`.`story_title`), CONCAT_WS('',   `bio_story1`.`id`, ' -     ', `bio_story1`.`story_title`), '') /* Bibliography */" => "Bibliography",
		"IF(    CHAR_LENGTH(`bio_storylines1`.`storyline_no`) || CHAR_LENGTH(`bio_storylines1`.`storyline_title`), CONCAT_WS('',   `bio_storylines1`.`storyline_no`, ' - ', `bio_storylines1`.`storyline_title`), '') /* Token */" => "Token",
		"IF(    CHAR_LENGTH(`bio_storylines1`.`id`) || CHAR_LENGTH(`bio_storylines1`.`storyline`), CONCAT_WS('',   `bio_storylines1`.`id`, '- ', `bio_storylines1`.`storyline`), '') /* Token_sequence */" => "Token_sequence",
		"IF(    CHAR_LENGTH(`class_character_element1`.`element`) || CHAR_LENGTH(`class_character_element1`.`value`), CONCAT_WS('',   `class_character_element1`.`element`, '- ', `class_character_element1`.`value`), '') /* Chr element */" => "Chr element",
		"`hist_chr_scenes`.`scene`" => "Scene",
		"`hist_chr_scenes`.`illustration`" => "Illustration",
		"`hist_chr_scenes`.`comment`" => "Comment",
	];

	// Fields that can be quick searched
	$x->QueryFieldsQS = [
		"`hist_chr_scenes`.`id`" => "id",
		"IF(    CHAR_LENGTH(`game_agents1`.`id`) || CHAR_LENGTH(`game_agents1`.`memberID`) || CHAR_LENGTH(`game_agents1`.`memberID`), CONCAT_WS('',   `game_agents1`.`id`, '   ', `game_agents1`.`memberID`, `game_agents1`.`memberID`), '') /* Author */" => "author_id",
		"IF(    CHAR_LENGTH(`game_agents1`.`last_name`) || CHAR_LENGTH(`game_agents1`.`first_name`), CONCAT_WS('',   `game_agents1`.`last_name`, ', ', `game_agents1`.`first_name`), '') /* Author name */" => "author_name",
		"IF(    CHAR_LENGTH(`hist_story1`.`id`) || CHAR_LENGTH(`hist_story1`.`story_title`), CONCAT_WS('',   `hist_story1`.`id`, ' - ', `hist_story1`.`story_title`), '') /* Hist story */" => "hist_story",
		"IF(    CHAR_LENGTH(`class_dramatica_character1`.`character`) || CHAR_LENGTH(`class_dramatica_archetype1`.`archetype`), CONCAT_WS('',   `class_dramatica_character1`.`character`, ' - ', `class_dramatica_archetype1`.`archetype`, ' '), '') /* Character */" => "character",
		"IF(    CHAR_LENGTH(`game_agents3`.`id`) || CHAR_LENGTH(`game_agents3`.`memberID`), CONCAT_WS('',   `game_agents3`.`id`, '   ', `game_agents3`.`memberID`), '') /* Agent id */" => "agent_id",
		"IF(    CHAR_LENGTH(`game_agents3`.`last_name`) || CHAR_LENGTH(`game_agents3`.`first_name`), CONCAT_WS('',   `game_agents3`.`last_name`, ', ', `game_agents3`.`first_name`), '') /* Agent name */" => "agent_name",
		"IF(    CHAR_LENGTH(`bio_story1`.`id`) || CHAR_LENGTH(`bio_story1`.`story_title`), CONCAT_WS('',   `bio_story1`.`id`, ' -     ', `bio_story1`.`story_title`), '') /* Bibliography */" => "bio_story",
		"IF(    CHAR_LENGTH(`bio_storylines1`.`storyline_no`) || CHAR_LENGTH(`bio_storylines1`.`storyline_title`), CONCAT_WS('',   `bio_storylines1`.`storyline_no`, ' - ', `bio_storylines1`.`storyline_title`), '') /* Token */" => "bio_storyline_no",
		"IF(    CHAR_LENGTH(`bio_storylines1`.`id`) || CHAR_LENGTH(`bio_storylines1`.`storyline`), CONCAT_WS('',   `bio_storylines1`.`id`, '- ', `bio_storylines1`.`storyline`), '') /* Token_sequence */" => "bio_storyline_text",
		"IF(    CHAR_LENGTH(`class_character_element1`.`element`) || CHAR_LENGTH(`class_character_element1`.`value`), CONCAT_WS('',   `class_character_element1`.`element`, '- ', `class_character_element1`.`value`), '') /* Chr element */" => "chr_element",
		"`hist_chr_scenes`.`scene`" => "scene",
		"`hist_chr_scenes`.`illustration`" => "illustration",
		"`hist_chr_scenes`.`comment`" => "comment",
	];

	// Lookup fields that can be used as filterers
	$x->filterers = ['author_id' => 'Author', 'hist_story' => 'Hist story', 'character' => 'Character', 'agent_id' => 'Agent id', 'bio_story' => 'Bibliography', 'bio_storyline_no' => 'Token', 'chr_element' => 'Chr element', ];

	$x->QueryFrom = "`hist_chr_scenes` LEFT JOIN `hist_authors` as hist_authors1 ON `hist_authors1`.`id`=`hist_chr_scenes`.`author_id` LEFT JOIN `game_agents` as game_agents1 ON `game_agents1`.`id`=`hist_authors1`.`agent_id` LEFT JOIN `hist_story` as hist_story1 ON `hist_story1`.`id`=`hist_chr_scenes`.`hist_story` LEFT JOIN `hist_story_chrs` as hist_story_chrs1 ON `hist_story_chrs1`.`id`=`hist_chr_scenes`.`character` LEFT JOIN `class_dramatica_character` as class_dramatica_character1 ON `class_dramatica_character1`.`id`=`hist_story_chrs1`.`story_character` LEFT JOIN `class_dramatica_archetype` as class_dramatica_archetype1 ON `class_dramatica_archetype1`.`id`=`hist_story_chrs1`.`story_archetype` LEFT JOIN `game_agents` as game_agents3 ON `game_agents3`.`id`=`hist_chr_scenes`.`agent_id` LEFT JOIN `bio_story` as bio_story1 ON `bio_story1`.`id`=`hist_chr_scenes`.`bio_story` LEFT JOIN `bio_storylines` as bio_storylines1 ON `bio_storylines1`.`id`=`hist_chr_scenes`.`bio_storyline_no` LEFT JOIN `class_character_element` as class_character_element1 ON `class_character_element1`.`id`=`hist_chr_scenes`.`chr_element` ";
	$x->QueryWhere = '';
	$x->QueryOrder = '';

	$x->AllowSelection = 1;
	$x->HideTableView = ($perm['view'] == 0 ? 1 : 0);
	$x->AllowDelete = $perm['delete'];
	$x->AllowMassDelete = (getLoggedAdmin() !== false);
	$x->AllowInsert = $perm['insert'];
	$x->AllowUpdate = $perm['edit'];
	$x->SeparateDV = 1;
	$x->AllowDeleteOfParents = 0;
	$x->AllowFilters = 1;
	$x->AllowSavingFilters = 1;
	$x->AllowSorting = 1;
	$x->AllowNavigation = 1;
	$x->AllowPrinting = 1;
	$x->AllowPrintingDV = 1;
	$x->AllowCSV = 1;
	$x->RecordsPerPage = 10;
	$x->QuickSearch = 1;
	$x->QuickSearchText = $Translation['quick search'];
	$x->ScriptFileName = 'hist_chr_scenes_view.php';
	$x->RedirectAfterInsert = 'hist_chr_scenes_view.php?SelectedID=#ID#';
	$x->TableTitle = 'Historical character scenes';
	$x->TableIcon = 'resources/table_icons/camera.png';
	$x->PrimaryKey = '`hist_chr_scenes`.`id`';

	$x->ColWidth = [150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, ];
	$x->ColCaption = ['ID', 'Author', 'Author name', 'Hist story', 'Character', 'Agent id', 'Agent name', 'Bibliography', 'Token', 'Token_sequence', 'Chr element', 'Scene', 'Illustration', 'Comment', ];
	$x->ColFieldName = ['id', 'author_id', 'author_name', 'hist_story', 'character', 'agent_id', 'agent_name', 'bio_story', 'bio_storyline_no', 'bio_storyline_text', 'chr_element', 'scene', 'illustration', 'comment', ];
	$x->ColNumber  = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, ];

	// template paths below are based on the app main directory
	$x->Template = 'templates/hist_chr_scenes_templateTV.html';
	$x->SelectedTemplate = 'templates/hist_chr_scenes_templateTVS.html';
	$x->TemplateDV = 'templates/hist_chr_scenes_templateDV.html';
	$x->TemplateDVP = 'templates/hist_chr_scenes_templateDVP.html';

	$x->ShowTableHeader = 1;
	$x->TVClasses = "";
	$x->DVClasses = "";
	$x->HasCalculatedFields = false;
	$x->AllowConsoleLog = false;
	$x->AllowDVNavigation = true;

	// mm: build the query based on current member's permissions
	$DisplayRecords = $_REQUEST['DisplayRecords'];
	if(!in_array($DisplayRecords, ['user', 'group'])) { $DisplayRecords = 'all'; }
	if($perm['view'] == 1 || ($perm['view'] > 1 && $DisplayRecords == 'user' && !$_REQUEST['NoFilter_x'])) { // view owner only
		$x->QueryFrom .= ', `membership_userrecords`';
		$x->QueryWhere = "WHERE `hist_chr_scenes`.`id`=`membership_userrecords`.`pkValue` AND `membership_userrecords`.`tableName`='hist_chr_scenes' AND LCASE(`membership_userrecords`.`memberID`)='" . getLoggedMemberID() . "'";
	} elseif($perm['view'] == 2 || ($perm['view'] > 2 && $DisplayRecords == 'group' && !$_REQUEST['NoFilter_x'])) { // view group only
		$x->QueryFrom .= ', `membership_userrecords`';
		$x->QueryWhere = "WHERE `hist_chr_scenes`.`id`=`membership_userrecords`.`pkValue` AND `membership_userrecords`.`tableName`='hist_chr_scenes' AND `membership_userrecords`.`groupID`='" . getLoggedGroupID() . "'";
	} elseif($perm['view'] == 3) { // view all
		// no further action
	} elseif($perm['view'] == 0) { // view none
		$x->QueryFields = ['Not enough permissions' => 'NEP'];
		$x->QueryFrom = '`hist_chr_scenes`';
		$x->QueryWhere = '';
		$x->DefaultSortField = '';
	}
	// hook: hist_chr_scenes_init
	$render = true;
	if(function_exists('hist_chr_scenes_init')) {
		$args = [];
		$render = hist_chr_scenes_init($x, getMemberInfo(), $args);
	}

	if($render) $x->Render();

	// hook: hist_chr_scenes_header
	$headerCode = '';
	if(function_exists('hist_chr_scenes_header')) {
		$args = [];
		$headerCode = hist_chr_scenes_header($x->ContentType, getMemberInfo(), $args);
	}

	if(!$headerCode) {
		include_once("{$currDir}/header.php"); 
	} else {
		ob_start();
		include_once("{$currDir}/header.php");
		echo str_replace('<%%HEADER%%>', ob_get_clean(), $headerCode);
	}

	echo $x->HTML;

	// hook: hist_chr_scenes_footer
	$footerCode = '';
	if(function_exists('hist_chr_scenes_footer')) {
		$args = [];
		$footerCode = hist_chr_scenes_footer($x->ContentType, getMemberInfo(), $args);
	}

	if(!$footerCode) {
		include_once("{$currDir}/footer.php"); 
	} else {
		ob_start();
		include_once("{$currDir}/footer.php");
		echo str_replace('<%%FOOTER%%>', ob_get_clean(), $footerCode);
	}
