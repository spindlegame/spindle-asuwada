<?php

// Data functions (insert, update, delete, form) for table hist_story

// This script and data application were generated by AppGini 5.94
// Download AppGini for free from https://bigprof.com/appgini/download/

function hist_story_insert(&$error_message = '') {
	global $Translation;

	// mm: can member insert record?
	$arrPerm = getTablePermissions('hist_story');
	if(!$arrPerm['insert']) return false;

	$data = [
		'team' => Request::val('team', ''),
		'hist_lead_id' => Request::val('hist_lead_id', ''),
		'hist_lead_name' => Request::lookup('hist_lead_id'),
		'community_id' => Request::val('community_id', ''),
		'story_title' => Request::val('story_title', ''),
		'genre' => Request::val('genre', ''),
		'approach' => Request::val('approach', ''),
		'description' => br2nl(Request::val('description', '')),
		'tags' => Request::multipleChoice('tags', ''),
		'collaboration_status' => Request::val('collaboration_status', ''),
		'language' => Request::val('language', ''),
	];


	// hook: hist_story_before_insert
	if(function_exists('hist_story_before_insert')) {
		$args = [];
		if(!hist_story_before_insert($data, getMemberInfo(), $args)) {
			if(isset($args['error_message'])) $error_message = $args['error_message'];
			return false;
		}
	}

	$error = '';
	// set empty fields to NULL
	$data = array_map(function($v) { return ($v === '' ? NULL : $v); }, $data);
	insert('hist_story', backtick_keys_once($data), $error);
	if($error)
		die("{$error}<br><a href=\"#\" onclick=\"history.go(-1);\">{$Translation['< back']}</a>");

	$recID = db_insert_id(db_link());

	update_calc_fields('hist_story', $recID, calculated_fields()['hist_story']);

	// hook: hist_story_after_insert
	if(function_exists('hist_story_after_insert')) {
		$res = sql("SELECT * FROM `hist_story` WHERE `id`='" . makeSafe($recID, false) . "' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)) {
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = makeSafe($recID, false);
		$args=[];
		if(!hist_story_after_insert($data, getMemberInfo(), $args)) { return $recID; }
	}

	// mm: save ownership data
	set_record_owner('hist_story', $recID, getLoggedMemberID());

	// if this record is a copy of another record, copy children if applicable
	if(!empty($_REQUEST['SelectedID'])) hist_story_copy_children($recID, $_REQUEST['SelectedID']);

	return $recID;
}

function hist_story_copy_children($destination_id, $source_id) {
	global $Translation;
	$requests = []; // array of curl handlers for launching insert requests
	$eo = ['silentErrors' => true];
	$safe_sid = makeSafe($source_id);

	// launch requests, asynchronously
	curl_batch($requests);
}

function hist_story_delete($selected_id, $AllowDeleteOfParents = false, $skipChecks = false) {
	// insure referential integrity ...
	global $Translation;
	$selected_id = makeSafe($selected_id);

	// mm: can member delete record?
	if(!check_record_permission('hist_story', $selected_id, 'delete')) {
		return $Translation['You don\'t have enough permissions to delete this record'];
	}

	// hook: hist_story_before_delete
	if(function_exists('hist_story_before_delete')) {
		$args = [];
		if(!hist_story_before_delete($selected_id, $skipChecks, getMemberInfo(), $args))
			return $Translation['Couldn\'t delete this record'] . (
				!empty($args['error_message']) ?
					'<div class="text-bold">' . strip_tags($args['error_message']) . '</div>'
					: '' 
			);
	}

	// child table: hist_chr
	$res = sql("SELECT `id` FROM `hist_story` WHERE `id`='{$selected_id}'", $eo);
	$id = db_fetch_row($res);
	$rires = sql("SELECT COUNT(1) FROM `hist_chr` WHERE `hist_story`='" . makeSafe($id[0]) . "'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'hist_chr', $RetMsg);
		return $RetMsg;
	} elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation['confirm delete'];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'hist_chr', $RetMsg);
		$RetMsg = str_replace('<Delete>', '<input type="button" class="button" value="' . $Translation['yes'] . '" onClick="window.location = \'hist_story_view.php?SelectedID=' . urlencode($selected_id) . '&delete_x=1&confirmed=1\';">', $RetMsg);
		$RetMsg = str_replace('<Cancel>', '<input type="button" class="button" value="' . $Translation[ 'no'] . '" onClick="window.location = \'hist_story_view.php?SelectedID=' . urlencode($selected_id) . '\';">', $RetMsg);
		return $RetMsg;
	}

	// child table: hist_chr_dev
	$res = sql("SELECT `id` FROM `hist_story` WHERE `id`='{$selected_id}'", $eo);
	$id = db_fetch_row($res);
	$rires = sql("SELECT COUNT(1) FROM `hist_chr_dev` WHERE `hist_story`='" . makeSafe($id[0]) . "'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'hist_chr_dev', $RetMsg);
		return $RetMsg;
	} elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation['confirm delete'];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'hist_chr_dev', $RetMsg);
		$RetMsg = str_replace('<Delete>', '<input type="button" class="button" value="' . $Translation['yes'] . '" onClick="window.location = \'hist_story_view.php?SelectedID=' . urlencode($selected_id) . '&delete_x=1&confirmed=1\';">', $RetMsg);
		$RetMsg = str_replace('<Cancel>', '<input type="button" class="button" value="' . $Translation[ 'no'] . '" onClick="window.location = \'hist_story_view.php?SelectedID=' . urlencode($selected_id) . '\';">', $RetMsg);
		return $RetMsg;
	}

	// child table: hist_chr_scene
	$res = sql("SELECT `id` FROM `hist_story` WHERE `id`='{$selected_id}'", $eo);
	$id = db_fetch_row($res);
	$rires = sql("SELECT COUNT(1) FROM `hist_chr_scene` WHERE `hist_story`='" . makeSafe($id[0]) . "'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'hist_chr_scene', $RetMsg);
		return $RetMsg;
	} elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation['confirm delete'];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'hist_chr_scene', $RetMsg);
		$RetMsg = str_replace('<Delete>', '<input type="button" class="button" value="' . $Translation['yes'] . '" onClick="window.location = \'hist_story_view.php?SelectedID=' . urlencode($selected_id) . '&delete_x=1&confirmed=1\';">', $RetMsg);
		$RetMsg = str_replace('<Cancel>', '<input type="button" class="button" value="' . $Translation[ 'no'] . '" onClick="window.location = \'hist_story_view.php?SelectedID=' . urlencode($selected_id) . '\';">', $RetMsg);
		return $RetMsg;
	}

	// child table: hist_storyline
	$res = sql("SELECT `id` FROM `hist_story` WHERE `id`='{$selected_id}'", $eo);
	$id = db_fetch_row($res);
	$rires = sql("SELECT COUNT(1) FROM `hist_storyline` WHERE `story`='" . makeSafe($id[0]) . "'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'hist_storyline', $RetMsg);
		return $RetMsg;
	} elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation['confirm delete'];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'hist_storyline', $RetMsg);
		$RetMsg = str_replace('<Delete>', '<input type="button" class="button" value="' . $Translation['yes'] . '" onClick="window.location = \'hist_story_view.php?SelectedID=' . urlencode($selected_id) . '&delete_x=1&confirmed=1\';">', $RetMsg);
		$RetMsg = str_replace('<Cancel>', '<input type="button" class="button" value="' . $Translation[ 'no'] . '" onClick="window.location = \'hist_story_view.php?SelectedID=' . urlencode($selected_id) . '\';">', $RetMsg);
		return $RetMsg;
	}

	// child table: hist_storystatic
	$res = sql("SELECT `id` FROM `hist_story` WHERE `id`='{$selected_id}'", $eo);
	$id = db_fetch_row($res);
	$rires = sql("SELECT COUNT(1) FROM `hist_storystatic` WHERE `story`='" . makeSafe($id[0]) . "'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'hist_storystatic', $RetMsg);
		return $RetMsg;
	} elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation['confirm delete'];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'hist_storystatic', $RetMsg);
		$RetMsg = str_replace('<Delete>', '<input type="button" class="button" value="' . $Translation['yes'] . '" onClick="window.location = \'hist_story_view.php?SelectedID=' . urlencode($selected_id) . '&delete_x=1&confirmed=1\';">', $RetMsg);
		$RetMsg = str_replace('<Cancel>', '<input type="button" class="button" value="' . $Translation[ 'no'] . '" onClick="window.location = \'hist_story_view.php?SelectedID=' . urlencode($selected_id) . '\';">', $RetMsg);
		return $RetMsg;
	}

	// child table: hist_storydynamic
	$res = sql("SELECT `id` FROM `hist_story` WHERE `id`='{$selected_id}'", $eo);
	$id = db_fetch_row($res);
	$rires = sql("SELECT COUNT(1) FROM `hist_storydynamic` WHERE `hist_story`='" . makeSafe($id[0]) . "'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'hist_storydynamic', $RetMsg);
		return $RetMsg;
	} elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation['confirm delete'];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'hist_storydynamic', $RetMsg);
		$RetMsg = str_replace('<Delete>', '<input type="button" class="button" value="' . $Translation['yes'] . '" onClick="window.location = \'hist_story_view.php?SelectedID=' . urlencode($selected_id) . '&delete_x=1&confirmed=1\';">', $RetMsg);
		$RetMsg = str_replace('<Cancel>', '<input type="button" class="button" value="' . $Translation[ 'no'] . '" onClick="window.location = \'hist_story_view.php?SelectedID=' . urlencode($selected_id) . '\';">', $RetMsg);
		return $RetMsg;
	}

	// child table: hist_storyweaving_scene
	$res = sql("SELECT `id` FROM `hist_story` WHERE `id`='{$selected_id}'", $eo);
	$id = db_fetch_row($res);
	$rires = sql("SELECT COUNT(1) FROM `hist_storyweaving_scene` WHERE `story`='" . makeSafe($id[0]) . "'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'hist_storyweaving_scene', $RetMsg);
		return $RetMsg;
	} elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation['confirm delete'];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'hist_storyweaving_scene', $RetMsg);
		$RetMsg = str_replace('<Delete>', '<input type="button" class="button" value="' . $Translation['yes'] . '" onClick="window.location = \'hist_story_view.php?SelectedID=' . urlencode($selected_id) . '&delete_x=1&confirmed=1\';">', $RetMsg);
		$RetMsg = str_replace('<Cancel>', '<input type="button" class="button" value="' . $Translation[ 'no'] . '" onClick="window.location = \'hist_story_view.php?SelectedID=' . urlencode($selected_id) . '\';">', $RetMsg);
		return $RetMsg;
	}

	sql("DELETE FROM `hist_story` WHERE `id`='{$selected_id}'", $eo);

	// hook: hist_story_after_delete
	if(function_exists('hist_story_after_delete')) {
		$args = [];
		hist_story_after_delete($selected_id, getMemberInfo(), $args);
	}

	// mm: delete ownership data
	sql("DELETE FROM `membership_userrecords` WHERE `tableName`='hist_story' AND `pkValue`='{$selected_id}'", $eo);
}

function hist_story_update(&$selected_id, &$error_message = '') {
	global $Translation;

	// mm: can member edit record?
	if(!check_record_permission('hist_story', $selected_id, 'edit')) return false;

	$data = [
		'team' => Request::val('team', ''),
		'hist_lead_id' => Request::val('hist_lead_id', ''),
		'hist_lead_name' => Request::lookup('hist_lead_id'),
		'community_id' => Request::val('community_id', ''),
		'story_title' => Request::val('story_title', ''),
		'genre' => Request::val('genre', ''),
		'approach' => Request::val('approach', ''),
		'description' => br2nl(Request::val('description', '')),
		'tags' => Request::multipleChoice('tags', ''),
		'collaboration_status' => Request::val('collaboration_status', ''),
		'language' => Request::val('language', ''),
	];

	// get existing values
	$old_data = getRecord('hist_story', $selected_id);
	if(is_array($old_data)) {
		$old_data = array_map('makeSafe', $old_data);
		$old_data['selectedID'] = makeSafe($selected_id);
	}

	$data['selectedID'] = makeSafe($selected_id);

	// hook: hist_story_before_update
	if(function_exists('hist_story_before_update')) {
		$args = ['old_data' => $old_data];
		if(!hist_story_before_update($data, getMemberInfo(), $args)) {
			if(isset($args['error_message'])) $error_message = $args['error_message'];
			return false;
		}
	}

	$set = $data; unset($set['selectedID']);
	foreach ($set as $field => $value) {
		$set[$field] = ($value !== '' && $value !== NULL) ? $value : NULL;
	}

	if(!update(
		'hist_story', 
		backtick_keys_once($set), 
		['`id`' => $selected_id], 
		$error_message
	)) {
		echo $error_message;
		echo '<a href="hist_story_view.php?SelectedID=' . urlencode($selected_id) . "\">{$Translation['< back']}</a>";
		exit;
	}


	$eo = ['silentErrors' => true];

	update_calc_fields('hist_story', $data['selectedID'], calculated_fields()['hist_story']);

	// hook: hist_story_after_update
	if(function_exists('hist_story_after_update')) {
		$res = sql("SELECT * FROM `hist_story` WHERE `id`='{$data['selectedID']}' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)) $data = array_map('makeSafe', $row);

		$data['selectedID'] = $data['id'];
		$args = ['old_data' => $old_data];
		if(!hist_story_after_update($data, getMemberInfo(), $args)) return;
	}

	// mm: update ownership data
	sql("UPDATE `membership_userrecords` SET `dateUpdated`='" . time() . "' WHERE `tableName`='hist_story' AND `pkValue`='" . makeSafe($selected_id) . "'", $eo);
}

function hist_story_form($selected_id = '', $AllowUpdate = 1, $AllowInsert = 1, $AllowDelete = 1, $ShowCancel = 0, $TemplateDV = '', $TemplateDVP = '') {
	// function to return an editable form for a table records
	// and fill it with data of record whose ID is $selected_id. If $selected_id
	// is empty, an empty form is shown, with only an 'Add New'
	// button displayed.

	global $Translation;

	// mm: get table permissions
	$arrPerm = getTablePermissions('hist_story');
	if(!$arrPerm['insert'] && $selected_id=='') { return ''; }
	$AllowInsert = ($arrPerm['insert'] ? true : false);
	// print preview?
	$dvprint = false;
	if($selected_id && $_REQUEST['dvprint_x'] != '') {
		$dvprint = true;
	}

	$filterer_team = thisOr($_REQUEST['filterer_team'], '');
	$filterer_hist_lead_id = thisOr($_REQUEST['filterer_hist_lead_id'], '');
	$filterer_community_id = thisOr($_REQUEST['filterer_community_id'], '');
	$filterer_genre = thisOr($_REQUEST['filterer_genre'], '');
	$filterer_collaboration_status = thisOr($_REQUEST['filterer_collaboration_status'], '');
	$filterer_language = thisOr($_REQUEST['filterer_language'], '');

	// populate filterers, starting from children to grand-parents
	if($filterer_hist_lead_id && !$filterer_team) $filterer_team = sqlValue("select team from hist_author where id='" . makeSafe($filterer_hist_lead_id) . "'");

	// unique random identifier
	$rnd1 = ($dvprint ? rand(1000000, 9999999) : '');
	// combobox: team
	$combo_team = new DataCombo;
	// combobox: hist_lead_id, filterable by: team
	$combo_hist_lead_id = new DataCombo;
	// combobox: community_id
	$combo_community_id = new DataCombo;
	// combobox: genre
	$combo_genre = new DataCombo;
	// combobox: tags
	$combo_tags = new Combo;
	$combo_tags->ListType = 3;
	$combo_tags->MultipleSeparator = ', ';
	$combo_tags->ListBoxHeight = 10;
	$combo_tags->RadiosPerLine = 1;
	if(is_file(dirname(__FILE__).'/hooks/hist_story.tags.csv')) {
		$tags_data = addslashes(implode('', @file(dirname(__FILE__).'/hooks/hist_story.tags.csv')));
		$combo_tags->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions($tags_data)));
		$combo_tags->ListData = $combo_tags->ListItem;
	} else {
		$combo_tags->ListItem = explode('||', entitiesToUTF8(convertLegacyOptions("switzerland;;helvetia;;")));
		$combo_tags->ListData = $combo_tags->ListItem;
	}
	$combo_tags->SelectName = 'tags';
	// combobox: collaboration_status
	$combo_collaboration_status = new DataCombo;
	// combobox: language
	$combo_language = new DataCombo;

	if($selected_id) {
		// mm: check member permissions
		if(!$arrPerm['view']) return '';

		// mm: who is the owner?
		$ownerGroupID = sqlValue("SELECT `groupID` FROM `membership_userrecords` WHERE `tableName`='hist_story' AND `pkValue`='" . makeSafe($selected_id) . "'");
		$ownerMemberID = sqlValue("SELECT LCASE(`memberID`) FROM `membership_userrecords` WHERE `tableName`='hist_story' AND `pkValue`='" . makeSafe($selected_id) . "'");

		if($arrPerm['view'] == 1 && getLoggedMemberID() != $ownerMemberID) return '';
		if($arrPerm['view'] == 2 && getLoggedGroupID() != $ownerGroupID) return '';

		// can edit?
		$AllowUpdate = 0;
		if(($arrPerm['edit'] == 1 && $ownerMemberID == getLoggedMemberID()) || ($arrPerm['edit'] == 2 && $ownerGroupID == getLoggedGroupID()) || $arrPerm['edit'] == 3) {
			$AllowUpdate = 1;
		}

		$res = sql("SELECT * FROM `hist_story` WHERE `id`='" . makeSafe($selected_id) . "'", $eo);
		if(!($row = db_fetch_array($res))) {
			return error_message($Translation['No records found'], 'hist_story_view.php', false);
		}
		$combo_team->SelectedData = $row['team'];
		$combo_hist_lead_id->SelectedData = $row['hist_lead_id'];
		$combo_community_id->SelectedData = $row['community_id'];
		$combo_genre->SelectedData = $row['genre'];
		$combo_tags->SelectedData = $row['tags'];
		$combo_collaboration_status->SelectedData = $row['collaboration_status'];
		$combo_language->SelectedData = $row['language'];
		$urow = $row; /* unsanitized data */
		$hc = new CI_Input(datalist_db_encoding);
		$row = $hc->xss_clean($row); /* sanitize data */
	} else {
		$combo_team->SelectedData = $filterer_team;
		$combo_hist_lead_id->SelectedData = $filterer_hist_lead_id;
		$combo_community_id->SelectedData = $filterer_community_id;
		$combo_genre->SelectedData = $filterer_genre;
		$combo_collaboration_status->SelectedData = $filterer_collaboration_status;
		$combo_language->SelectedData = $filterer_language;
	}
	$combo_team->HTML = '<span id="team-container' . $rnd1 . '"></span><input type="hidden" name="team" id="team' . $rnd1 . '" value="' . html_attr($combo_team->SelectedData) . '">';
	$combo_team->MatchText = '<span id="team-container-readonly' . $rnd1 . '"></span><input type="hidden" name="team" id="team' . $rnd1 . '" value="' . html_attr($combo_team->SelectedData) . '">';
	$combo_hist_lead_id->HTML = '<span id="hist_lead_id-container' . $rnd1 . '"></span><input type="hidden" name="hist_lead_id" id="hist_lead_id' . $rnd1 . '" value="' . html_attr($combo_hist_lead_id->SelectedData) . '">';
	$combo_hist_lead_id->MatchText = '<span id="hist_lead_id-container-readonly' . $rnd1 . '"></span><input type="hidden" name="hist_lead_id" id="hist_lead_id' . $rnd1 . '" value="' . html_attr($combo_hist_lead_id->SelectedData) . '">';
	$combo_community_id->HTML = '<span id="community_id-container' . $rnd1 . '"></span><input type="hidden" name="community_id" id="community_id' . $rnd1 . '" value="' . html_attr($combo_community_id->SelectedData) . '">';
	$combo_community_id->MatchText = '<span id="community_id-container-readonly' . $rnd1 . '"></span><input type="hidden" name="community_id" id="community_id' . $rnd1 . '" value="' . html_attr($combo_community_id->SelectedData) . '">';
	$combo_genre->HTML = '<span id="genre-container' . $rnd1 . '"></span><input type="hidden" name="genre" id="genre' . $rnd1 . '" value="' . html_attr($combo_genre->SelectedData) . '">';
	$combo_genre->MatchText = '<span id="genre-container-readonly' . $rnd1 . '"></span><input type="hidden" name="genre" id="genre' . $rnd1 . '" value="' . html_attr($combo_genre->SelectedData) . '">';
	$combo_tags->Render();
	$combo_collaboration_status->HTML = '<span id="collaboration_status-container' . $rnd1 . '"></span><input type="hidden" name="collaboration_status" id="collaboration_status' . $rnd1 . '" value="' . html_attr($combo_collaboration_status->SelectedData) . '">';
	$combo_collaboration_status->MatchText = '<span id="collaboration_status-container-readonly' . $rnd1 . '"></span><input type="hidden" name="collaboration_status" id="collaboration_status' . $rnd1 . '" value="' . html_attr($combo_collaboration_status->SelectedData) . '">';
	$combo_language->HTML = '<span id="language-container' . $rnd1 . '"></span><input type="hidden" name="language" id="language' . $rnd1 . '" value="' . html_attr($combo_language->SelectedData) . '">';
	$combo_language->MatchText = '<span id="language-container-readonly' . $rnd1 . '"></span><input type="hidden" name="language" id="language' . $rnd1 . '" value="' . html_attr($combo_language->SelectedData) . '">';

	ob_start();
	?>

	<script>
		// initial lookup values
		AppGini.current_team__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['team'] : $filterer_team); ?>"};
		AppGini.current_hist_lead_id__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['hist_lead_id'] : $filterer_hist_lead_id); ?>"};
		AppGini.current_community_id__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['community_id'] : $filterer_community_id); ?>"};
		AppGini.current_genre__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['genre'] : $filterer_genre); ?>"};
		AppGini.current_collaboration_status__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['collaboration_status'] : $filterer_collaboration_status); ?>"};
		AppGini.current_language__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['language'] : $filterer_language); ?>"};

		jQuery(function() {
			setTimeout(function() {
				if(typeof(team_reload__RAND__) == 'function') team_reload__RAND__();
				<?php echo (!$AllowUpdate || $dvprint ? 'if(typeof(hist_lead_id_reload__RAND__) == \'function\') hist_lead_id_reload__RAND__(AppGini.current_team__RAND__.value);' : ''); ?>
				if(typeof(community_id_reload__RAND__) == 'function') community_id_reload__RAND__();
				if(typeof(genre_reload__RAND__) == 'function') genre_reload__RAND__();
				if(typeof(collaboration_status_reload__RAND__) == 'function') collaboration_status_reload__RAND__();
				if(typeof(language_reload__RAND__) == 'function') language_reload__RAND__();
			}, 50); /* we need to slightly delay client-side execution of the above code to allow AppGini.ajaxCache to work */
		});
		function team_reload__RAND__() {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#team-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_team__RAND__.value, t: 'hist_story', f: 'team' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="team"]').val(resp.results[0].id);
							$j('[id=team-container-readonly__RAND__]').html('<span id="team-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_team_view_parent]').hide(); } else { $j('.btn[id=hist_team_view_parent]').show(); }

						if(typeof(hist_lead_id_reload__RAND__) == 'function') hist_lead_id_reload__RAND__(AppGini.current_team__RAND__.value);
						if(typeof(hist_lead_name_reload__RAND__) == 'function') hist_lead_name_reload__RAND__(AppGini.current_team__RAND__.value);

							if(typeof(team_update_autofills__RAND__) == 'function') team_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'hist_story', f: 'team' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_team__RAND__.value = e.added.id;
				AppGini.current_team__RAND__.text = e.added.text;
				$j('[name="team"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_team_view_parent]').hide(); } else { $j('.btn[id=hist_team_view_parent]').show(); }

						if(typeof(hist_lead_id_reload__RAND__) == 'function') hist_lead_id_reload__RAND__(AppGini.current_team__RAND__.value);
						if(typeof(hist_lead_name_reload__RAND__) == 'function') hist_lead_name_reload__RAND__(AppGini.current_team__RAND__.value);

				if(typeof(team_update_autofills__RAND__) == 'function') team_update_autofills__RAND__();
			});

			if(!$j("#team-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_team__RAND__.value, t: 'hist_story', f: 'team' },
					success: function(resp) {
						$j('[name="team"]').val(resp.results[0].id);
						$j('[id=team-container-readonly__RAND__]').html('<span id="team-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_team_view_parent]').hide(); } else { $j('.btn[id=hist_team_view_parent]').show(); }

						if(typeof(team_update_autofills__RAND__) == 'function') team_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_team__RAND__.value, t: 'hist_story', f: 'team' },
				success: function(resp) {
					$j('[id=team-container__RAND__], [id=team-container-readonly__RAND__]').html('<span id="team-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_team_view_parent]').hide(); } else { $j('.btn[id=hist_team_view_parent]').show(); }

					if(typeof(team_update_autofills__RAND__) == 'function') team_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function hist_lead_id_reload__RAND__(filterer_team) {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#hist_lead_id-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { filterer_team: filterer_team, id: AppGini.current_hist_lead_id__RAND__.value, t: 'hist_story', f: 'hist_lead_id' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="hist_lead_id"]').val(resp.results[0].id);
							$j('[id=hist_lead_id-container-readonly__RAND__]').html('<span id="hist_lead_id-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_author_view_parent]').hide(); } else { $j('.btn[id=hist_author_view_parent]').show(); }


							if(typeof(hist_lead_id_update_autofills__RAND__) == 'function') hist_lead_id_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { filterer_team: filterer_team, s: term, p: page, t: 'hist_story', f: 'hist_lead_id' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_hist_lead_id__RAND__.value = e.added.id;
				AppGini.current_hist_lead_id__RAND__.text = e.added.text;
				$j('[name="hist_lead_id"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_author_view_parent]').hide(); } else { $j('.btn[id=hist_author_view_parent]').show(); }


				if(typeof(hist_lead_id_update_autofills__RAND__) == 'function') hist_lead_id_update_autofills__RAND__();
			});

			if(!$j("#hist_lead_id-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_hist_lead_id__RAND__.value, t: 'hist_story', f: 'hist_lead_id' },
					success: function(resp) {
						$j('[name="hist_lead_id"]').val(resp.results[0].id);
						$j('[id=hist_lead_id-container-readonly__RAND__]').html('<span id="hist_lead_id-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_author_view_parent]').hide(); } else { $j('.btn[id=hist_author_view_parent]').show(); }

						if(typeof(hist_lead_id_update_autofills__RAND__) == 'function') hist_lead_id_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_hist_lead_id__RAND__.value, t: 'hist_story', f: 'hist_lead_id' },
				success: function(resp) {
					$j('[id=hist_lead_id-container__RAND__], [id=hist_lead_id-container-readonly__RAND__]').html('<span id="hist_lead_id-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_author_view_parent]').hide(); } else { $j('.btn[id=hist_author_view_parent]').show(); }

					if(typeof(hist_lead_id_update_autofills__RAND__) == 'function') hist_lead_id_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function community_id_reload__RAND__() {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#community_id-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_community_id__RAND__.value, t: 'hist_story', f: 'community_id' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="community_id"]').val(resp.results[0].id);
							$j('[id=community_id-container-readonly__RAND__]').html('<span id="community_id-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_community_view_parent]').hide(); } else { $j('.btn[id=hist_community_view_parent]').show(); }


							if(typeof(community_id_update_autofills__RAND__) == 'function') community_id_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'hist_story', f: 'community_id' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_community_id__RAND__.value = e.added.id;
				AppGini.current_community_id__RAND__.text = e.added.text;
				$j('[name="community_id"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_community_view_parent]').hide(); } else { $j('.btn[id=hist_community_view_parent]').show(); }


				if(typeof(community_id_update_autofills__RAND__) == 'function') community_id_update_autofills__RAND__();
			});

			if(!$j("#community_id-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_community_id__RAND__.value, t: 'hist_story', f: 'community_id' },
					success: function(resp) {
						$j('[name="community_id"]').val(resp.results[0].id);
						$j('[id=community_id-container-readonly__RAND__]').html('<span id="community_id-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_community_view_parent]').hide(); } else { $j('.btn[id=hist_community_view_parent]').show(); }

						if(typeof(community_id_update_autofills__RAND__) == 'function') community_id_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_community_id__RAND__.value, t: 'hist_story', f: 'community_id' },
				success: function(resp) {
					$j('[id=community_id-container__RAND__], [id=community_id-container-readonly__RAND__]').html('<span id="community_id-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_community_view_parent]').hide(); } else { $j('.btn[id=hist_community_view_parent]').show(); }

					if(typeof(community_id_update_autofills__RAND__) == 'function') community_id_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function genre_reload__RAND__() {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#genre-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_genre__RAND__.value, t: 'hist_story', f: 'genre' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="genre"]').val(resp.results[0].id);
							$j('[id=genre-container-readonly__RAND__]').html('<span id="genre-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_bibliography_genre_view_parent]').hide(); } else { $j('.btn[id=class_bibliography_genre_view_parent]').show(); }


							if(typeof(genre_update_autofills__RAND__) == 'function') genre_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'hist_story', f: 'genre' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_genre__RAND__.value = e.added.id;
				AppGini.current_genre__RAND__.text = e.added.text;
				$j('[name="genre"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_bibliography_genre_view_parent]').hide(); } else { $j('.btn[id=class_bibliography_genre_view_parent]').show(); }


				if(typeof(genre_update_autofills__RAND__) == 'function') genre_update_autofills__RAND__();
			});

			if(!$j("#genre-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_genre__RAND__.value, t: 'hist_story', f: 'genre' },
					success: function(resp) {
						$j('[name="genre"]').val(resp.results[0].id);
						$j('[id=genre-container-readonly__RAND__]').html('<span id="genre-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_bibliography_genre_view_parent]').hide(); } else { $j('.btn[id=class_bibliography_genre_view_parent]').show(); }

						if(typeof(genre_update_autofills__RAND__) == 'function') genre_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_genre__RAND__.value, t: 'hist_story', f: 'genre' },
				success: function(resp) {
					$j('[id=genre-container__RAND__], [id=genre-container-readonly__RAND__]').html('<span id="genre-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_bibliography_genre_view_parent]').hide(); } else { $j('.btn[id=class_bibliography_genre_view_parent]').show(); }

					if(typeof(genre_update_autofills__RAND__) == 'function') genre_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function collaboration_status_reload__RAND__() {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#collaboration_status-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_collaboration_status__RAND__.value, t: 'hist_story', f: 'collaboration_status' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="collaboration_status"]').val(resp.results[0].id);
							$j('[id=collaboration_status-container-readonly__RAND__]').html('<span id="collaboration_status-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_story_collab_type_view_parent]').hide(); } else { $j('.btn[id=class_story_collab_type_view_parent]').show(); }


							if(typeof(collaboration_status_update_autofills__RAND__) == 'function') collaboration_status_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'hist_story', f: 'collaboration_status' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_collaboration_status__RAND__.value = e.added.id;
				AppGini.current_collaboration_status__RAND__.text = e.added.text;
				$j('[name="collaboration_status"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_story_collab_type_view_parent]').hide(); } else { $j('.btn[id=class_story_collab_type_view_parent]').show(); }


				if(typeof(collaboration_status_update_autofills__RAND__) == 'function') collaboration_status_update_autofills__RAND__();
			});

			if(!$j("#collaboration_status-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_collaboration_status__RAND__.value, t: 'hist_story', f: 'collaboration_status' },
					success: function(resp) {
						$j('[name="collaboration_status"]').val(resp.results[0].id);
						$j('[id=collaboration_status-container-readonly__RAND__]').html('<span id="collaboration_status-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_story_collab_type_view_parent]').hide(); } else { $j('.btn[id=class_story_collab_type_view_parent]').show(); }

						if(typeof(collaboration_status_update_autofills__RAND__) == 'function') collaboration_status_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_collaboration_status__RAND__.value, t: 'hist_story', f: 'collaboration_status' },
				success: function(resp) {
					$j('[id=collaboration_status-container__RAND__], [id=collaboration_status-container-readonly__RAND__]').html('<span id="collaboration_status-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_story_collab_type_view_parent]').hide(); } else { $j('.btn[id=class_story_collab_type_view_parent]').show(); }

					if(typeof(collaboration_status_update_autofills__RAND__) == 'function') collaboration_status_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function language_reload__RAND__() {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#language-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_language__RAND__.value, t: 'hist_story', f: 'language' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="language"]').val(resp.results[0].id);
							$j('[id=language-container-readonly__RAND__]').html('<span id="language-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_language_view_parent]').hide(); } else { $j('.btn[id=class_language_view_parent]').show(); }


							if(typeof(language_update_autofills__RAND__) == 'function') language_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'hist_story', f: 'language' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_language__RAND__.value = e.added.id;
				AppGini.current_language__RAND__.text = e.added.text;
				$j('[name="language"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_language_view_parent]').hide(); } else { $j('.btn[id=class_language_view_parent]').show(); }


				if(typeof(language_update_autofills__RAND__) == 'function') language_update_autofills__RAND__();
			});

			if(!$j("#language-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_language__RAND__.value, t: 'hist_story', f: 'language' },
					success: function(resp) {
						$j('[name="language"]').val(resp.results[0].id);
						$j('[id=language-container-readonly__RAND__]').html('<span id="language-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_language_view_parent]').hide(); } else { $j('.btn[id=class_language_view_parent]').show(); }

						if(typeof(language_update_autofills__RAND__) == 'function') language_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_language__RAND__.value, t: 'hist_story', f: 'language' },
				success: function(resp) {
					$j('[id=language-container__RAND__], [id=language-container-readonly__RAND__]').html('<span id="language-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_language_view_parent]').hide(); } else { $j('.btn[id=class_language_view_parent]').show(); }

					if(typeof(language_update_autofills__RAND__) == 'function') language_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
	</script>
	<?php

	$lookups = str_replace('__RAND__', $rnd1, ob_get_contents());
	ob_end_clean();


	// code for template based detail view forms

	// open the detail view template
	if($dvprint) {
		$template_file = is_file("./{$TemplateDVP}") ? "./{$TemplateDVP}" : './templates/hist_story_templateDVP.html';
		$templateCode = @file_get_contents($template_file);
	} else {
		$template_file = is_file("./{$TemplateDV}") ? "./{$TemplateDV}" : './templates/hist_story_templateDV.html';
		$templateCode = @file_get_contents($template_file);
	}

	// process form title
	$templateCode = str_replace('<%%DETAIL_VIEW_TITLE%%>', 'Detail View', $templateCode);
	$templateCode = str_replace('<%%RND1%%>', $rnd1, $templateCode);
	$templateCode = str_replace('<%%EMBEDDED%%>', ($_REQUEST['Embedded'] ? 'Embedded=1' : ''), $templateCode);
	// process buttons
	if($AllowInsert) {
		if(!$selected_id) $templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-success" id="insert" name="insert_x" value="1" onclick="return hist_story_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save New'] . '</button>', $templateCode);
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="insert" name="insert_x" value="1" onclick="return hist_story_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save As Copy'] . '</button>', $templateCode);
	} else {
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '', $templateCode);
	}

	// 'Back' button action
	if($_REQUEST['Embedded']) {
		$backAction = 'AppGini.closeParentModal(); return false;';
	} else {
		$backAction = '$j(\'form\').eq(0).attr(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;';
	}

	if($selected_id) {
		if(!$_REQUEST['Embedded']) $templateCode = str_replace('<%%DVPRINT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="dvprint" name="dvprint_x" value="1" onclick="$j(\'form\').eq(0).prop(\'novalidate\', true); document.myform.reset(); return true;" title="' . html_attr($Translation['Print Preview']) . '"><i class="glyphicon glyphicon-print"></i> ' . $Translation['Print Preview'] . '</button>', $templateCode);
		if($AllowUpdate) {
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '<button type="submit" class="btn btn-success btn-lg" id="update" name="update_x" value="1" onclick="return hist_story_validateData();" title="' . html_attr($Translation['Save Changes']) . '"><i class="glyphicon glyphicon-ok"></i> ' . $Translation['Save Changes'] . '</button>', $templateCode);
		} else {
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		}
		if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3) { // allow delete?
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '<button type="submit" class="btn btn-danger" id="delete" name="delete_x" value="1" onclick="return confirm(\'' . $Translation['are you sure?'] . '\');" title="' . html_attr($Translation['Delete']) . '"><i class="glyphicon glyphicon-trash"></i> ' . $Translation['Delete'] . '</button>', $templateCode);
		} else {
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		}
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>', $templateCode);
	} else {
		$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', ($ShowCancel ? '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>' : ''), $templateCode);
	}

	// set records to read only if user can't insert new records and can't edit current record
	if(($selected_id && !$AllowUpdate && !$AllowInsert) || (!$selected_id && !$AllowInsert)) {
		$jsReadOnly .= "\tjQuery('#team').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#team_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#hist_lead_id').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#hist_lead_id_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#community_id').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#community_id_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#story_title').replaceWith('<div class=\"form-control-static\" id=\"story_title\">' + (jQuery('#story_title').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#genre').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#genre_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#approach').replaceWith('<div class=\"form-control-static\" id=\"approach\">' + (jQuery('#approach').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#description').replaceWith('<div class=\"form-control-static\" id=\"description\">' + (jQuery('#description').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#tags').replaceWith('<div class=\"form-control-static\" id=\"tags\">' + (jQuery('#tags').val() || '') + '</div>'); jQuery('#tags-multi-selection-help').hide();\n";
		$jsReadOnly .= "\tjQuery('#s2id_tags').remove();\n";
		$jsReadOnly .= "\tjQuery('#collaboration_status').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#collaboration_status_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#language').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#language_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('.select2-container').hide();\n";

		$noUploads = true;
	} elseif($AllowInsert) {
		$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', true);"; // temporarily disable form change handler
			$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', false);"; // re-enable form change handler
	}

	// process combos
	$templateCode = str_replace('<%%COMBO(team)%%>', $combo_team->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(team)%%>', $combo_team->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(team)%%>', urlencode($combo_team->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(hist_lead_id)%%>', $combo_hist_lead_id->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(hist_lead_id)%%>', $combo_hist_lead_id->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(hist_lead_id)%%>', urlencode($combo_hist_lead_id->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(community_id)%%>', $combo_community_id->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(community_id)%%>', $combo_community_id->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(community_id)%%>', urlencode($combo_community_id->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(genre)%%>', $combo_genre->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(genre)%%>', $combo_genre->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(genre)%%>', urlencode($combo_genre->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(tags)%%>', $combo_tags->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(tags)%%>', $combo_tags->SelectedData, $templateCode);
	$templateCode = str_replace('<%%COMBO(collaboration_status)%%>', $combo_collaboration_status->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(collaboration_status)%%>', $combo_collaboration_status->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(collaboration_status)%%>', urlencode($combo_collaboration_status->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(language)%%>', $combo_language->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(language)%%>', $combo_language->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(language)%%>', urlencode($combo_language->MatchText), $templateCode);

	/* lookup fields array: 'lookup field name' => array('parent table name', 'lookup field caption') */
	$lookup_fields = array('team' => array('hist_team', 'Team'), 'hist_lead_id' => array('hist_author', 'Project leader'), 'community_id' => array('hist_community', 'Community name'), 'genre' => array('class_bibliography_genre', 'Genre'), 'collaboration_status' => array('class_story_collab_type', 'Collaboration status'), 'language' => array('class_language', 'Language'), );
	foreach($lookup_fields as $luf => $ptfc) {
		$pt_perm = getTablePermissions($ptfc[0]);

		// process foreign key links
		if($pt_perm['view'] || $pt_perm['edit']) {
			$templateCode = str_replace("<%%PLINK({$luf})%%>", '<button type="button" class="btn btn-default view_parent hspacer-md" id="' . $ptfc[0] . '_view_parent" title="' . html_attr($Translation['View'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-eye-open"></i></button>', $templateCode);
		}

		// if user has insert permission to parent table of a lookup field, put an add new button
		if($pt_perm['insert'] && !$_REQUEST['Embedded']) {
			$templateCode = str_replace("<%%ADDNEW({$ptfc[0]})%%>", '<button type="button" class="btn btn-success add_new_parent hspacer-md" id="' . $ptfc[0] . '_add_new" title="' . html_attr($Translation['Add New'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-plus-sign"></i></button>', $templateCode);
		}
	}

	// process images
	$templateCode = str_replace('<%%UPLOADFILE(id)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(team)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(hist_lead_id)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(community_id)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(story_title)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(genre)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(approach)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(description)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(tags)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(collaboration_status)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(language)%%>', '', $templateCode);

	// process values
	if($selected_id) {
		if( $dvprint) $templateCode = str_replace('<%%VALUE(id)%%>', safe_html($urow['id']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(id)%%>', html_attr($row['id']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(id)%%>', urlencode($urow['id']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(team)%%>', safe_html($urow['team']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(team)%%>', html_attr($row['team']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(team)%%>', urlencode($urow['team']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(hist_lead_id)%%>', safe_html($urow['hist_lead_id']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(hist_lead_id)%%>', html_attr($row['hist_lead_id']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(hist_lead_id)%%>', urlencode($urow['hist_lead_id']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(community_id)%%>', safe_html($urow['community_id']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(community_id)%%>', html_attr($row['community_id']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(community_id)%%>', urlencode($urow['community_id']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(story_title)%%>', safe_html($urow['story_title']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(story_title)%%>', html_attr($row['story_title']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(story_title)%%>', urlencode($urow['story_title']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(genre)%%>', safe_html($urow['genre']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(genre)%%>', html_attr($row['genre']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(genre)%%>', urlencode($urow['genre']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(approach)%%>', safe_html($urow['approach']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(approach)%%>', html_attr($row['approach']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(approach)%%>', urlencode($urow['approach']), $templateCode);
		if($dvprint || (!$AllowUpdate && !$AllowInsert)) {
			$templateCode = str_replace('<%%VALUE(description)%%>', safe_html($urow['description']), $templateCode);
		} else {
			$templateCode = str_replace('<%%VALUE(description)%%>', html_attr($row['description']), $templateCode);
		}
		$templateCode = str_replace('<%%URLVALUE(description)%%>', urlencode($urow['description']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(tags)%%>', safe_html($urow['tags']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(tags)%%>', html_attr($row['tags']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(tags)%%>', urlencode($urow['tags']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(collaboration_status)%%>', safe_html($urow['collaboration_status']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(collaboration_status)%%>', html_attr($row['collaboration_status']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(collaboration_status)%%>', urlencode($urow['collaboration_status']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(language)%%>', safe_html($urow['language']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(language)%%>', html_attr($row['language']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(language)%%>', urlencode($urow['language']), $templateCode);
	} else {
		$templateCode = str_replace('<%%VALUE(id)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(id)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(team)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(team)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(hist_lead_id)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(hist_lead_id)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(community_id)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(community_id)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(story_title)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(story_title)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(genre)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(genre)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(approach)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(approach)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(description)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(description)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(tags)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(tags)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(collaboration_status)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(collaboration_status)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(language)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(language)%%>', urlencode(''), $templateCode);
	}

	// process translations
	$templateCode = parseTemplate($templateCode);

	// clear scrap
	$templateCode = str_replace('<%%', '<!-- ', $templateCode);
	$templateCode = str_replace('%%>', ' -->', $templateCode);

	// hide links to inaccessible tables
	if($_REQUEST['dvprint_x'] == '') {
		$templateCode .= "\n\n<script>\$j(function() {\n";
		$arrTables = getTableList();
		foreach($arrTables as $name => $caption) {
			$templateCode .= "\t\$j('#{$name}_link').removeClass('hidden');\n";
			$templateCode .= "\t\$j('#xs_{$name}_link').removeClass('hidden');\n";
		}

		$templateCode .= $jsReadOnly;
		$templateCode .= $jsEditable;

		if(!$selected_id) {
		}

		$templateCode.="\n});</script>\n";
	}

	// ajaxed auto-fill fields
	$templateCode .= '<script>';
	$templateCode .= '$j(function() {';

	$templateCode .= "\thist_lead_id_update_autofills$rnd1 = function() {\n";
	$templateCode .= "\t\t\$j.ajax({\n";
	if($dvprint) {
		$templateCode .= "\t\t\turl: 'hist_story_autofill.php?rnd1=$rnd1&mfk=hist_lead_id&id=' + encodeURIComponent('".addslashes($row['hist_lead_id'])."'),\n";
		$templateCode .= "\t\t\tcontentType: 'application/x-www-form-urlencoded; charset=" . datalist_db_encoding . "',\n";
		$templateCode .= "\t\t\ttype: 'GET'\n";
	} else {
		$templateCode .= "\t\t\turl: 'hist_story_autofill.php?rnd1=$rnd1&mfk=hist_lead_id&id=' + encodeURIComponent(AppGini.current_hist_lead_id{$rnd1}.value),\n";
		$templateCode .= "\t\t\tcontentType: 'application/x-www-form-urlencoded; charset=" . datalist_db_encoding . "',\n";
		$templateCode .= "\t\t\ttype: 'GET',\n";
		$templateCode .= "\t\t\tbeforeSend: function() { \$j('#hist_lead_id$rnd1').prop('disabled', true); \$j('#hist_lead_idLoading').html('<img src=loading.gif align=top>'); },\n";
		$templateCode .= "\t\t\tcomplete: function() { " . (($arrPerm[1] || (($arrPerm[3] == 1 && $ownerMemberID == getLoggedMemberID()) || ($arrPerm[3] == 2 && $ownerGroupID == getLoggedGroupID()) || $arrPerm[3] == 3)) ? "\$j('#hist_lead_id$rnd1').prop('disabled', false); " : "\$j('#hist_lead_id$rnd1').prop('disabled', true); ")."\$j('#hist_lead_idLoading').html(''); \$j(window).resize(); }\n";
	}
	$templateCode .= "\t\t});\n";
	$templateCode .= "\t};\n";
	if(!$dvprint) $templateCode .= "\tif(\$j('#hist_lead_id_caption').length) \$j('#hist_lead_id_caption').click(function() { hist_lead_id_update_autofills$rnd1(); });\n";


	$templateCode.="});";
	$templateCode.="</script>";
	$templateCode .= $lookups;

	// handle enforced parent values for read-only lookup fields

	// don't include blank images in lightbox gallery
	$templateCode = preg_replace('/blank.gif" data-lightbox=".*?"/', 'blank.gif"', $templateCode);

	// don't display empty email links
	$templateCode=preg_replace('/<a .*?href="mailto:".*?<\/a>/', '', $templateCode);

	/* default field values */
	$rdata = $jdata = get_defaults('hist_story');
	if($selected_id) {
		$jdata = get_joined_record('hist_story', $selected_id);
		if($jdata === false) $jdata = get_defaults('hist_story');
		$rdata = $row;
	}
	$templateCode .= loadView('hist_story-ajax-cache', array('rdata' => $rdata, 'jdata' => $jdata));

	// hook: hist_story_dv
	if(function_exists('hist_story_dv')) {
		$args=[];
		hist_story_dv(($selected_id ? $selected_id : FALSE), getMemberInfo(), $templateCode, $args);
	}

	return $templateCode;
}