<?php
// This script and data application were generated by AppGini 5.94
// Download AppGini for free from https://bigprof.com/appgini/download/

	$currDir = dirname(__FILE__);
	include_once("{$currDir}/lib.php");
	@include_once("{$currDir}/hooks/hist_storylines.php");
	include_once("{$currDir}/hist_storylines_dml.php");

	// mm: can the current member access this page?
	$perm = getTablePermissions('hist_storylines');
	if(!$perm['access']) {
		echo error_message($Translation['tableAccessDenied'], false);
		echo '<script>setTimeout(function() { window.location = "index.php?signOut=1"; }, 2000);</script>';
		exit;
	}

	$x = new DataList;
	$x->TableName = 'hist_storylines';

	// Fields that can be displayed in the table view
	$x->QueryFieldsTV = [
		"`hist_storylines`.`id`" => "id",
		"IF(    CHAR_LENGTH(`hist_story1`.`id`) || CHAR_LENGTH(`hist_story1`.`story_title`), CONCAT_WS('',   `hist_story1`.`id`, '   ', `hist_story1`.`story_title`), '') /* Story */" => "story",
		"IF(    CHAR_LENGTH(`class_story_acts1`.`act`), CONCAT_WS('',   `class_story_acts1`.`act`), '') /* Act */" => "story_act",
		"IF(    CHAR_LENGTH(`hist_story_chr1`.`id`) || CHAR_LENGTH(`hist_story_chr1`.`id`), CONCAT_WS('',   `hist_story_chr1`.`id`, ' - ', `hist_story_chr1`.`id`), '') /* Character */" => "character",
		"IF(    CHAR_LENGTH(`hist_story_chr1`.`id`) || CHAR_LENGTH(`hist_story_chr1`.`role`), CONCAT_WS('',   `hist_story_chr1`.`id`, ' - ', `hist_story_chr1`.`role`), '') /* Role */" => "role",
		"`hist_storylines`.`storyline_no`" => "storyline_no",
		"`hist_storylines`.`parenthetic`" => "parenthetic",
		"`hist_storylines`.`storyline_title`" => "storyline_title",
		"`hist_storylines`.`storyline`" => "storyline",
		"`hist_storylines`.`notes`" => "notes",
		"IF(    CHAR_LENGTH(`class_dramatica_steps1`.`step`), CONCAT_WS('',   `class_dramatica_steps1`.`step`), '') /* Storyweaving_scene_no */" => "storyweaving_scene_no",
		"IF(    CHAR_LENGTH(`hist_storyweaving_scene2`.`id`), CONCAT_WS('',   `hist_storyweaving_scene2`.`id`), '') /* Storyweaving_scene */" => "storyweaving_scene",
		"IF(    CHAR_LENGTH(`hist_storyweaving_scene3`.`sequence`), CONCAT_WS('',   `hist_storyweaving_scene3`.`sequence`), '') /* Storyweaving_sequence */" => "storyweaving_sequence",
		"IF(    CHAR_LENGTH(`class_dramatica_themes1`.`theme`), CONCAT_WS('',   `class_dramatica_themes1`.`theme`), '') /* Storyweaving_theme */" => "storyweaving_theme",
		"IF(    CHAR_LENGTH(`hist_chr_scene1`.`id`) || CHAR_LENGTH(`hist_chr_scene1`.`scene`), CONCAT_WS('',   `hist_chr_scene1`.`id`, '   ', `hist_chr_scene1`.`scene`), '') /* Characterevent_scene */" => "characterevent_scene",
		"IF(    CHAR_LENGTH(`hist_encounter_scene1`.`scene`), CONCAT_WS('',   `hist_encounter_scene1`.`scene`), '') /* Character_event */" => "character_event",
	];
	// mapping incoming sort by requests to actual query fields
	$x->SortFields = [
		1 => '`hist_storylines`.`id`',
		2 => 2,
		3 => '`class_story_acts1`.`act`',
		4 => 4,
		5 => 5,
		6 => 6,
		7 => 7,
		8 => 8,
		9 => 9,
		10 => 10,
		11 => 11,
		12 => '`hist_storyweaving_scene2`.`id`',
		13 => '`hist_storyweaving_scene3`.`sequence`',
		14 => 14,
		15 => 15,
		16 => '`hist_encounter_scene1`.`scene`',
	];

	// Fields that can be displayed in the csv file
	$x->QueryFieldsCSV = [
		"`hist_storylines`.`id`" => "id",
		"IF(    CHAR_LENGTH(`hist_story1`.`id`) || CHAR_LENGTH(`hist_story1`.`story_title`), CONCAT_WS('',   `hist_story1`.`id`, '   ', `hist_story1`.`story_title`), '') /* Story */" => "story",
		"IF(    CHAR_LENGTH(`class_story_acts1`.`act`), CONCAT_WS('',   `class_story_acts1`.`act`), '') /* Act */" => "story_act",
		"IF(    CHAR_LENGTH(`hist_story_chr1`.`id`) || CHAR_LENGTH(`hist_story_chr1`.`id`), CONCAT_WS('',   `hist_story_chr1`.`id`, ' - ', `hist_story_chr1`.`id`), '') /* Character */" => "character",
		"IF(    CHAR_LENGTH(`hist_story_chr1`.`id`) || CHAR_LENGTH(`hist_story_chr1`.`role`), CONCAT_WS('',   `hist_story_chr1`.`id`, ' - ', `hist_story_chr1`.`role`), '') /* Role */" => "role",
		"`hist_storylines`.`storyline_no`" => "storyline_no",
		"`hist_storylines`.`parenthetic`" => "parenthetic",
		"`hist_storylines`.`storyline_title`" => "storyline_title",
		"`hist_storylines`.`storyline`" => "storyline",
		"`hist_storylines`.`notes`" => "notes",
		"IF(    CHAR_LENGTH(`class_dramatica_steps1`.`step`), CONCAT_WS('',   `class_dramatica_steps1`.`step`), '') /* Storyweaving_scene_no */" => "storyweaving_scene_no",
		"IF(    CHAR_LENGTH(`hist_storyweaving_scene2`.`id`), CONCAT_WS('',   `hist_storyweaving_scene2`.`id`), '') /* Storyweaving_scene */" => "storyweaving_scene",
		"IF(    CHAR_LENGTH(`hist_storyweaving_scene3`.`sequence`), CONCAT_WS('',   `hist_storyweaving_scene3`.`sequence`), '') /* Storyweaving_sequence */" => "storyweaving_sequence",
		"IF(    CHAR_LENGTH(`class_dramatica_themes1`.`theme`), CONCAT_WS('',   `class_dramatica_themes1`.`theme`), '') /* Storyweaving_theme */" => "storyweaving_theme",
		"IF(    CHAR_LENGTH(`hist_chr_scene1`.`id`) || CHAR_LENGTH(`hist_chr_scene1`.`scene`), CONCAT_WS('',   `hist_chr_scene1`.`id`, '   ', `hist_chr_scene1`.`scene`), '') /* Characterevent_scene */" => "characterevent_scene",
		"IF(    CHAR_LENGTH(`hist_encounter_scene1`.`scene`), CONCAT_WS('',   `hist_encounter_scene1`.`scene`), '') /* Character_event */" => "character_event",
	];
	// Fields that can be filtered
	$x->QueryFieldsFilters = [
		"`hist_storylines`.`id`" => "Id",
		"IF(    CHAR_LENGTH(`hist_story1`.`id`) || CHAR_LENGTH(`hist_story1`.`story_title`), CONCAT_WS('',   `hist_story1`.`id`, '   ', `hist_story1`.`story_title`), '') /* Story */" => "Story",
		"IF(    CHAR_LENGTH(`class_story_acts1`.`act`), CONCAT_WS('',   `class_story_acts1`.`act`), '') /* Act */" => "Act",
		"IF(    CHAR_LENGTH(`hist_story_chr1`.`id`) || CHAR_LENGTH(`hist_story_chr1`.`id`), CONCAT_WS('',   `hist_story_chr1`.`id`, ' - ', `hist_story_chr1`.`id`), '') /* Character */" => "Character",
		"IF(    CHAR_LENGTH(`hist_story_chr1`.`id`) || CHAR_LENGTH(`hist_story_chr1`.`role`), CONCAT_WS('',   `hist_story_chr1`.`id`, ' - ', `hist_story_chr1`.`role`), '') /* Role */" => "Role",
		"`hist_storylines`.`storyline_no`" => "Storyline no.",
		"`hist_storylines`.`parenthetic`" => "Parenthetic",
		"`hist_storylines`.`storyline_title`" => "Storyline title",
		"`hist_storylines`.`storyline`" => "Storyline",
		"`hist_storylines`.`notes`" => "Notes",
		"IF(    CHAR_LENGTH(`class_dramatica_steps1`.`step`), CONCAT_WS('',   `class_dramatica_steps1`.`step`), '') /* Storyweaving_scene_no */" => "Storyweaving_scene_no",
		"IF(    CHAR_LENGTH(`hist_storyweaving_scene2`.`id`), CONCAT_WS('',   `hist_storyweaving_scene2`.`id`), '') /* Storyweaving_scene */" => "Storyweaving_scene",
		"IF(    CHAR_LENGTH(`hist_storyweaving_scene3`.`sequence`), CONCAT_WS('',   `hist_storyweaving_scene3`.`sequence`), '') /* Storyweaving_sequence */" => "Storyweaving_sequence",
		"IF(    CHAR_LENGTH(`class_dramatica_themes1`.`theme`), CONCAT_WS('',   `class_dramatica_themes1`.`theme`), '') /* Storyweaving_theme */" => "Storyweaving_theme",
		"IF(    CHAR_LENGTH(`hist_chr_scene1`.`id`) || CHAR_LENGTH(`hist_chr_scene1`.`scene`), CONCAT_WS('',   `hist_chr_scene1`.`id`, '   ', `hist_chr_scene1`.`scene`), '') /* Characterevent_scene */" => "Characterevent_scene",
		"IF(    CHAR_LENGTH(`hist_encounter_scene1`.`scene`), CONCAT_WS('',   `hist_encounter_scene1`.`scene`), '') /* Character_event */" => "Character_event",
	];

	// Fields that can be quick searched
	$x->QueryFieldsQS = [
		"`hist_storylines`.`id`" => "id",
		"IF(    CHAR_LENGTH(`hist_story1`.`id`) || CHAR_LENGTH(`hist_story1`.`story_title`), CONCAT_WS('',   `hist_story1`.`id`, '   ', `hist_story1`.`story_title`), '') /* Story */" => "story",
		"IF(    CHAR_LENGTH(`class_story_acts1`.`act`), CONCAT_WS('',   `class_story_acts1`.`act`), '') /* Act */" => "story_act",
		"IF(    CHAR_LENGTH(`hist_story_chr1`.`id`) || CHAR_LENGTH(`hist_story_chr1`.`id`), CONCAT_WS('',   `hist_story_chr1`.`id`, ' - ', `hist_story_chr1`.`id`), '') /* Character */" => "character",
		"IF(    CHAR_LENGTH(`hist_story_chr1`.`id`) || CHAR_LENGTH(`hist_story_chr1`.`role`), CONCAT_WS('',   `hist_story_chr1`.`id`, ' - ', `hist_story_chr1`.`role`), '') /* Role */" => "role",
		"`hist_storylines`.`storyline_no`" => "storyline_no",
		"`hist_storylines`.`parenthetic`" => "parenthetic",
		"`hist_storylines`.`storyline_title`" => "storyline_title",
		"`hist_storylines`.`storyline`" => "storyline",
		"`hist_storylines`.`notes`" => "notes",
		"IF(    CHAR_LENGTH(`class_dramatica_steps1`.`step`), CONCAT_WS('',   `class_dramatica_steps1`.`step`), '') /* Storyweaving_scene_no */" => "storyweaving_scene_no",
		"IF(    CHAR_LENGTH(`hist_storyweaving_scene2`.`id`), CONCAT_WS('',   `hist_storyweaving_scene2`.`id`), '') /* Storyweaving_scene */" => "storyweaving_scene",
		"IF(    CHAR_LENGTH(`hist_storyweaving_scene3`.`sequence`), CONCAT_WS('',   `hist_storyweaving_scene3`.`sequence`), '') /* Storyweaving_sequence */" => "storyweaving_sequence",
		"IF(    CHAR_LENGTH(`class_dramatica_themes1`.`theme`), CONCAT_WS('',   `class_dramatica_themes1`.`theme`), '') /* Storyweaving_theme */" => "storyweaving_theme",
		"IF(    CHAR_LENGTH(`hist_chr_scene1`.`id`) || CHAR_LENGTH(`hist_chr_scene1`.`scene`), CONCAT_WS('',   `hist_chr_scene1`.`id`, '   ', `hist_chr_scene1`.`scene`), '') /* Characterevent_scene */" => "characterevent_scene",
		"IF(    CHAR_LENGTH(`hist_encounter_scene1`.`scene`), CONCAT_WS('',   `hist_encounter_scene1`.`scene`), '') /* Character_event */" => "character_event",
	];

	// Lookup fields that can be used as filterers
	$x->filterers = ['story' => 'Story', 'story_act' => 'Act', 'character' => 'Character', 'storyweaving_scene_no' => 'Storyweaving_scene_no', 'storyweaving_scene' => 'Storyweaving_scene', 'storyweaving_sequence' => 'Storyweaving_sequence', 'storyweaving_theme' => 'Storyweaving_theme', 'characterevent_scene' => 'Characterevent_scene', 'character_event' => 'Character_event', ];

	$x->QueryFrom = "`hist_storylines` LEFT JOIN `hist_story` as hist_story1 ON `hist_story1`.`id`=`hist_storylines`.`story` LEFT JOIN `class_story_acts` as class_story_acts1 ON `class_story_acts1`.`id`=`hist_storylines`.`story_act` LEFT JOIN `hist_story_chr` as hist_story_chr1 ON `hist_story_chr1`.`id`=`hist_storylines`.`character` LEFT JOIN `hist_storyweaving_scene` as hist_storyweaving_scene1 ON `hist_storyweaving_scene1`.`id`=`hist_storylines`.`storyweaving_scene_no` LEFT JOIN `class_dramatica_steps` as class_dramatica_steps1 ON `class_dramatica_steps1`.`id`=`hist_storyweaving_scene1`.`step` LEFT JOIN `hist_storyweaving_scene` as hist_storyweaving_scene2 ON `hist_storyweaving_scene2`.`id`=`hist_storylines`.`storyweaving_scene` LEFT JOIN `hist_storyweaving_scene` as hist_storyweaving_scene3 ON `hist_storyweaving_scene3`.`id`=`hist_storylines`.`storyweaving_sequence` LEFT JOIN `hist_storyweaving_scene` as hist_storyweaving_scene4 ON `hist_storyweaving_scene4`.`id`=`hist_storylines`.`storyweaving_theme` LEFT JOIN `class_dramatica_themes` as class_dramatica_themes1 ON `class_dramatica_themes1`.`id`=`hist_storyweaving_scene4`.`theme` LEFT JOIN `hist_chr_scene` as hist_chr_scene1 ON `hist_chr_scene1`.`id`=`hist_storylines`.`characterevent_scene` LEFT JOIN `hist_encounter_scene` as hist_encounter_scene1 ON `hist_encounter_scene1`.`id`=`hist_storylines`.`character_event` ";
	$x->QueryWhere = '';
	$x->QueryOrder = '';

	$x->AllowSelection = 1;
	$x->HideTableView = ($perm['view'] == 0 ? 1 : 0);
	$x->AllowDelete = $perm['delete'];
	$x->AllowMassDelete = (getLoggedAdmin() !== false);
	$x->AllowInsert = $perm['insert'];
	$x->AllowUpdate = $perm['edit'];
	$x->SeparateDV = 1;
	$x->AllowDeleteOfParents = 0;
	$x->AllowFilters = 1;
	$x->AllowSavingFilters = 1;
	$x->AllowSorting = 1;
	$x->AllowNavigation = 1;
	$x->AllowPrinting = 1;
	$x->AllowPrintingDV = 1;
	$x->AllowCSV = 1;
	$x->RecordsPerPage = 10;
	$x->QuickSearch = 1;
	$x->QuickSearchText = $Translation['quick search'];
	$x->ScriptFileName = 'hist_storylines_view.php';
	$x->RedirectAfterInsert = 'hist_storylines_view.php';
	$x->TableTitle = 'History sorylines';
	$x->TableIcon = 'resources/table_icons/chart_curve_edit.png';
	$x->PrimaryKey = '`hist_storylines`.`id`';

	$x->ColWidth = [150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, ];
	$x->ColCaption = ['Id', 'Story', 'Act', 'Character', 'Role', 'Storyline no.', 'Parenthetic', 'Storyline title', 'Storyline', 'Notes', 'Storyweaving_scene_no', 'Storyweaving_scene', 'Storyweaving_sequence', 'Storyweaving_theme', 'Characterevent_scene', 'Character_event', ];
	$x->ColFieldName = ['id', 'story', 'story_act', 'character', 'role', 'storyline_no', 'parenthetic', 'storyline_title', 'storyline', 'notes', 'storyweaving_scene_no', 'storyweaving_scene', 'storyweaving_sequence', 'storyweaving_theme', 'characterevent_scene', 'character_event', ];
	$x->ColNumber  = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, ];

	// template paths below are based on the app main directory
	$x->Template = 'templates/hist_storylines_templateTV.html';
	$x->SelectedTemplate = 'templates/hist_storylines_templateTVS.html';
	$x->TemplateDV = 'templates/hist_storylines_templateDV.html';
	$x->TemplateDVP = 'templates/hist_storylines_templateDVP.html';

	$x->ShowTableHeader = 1;
	$x->TVClasses = "";
	$x->DVClasses = "";
	$x->HasCalculatedFields = false;
	$x->AllowConsoleLog = false;
	$x->AllowDVNavigation = true;

	// mm: build the query based on current member's permissions
	$DisplayRecords = $_REQUEST['DisplayRecords'];
	if(!in_array($DisplayRecords, ['user', 'group'])) { $DisplayRecords = 'all'; }
	if($perm['view'] == 1 || ($perm['view'] > 1 && $DisplayRecords == 'user' && !$_REQUEST['NoFilter_x'])) { // view owner only
		$x->QueryFrom .= ', `membership_userrecords`';
		$x->QueryWhere = "WHERE `hist_storylines`.`id`=`membership_userrecords`.`pkValue` AND `membership_userrecords`.`tableName`='hist_storylines' AND LCASE(`membership_userrecords`.`memberID`)='" . getLoggedMemberID() . "'";
	} elseif($perm['view'] == 2 || ($perm['view'] > 2 && $DisplayRecords == 'group' && !$_REQUEST['NoFilter_x'])) { // view group only
		$x->QueryFrom .= ', `membership_userrecords`';
		$x->QueryWhere = "WHERE `hist_storylines`.`id`=`membership_userrecords`.`pkValue` AND `membership_userrecords`.`tableName`='hist_storylines' AND `membership_userrecords`.`groupID`='" . getLoggedGroupID() . "'";
	} elseif($perm['view'] == 3) { // view all
		// no further action
	} elseif($perm['view'] == 0) { // view none
		$x->QueryFields = ['Not enough permissions' => 'NEP'];
		$x->QueryFrom = '`hist_storylines`';
		$x->QueryWhere = '';
		$x->DefaultSortField = '';
	}
	// hook: hist_storylines_init
	$render = true;
	if(function_exists('hist_storylines_init')) {
		$args = [];
		$render = hist_storylines_init($x, getMemberInfo(), $args);
	}

	if($render) $x->Render();

	// hook: hist_storylines_header
	$headerCode = '';
	if(function_exists('hist_storylines_header')) {
		$args = [];
		$headerCode = hist_storylines_header($x->ContentType, getMemberInfo(), $args);
	}

	if(!$headerCode) {
		include_once("{$currDir}/header.php"); 
	} else {
		ob_start();
		include_once("{$currDir}/header.php");
		echo str_replace('<%%HEADER%%>', ob_get_clean(), $headerCode);
	}

	echo $x->HTML;

	// hook: hist_storylines_footer
	$footerCode = '';
	if(function_exists('hist_storylines_footer')) {
		$args = [];
		$footerCode = hist_storylines_footer($x->ContentType, getMemberInfo(), $args);
	}

	if(!$footerCode) {
		include_once("{$currDir}/footer.php"); 
	} else {
		ob_start();
		include_once("{$currDir}/footer.php");
		echo str_replace('<%%FOOTER%%>', ob_get_clean(), $footerCode);
	}
