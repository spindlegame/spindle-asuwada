<?php
// This script and data application were generated by AppGini 5.94
// Download AppGini for free from https://bigprof.com/appgini/download/

	$currDir = dirname(__FILE__);
	include_once("{$currDir}/lib.php");
	@include_once("{$currDir}/hooks/chr_scenes_1.php");
	include_once("{$currDir}/chr_scenes_1_dml.php");

	// mm: can the current member access this page?
	$perm = getTablePermissions('chr_scenes_1');
	if(!$perm['access']) {
		echo error_message($Translation['tableAccessDenied'], false);
		echo '<script>setTimeout(function() { window.location = "index.php?signOut=1"; }, 2000);</script>';
		exit;
	}

	$x = new DataList;
	$x->TableName = 'chr_scenes_1';

	// Fields that can be displayed in the table view
	$x->QueryFieldsTV = [
		"`chr_scenes_1`.`id`" => "id",
		"IF(    CHAR_LENGTH(`biblio_author1`.`id`) || CHAR_LENGTH(`biblio_author1`.`id`), CONCAT_WS('',   `biblio_author1`.`id`, '    ', `biblio_author1`.`id`), '') /* Author */" => "author_id",
		"IF(    CHAR_LENGTH(`biblio_author1`.`last_name`) || CHAR_LENGTH(`biblio_author1`.`first_name`), CONCAT_WS('',   `biblio_author1`.`last_name`, ', ', `biblio_author1`.`first_name`), '') /* Author name */" => "author_name",
		"IF(    CHAR_LENGTH(`biblio_doc1`.`id`) || CHAR_LENGTH(`biblio_doc1`.`title`), CONCAT_WS('',   `biblio_doc1`.`id`, '    ', `biblio_doc1`.`title`), '') /* Bibliography */" => "bibliography",
		"IF(    CHAR_LENGTH(`biblio_transcript1`.`id`) || CHAR_LENGTH(`biblio_transcript1`.`transcript_title`), CONCAT_WS('',   `biblio_transcript1`.`id`, '   ', `biblio_transcript1`.`transcript_title`), '') /* Transcript */" => "transcript",
		"IF(    CHAR_LENGTH(`biblio_token1`.`id`) || CHAR_LENGTH(`biblio_token1`.`token_sequence`), CONCAT_WS('',   `biblio_token1`.`id`, '   ', `biblio_token1`.`token_sequence`), '') /* Token_sequence */" => "token_sequence",
		"IF(    CHAR_LENGTH(`biblio_token1`.`token`), CONCAT_WS('',   `biblio_token1`.`token`), '') /* Token */" => "token",
		"IF(    CHAR_LENGTH(`biblio_code_invivo1`.`invivo`), CONCAT_WS('',   `biblio_code_invivo1`.`invivo`), '') /* Invivo_code */" => "invivo_code",
		"IF(    CHAR_LENGTH(if(`biblio_code_invivo2`.`start_date`,date_format(`biblio_code_invivo2`.`start_date`,'%d/%m/%Y %H:%i'),'')) || CHAR_LENGTH(if(`biblio_code_invivo2`.`end_date`,date_format(`biblio_code_invivo2`.`end_date`,'%d/%m/%Y %H:%i'),'')), CONCAT_WS('',   if(`biblio_code_invivo2`.`start_date`,date_format(`biblio_code_invivo2`.`start_date`,'%d/%m/%Y %H:%i'),''), ' - ', if(`biblio_code_invivo2`.`end_date`,date_format(`biblio_code_invivo2`.`end_date`,'%d/%m/%Y %H:%i'),'')), '') /* Startdate */" => "startdate",
		"IF(    CHAR_LENGTH(if(`biblio_code_invivo1`.`end_date`,date_format(`biblio_code_invivo1`.`end_date`,'%d/%m/%Y %H:%i'),'')), CONCAT_WS('',   if(`biblio_code_invivo1`.`end_date`,date_format(`biblio_code_invivo1`.`end_date`,'%d/%m/%Y %H:%i'),'')), '') /* End_date */" => "enddate",
		"IF(    CHAR_LENGTH(`biblio_code_invivo1`.`person`), CONCAT_WS('',   `biblio_code_invivo1`.`person`), '') /* Person */" => "person",
		"IF(    CHAR_LENGTH(`biblio_code_invivo1`.`place`), CONCAT_WS('',   `biblio_code_invivo1`.`place`), '') /* Place */" => "place",
		"IF(    CHAR_LENGTH(`bio_code_herme1`.`hermeneutic`), CONCAT_WS('',   `bio_code_herme1`.`hermeneutic`), '') /* Herme_code */" => "herme_code",
		"IF(    CHAR_LENGTH(`class_im1`.`impression`), CONCAT_WS('',   `class_im1`.`impression`), '') /* Impression */" => "impression",
		"IF(    CHAR_LENGTH(`class_nt1`.`noetictension`), CONCAT_WS('',   `class_nt1`.`noetictension`), '') /* Noetictension */" => "noetictension",
		"IF(    CHAR_LENGTH(`class_pc1`.`perform_contrad`), CONCAT_WS('',   `class_pc1`.`perform_contrad`), '') /* Pc */" => "pc",
		"IF(    CHAR_LENGTH(`class_character_element1`.`element`) || CHAR_LENGTH(`class_character_element1`.`value`), CONCAT_WS('',   `class_character_element1`.`element`, '- ', `class_character_element1`.`value`), '') /* Chr element */" => "chr_element",
		"`chr_scenes_1`.`comment`" => "comment",
		"`chr_scenes_1`.`illustration`" => "illustration",
		"`chr_scenes_1`.`scene`" => "scene",
	];
	// mapping incoming sort by requests to actual query fields
	$x->SortFields = [
		1 => '`chr_scenes_1`.`id`',
		2 => 2,
		3 => 3,
		4 => 4,
		5 => 5,
		6 => 6,
		7 => '`biblio_token1`.`token`',
		8 => '`biblio_code_invivo1`.`invivo`',
		9 => 9,
		10 => 'date_format(`biblio_code_invivo1`.`end_date`,\'%d/%m/%Y %H:%i\')',
		11 => '`biblio_code_invivo1`.`person`',
		12 => '`biblio_code_invivo1`.`place`',
		13 => '`bio_code_herme1`.`hermeneutic`',
		14 => 14,
		15 => 15,
		16 => 16,
		17 => 17,
		18 => 18,
		19 => 19,
		20 => 20,
	];

	// Fields that can be displayed in the csv file
	$x->QueryFieldsCSV = [
		"`chr_scenes_1`.`id`" => "id",
		"IF(    CHAR_LENGTH(`biblio_author1`.`id`) || CHAR_LENGTH(`biblio_author1`.`id`), CONCAT_WS('',   `biblio_author1`.`id`, '    ', `biblio_author1`.`id`), '') /* Author */" => "author_id",
		"IF(    CHAR_LENGTH(`biblio_author1`.`last_name`) || CHAR_LENGTH(`biblio_author1`.`first_name`), CONCAT_WS('',   `biblio_author1`.`last_name`, ', ', `biblio_author1`.`first_name`), '') /* Author name */" => "author_name",
		"IF(    CHAR_LENGTH(`biblio_doc1`.`id`) || CHAR_LENGTH(`biblio_doc1`.`title`), CONCAT_WS('',   `biblio_doc1`.`id`, '    ', `biblio_doc1`.`title`), '') /* Bibliography */" => "bibliography",
		"IF(    CHAR_LENGTH(`biblio_transcript1`.`id`) || CHAR_LENGTH(`biblio_transcript1`.`transcript_title`), CONCAT_WS('',   `biblio_transcript1`.`id`, '   ', `biblio_transcript1`.`transcript_title`), '') /* Transcript */" => "transcript",
		"IF(    CHAR_LENGTH(`biblio_token1`.`id`) || CHAR_LENGTH(`biblio_token1`.`token_sequence`), CONCAT_WS('',   `biblio_token1`.`id`, '   ', `biblio_token1`.`token_sequence`), '') /* Token_sequence */" => "token_sequence",
		"IF(    CHAR_LENGTH(`biblio_token1`.`token`), CONCAT_WS('',   `biblio_token1`.`token`), '') /* Token */" => "token",
		"IF(    CHAR_LENGTH(`biblio_code_invivo1`.`invivo`), CONCAT_WS('',   `biblio_code_invivo1`.`invivo`), '') /* Invivo_code */" => "invivo_code",
		"IF(    CHAR_LENGTH(if(`biblio_code_invivo2`.`start_date`,date_format(`biblio_code_invivo2`.`start_date`,'%d/%m/%Y %H:%i'),'')) || CHAR_LENGTH(if(`biblio_code_invivo2`.`end_date`,date_format(`biblio_code_invivo2`.`end_date`,'%d/%m/%Y %H:%i'),'')), CONCAT_WS('',   if(`biblio_code_invivo2`.`start_date`,date_format(`biblio_code_invivo2`.`start_date`,'%d/%m/%Y %H:%i'),''), ' - ', if(`biblio_code_invivo2`.`end_date`,date_format(`biblio_code_invivo2`.`end_date`,'%d/%m/%Y %H:%i'),'')), '') /* Startdate */" => "startdate",
		"IF(    CHAR_LENGTH(if(`biblio_code_invivo1`.`end_date`,date_format(`biblio_code_invivo1`.`end_date`,'%d/%m/%Y %H:%i'),'')), CONCAT_WS('',   if(`biblio_code_invivo1`.`end_date`,date_format(`biblio_code_invivo1`.`end_date`,'%d/%m/%Y %H:%i'),'')), '') /* End_date */" => "enddate",
		"IF(    CHAR_LENGTH(`biblio_code_invivo1`.`person`), CONCAT_WS('',   `biblio_code_invivo1`.`person`), '') /* Person */" => "person",
		"IF(    CHAR_LENGTH(`biblio_code_invivo1`.`place`), CONCAT_WS('',   `biblio_code_invivo1`.`place`), '') /* Place */" => "place",
		"IF(    CHAR_LENGTH(`bio_code_herme1`.`hermeneutic`), CONCAT_WS('',   `bio_code_herme1`.`hermeneutic`), '') /* Herme_code */" => "herme_code",
		"IF(    CHAR_LENGTH(`class_im1`.`impression`), CONCAT_WS('',   `class_im1`.`impression`), '') /* Impression */" => "impression",
		"IF(    CHAR_LENGTH(`class_nt1`.`noetictension`), CONCAT_WS('',   `class_nt1`.`noetictension`), '') /* Noetictension */" => "noetictension",
		"IF(    CHAR_LENGTH(`class_pc1`.`perform_contrad`), CONCAT_WS('',   `class_pc1`.`perform_contrad`), '') /* Pc */" => "pc",
		"IF(    CHAR_LENGTH(`class_character_element1`.`element`) || CHAR_LENGTH(`class_character_element1`.`value`), CONCAT_WS('',   `class_character_element1`.`element`, '- ', `class_character_element1`.`value`), '') /* Chr element */" => "chr_element",
		"`chr_scenes_1`.`comment`" => "comment",
		"`chr_scenes_1`.`illustration`" => "illustration",
		"`chr_scenes_1`.`scene`" => "scene",
	];
	// Fields that can be filtered
	$x->QueryFieldsFilters = [
		"`chr_scenes_1`.`id`" => "ID",
		"IF(    CHAR_LENGTH(`biblio_author1`.`id`) || CHAR_LENGTH(`biblio_author1`.`id`), CONCAT_WS('',   `biblio_author1`.`id`, '    ', `biblio_author1`.`id`), '') /* Author */" => "Author",
		"IF(    CHAR_LENGTH(`biblio_author1`.`last_name`) || CHAR_LENGTH(`biblio_author1`.`first_name`), CONCAT_WS('',   `biblio_author1`.`last_name`, ', ', `biblio_author1`.`first_name`), '') /* Author name */" => "Author name",
		"IF(    CHAR_LENGTH(`biblio_doc1`.`id`) || CHAR_LENGTH(`biblio_doc1`.`title`), CONCAT_WS('',   `biblio_doc1`.`id`, '    ', `biblio_doc1`.`title`), '') /* Bibliography */" => "Bibliography",
		"IF(    CHAR_LENGTH(`biblio_transcript1`.`id`) || CHAR_LENGTH(`biblio_transcript1`.`transcript_title`), CONCAT_WS('',   `biblio_transcript1`.`id`, '   ', `biblio_transcript1`.`transcript_title`), '') /* Transcript */" => "Transcript",
		"IF(    CHAR_LENGTH(`biblio_token1`.`id`) || CHAR_LENGTH(`biblio_token1`.`token_sequence`), CONCAT_WS('',   `biblio_token1`.`id`, '   ', `biblio_token1`.`token_sequence`), '') /* Token_sequence */" => "Token_sequence",
		"IF(    CHAR_LENGTH(`biblio_token1`.`token`), CONCAT_WS('',   `biblio_token1`.`token`), '') /* Token */" => "Token",
		"IF(    CHAR_LENGTH(`biblio_code_invivo1`.`invivo`), CONCAT_WS('',   `biblio_code_invivo1`.`invivo`), '') /* Invivo_code */" => "Invivo_code",
		"IF(    CHAR_LENGTH(if(`biblio_code_invivo2`.`start_date`,date_format(`biblio_code_invivo2`.`start_date`,'%d/%m/%Y %H:%i'),'')) || CHAR_LENGTH(if(`biblio_code_invivo2`.`end_date`,date_format(`biblio_code_invivo2`.`end_date`,'%d/%m/%Y %H:%i'),'')), CONCAT_WS('',   if(`biblio_code_invivo2`.`start_date`,date_format(`biblio_code_invivo2`.`start_date`,'%d/%m/%Y %H:%i'),''), ' - ', if(`biblio_code_invivo2`.`end_date`,date_format(`biblio_code_invivo2`.`end_date`,'%d/%m/%Y %H:%i'),'')), '') /* Startdate */" => "Startdate",
		"IF(    CHAR_LENGTH(if(`biblio_code_invivo1`.`end_date`,date_format(`biblio_code_invivo1`.`end_date`,'%d/%m/%Y %H:%i'),'')), CONCAT_WS('',   if(`biblio_code_invivo1`.`end_date`,date_format(`biblio_code_invivo1`.`end_date`,'%d/%m/%Y %H:%i'),'')), '') /* End_date */" => "End_date",
		"IF(    CHAR_LENGTH(`biblio_code_invivo1`.`person`), CONCAT_WS('',   `biblio_code_invivo1`.`person`), '') /* Person */" => "Person",
		"IF(    CHAR_LENGTH(`biblio_code_invivo1`.`place`), CONCAT_WS('',   `biblio_code_invivo1`.`place`), '') /* Place */" => "Place",
		"IF(    CHAR_LENGTH(`bio_code_herme1`.`hermeneutic`), CONCAT_WS('',   `bio_code_herme1`.`hermeneutic`), '') /* Herme_code */" => "Herme_code",
		"IF(    CHAR_LENGTH(`class_im1`.`impression`), CONCAT_WS('',   `class_im1`.`impression`), '') /* Impression */" => "Impression",
		"IF(    CHAR_LENGTH(`class_nt1`.`noetictension`), CONCAT_WS('',   `class_nt1`.`noetictension`), '') /* Noetictension */" => "Noetictension",
		"IF(    CHAR_LENGTH(`class_pc1`.`perform_contrad`), CONCAT_WS('',   `class_pc1`.`perform_contrad`), '') /* Pc */" => "Pc",
		"IF(    CHAR_LENGTH(`class_character_element1`.`element`) || CHAR_LENGTH(`class_character_element1`.`value`), CONCAT_WS('',   `class_character_element1`.`element`, '- ', `class_character_element1`.`value`), '') /* Chr element */" => "Chr element",
		"`chr_scenes_1`.`comment`" => "Comment",
		"`chr_scenes_1`.`illustration`" => "Illustration",
		"`chr_scenes_1`.`scene`" => "Scene",
	];

	// Fields that can be quick searched
	$x->QueryFieldsQS = [
		"`chr_scenes_1`.`id`" => "id",
		"IF(    CHAR_LENGTH(`biblio_author1`.`id`) || CHAR_LENGTH(`biblio_author1`.`id`), CONCAT_WS('',   `biblio_author1`.`id`, '    ', `biblio_author1`.`id`), '') /* Author */" => "author_id",
		"IF(    CHAR_LENGTH(`biblio_author1`.`last_name`) || CHAR_LENGTH(`biblio_author1`.`first_name`), CONCAT_WS('',   `biblio_author1`.`last_name`, ', ', `biblio_author1`.`first_name`), '') /* Author name */" => "author_name",
		"IF(    CHAR_LENGTH(`biblio_doc1`.`id`) || CHAR_LENGTH(`biblio_doc1`.`title`), CONCAT_WS('',   `biblio_doc1`.`id`, '    ', `biblio_doc1`.`title`), '') /* Bibliography */" => "bibliography",
		"IF(    CHAR_LENGTH(`biblio_transcript1`.`id`) || CHAR_LENGTH(`biblio_transcript1`.`transcript_title`), CONCAT_WS('',   `biblio_transcript1`.`id`, '   ', `biblio_transcript1`.`transcript_title`), '') /* Transcript */" => "transcript",
		"IF(    CHAR_LENGTH(`biblio_token1`.`id`) || CHAR_LENGTH(`biblio_token1`.`token_sequence`), CONCAT_WS('',   `biblio_token1`.`id`, '   ', `biblio_token1`.`token_sequence`), '') /* Token_sequence */" => "token_sequence",
		"IF(    CHAR_LENGTH(`biblio_token1`.`token`), CONCAT_WS('',   `biblio_token1`.`token`), '') /* Token */" => "token",
		"IF(    CHAR_LENGTH(`biblio_code_invivo1`.`invivo`), CONCAT_WS('',   `biblio_code_invivo1`.`invivo`), '') /* Invivo_code */" => "invivo_code",
		"IF(    CHAR_LENGTH(if(`biblio_code_invivo2`.`start_date`,date_format(`biblio_code_invivo2`.`start_date`,'%d/%m/%Y %H:%i'),'')) || CHAR_LENGTH(if(`biblio_code_invivo2`.`end_date`,date_format(`biblio_code_invivo2`.`end_date`,'%d/%m/%Y %H:%i'),'')), CONCAT_WS('',   if(`biblio_code_invivo2`.`start_date`,date_format(`biblio_code_invivo2`.`start_date`,'%d/%m/%Y %H:%i'),''), ' - ', if(`biblio_code_invivo2`.`end_date`,date_format(`biblio_code_invivo2`.`end_date`,'%d/%m/%Y %H:%i'),'')), '') /* Startdate */" => "startdate",
		"IF(    CHAR_LENGTH(if(`biblio_code_invivo1`.`end_date`,date_format(`biblio_code_invivo1`.`end_date`,'%d/%m/%Y %H:%i'),'')), CONCAT_WS('',   if(`biblio_code_invivo1`.`end_date`,date_format(`biblio_code_invivo1`.`end_date`,'%d/%m/%Y %H:%i'),'')), '') /* End_date */" => "enddate",
		"IF(    CHAR_LENGTH(`biblio_code_invivo1`.`person`), CONCAT_WS('',   `biblio_code_invivo1`.`person`), '') /* Person */" => "person",
		"IF(    CHAR_LENGTH(`biblio_code_invivo1`.`place`), CONCAT_WS('',   `biblio_code_invivo1`.`place`), '') /* Place */" => "place",
		"IF(    CHAR_LENGTH(`bio_code_herme1`.`hermeneutic`), CONCAT_WS('',   `bio_code_herme1`.`hermeneutic`), '') /* Herme_code */" => "herme_code",
		"IF(    CHAR_LENGTH(`class_im1`.`impression`), CONCAT_WS('',   `class_im1`.`impression`), '') /* Impression */" => "impression",
		"IF(    CHAR_LENGTH(`class_nt1`.`noetictension`), CONCAT_WS('',   `class_nt1`.`noetictension`), '') /* Noetictension */" => "noetictension",
		"IF(    CHAR_LENGTH(`class_pc1`.`perform_contrad`), CONCAT_WS('',   `class_pc1`.`perform_contrad`), '') /* Pc */" => "pc",
		"IF(    CHAR_LENGTH(`class_character_element1`.`element`) || CHAR_LENGTH(`class_character_element1`.`value`), CONCAT_WS('',   `class_character_element1`.`element`, '- ', `class_character_element1`.`value`), '') /* Chr element */" => "chr_element",
		"`chr_scenes_1`.`comment`" => "comment",
		"`chr_scenes_1`.`illustration`" => "illustration",
		"`chr_scenes_1`.`scene`" => "scene",
	];

	// Lookup fields that can be used as filterers
	$x->filterers = ['author_id' => 'Author', 'bibliography' => 'Bibliography', 'transcript' => 'Transcript', 'token' => 'Token', 'invivo_code' => 'Invivo_code', 'startdate' => 'Startdate', 'herme_code' => 'Herme_code', 'chr_element' => 'Chr element', ];

	$x->QueryFrom = "`chr_scenes_1` LEFT JOIN `biblio_author` as biblio_author1 ON `biblio_author1`.`id`=`chr_scenes_1`.`author_id` LEFT JOIN `biblio_doc` as biblio_doc1 ON `biblio_doc1`.`id`=`chr_scenes_1`.`bibliography` LEFT JOIN `biblio_transcript` as biblio_transcript1 ON `biblio_transcript1`.`id`=`chr_scenes_1`.`transcript` LEFT JOIN `biblio_token` as biblio_token1 ON `biblio_token1`.`id`=`chr_scenes_1`.`token` LEFT JOIN `biblio_code_invivo` as biblio_code_invivo1 ON `biblio_code_invivo1`.`id`=`chr_scenes_1`.`invivo_code` LEFT JOIN `biblio_code_invivo` as biblio_code_invivo2 ON `biblio_code_invivo2`.`id`=`chr_scenes_1`.`startdate` LEFT JOIN `bio_code_herme` as bio_code_herme1 ON `bio_code_herme1`.`id`=`chr_scenes_1`.`herme_code` LEFT JOIN `class_character_element` as class_character_element1 ON `class_character_element1`.`id`=`chr_scenes_1`.`chr_element` LEFT JOIN `class_im` as class_im1 ON `class_im1`.`id`=`bio_code_herme1`.`impression` LEFT JOIN `class_nt` as class_nt1 ON `class_nt1`.`id`=`bio_code_herme1`.`noetictension` LEFT JOIN `class_pc` as class_pc1 ON `class_pc1`.`id`=`bio_code_herme1`.`pc` ";
	$x->QueryWhere = '';
	$x->QueryOrder = '';

	$x->AllowSelection = 1;
	$x->HideTableView = ($perm['view'] == 0 ? 1 : 0);
	$x->AllowDelete = $perm['delete'];
	$x->AllowMassDelete = (getLoggedAdmin() !== false);
	$x->AllowInsert = $perm['insert'];
	$x->AllowUpdate = $perm['edit'];
	$x->SeparateDV = 1;
	$x->AllowDeleteOfParents = 0;
	$x->AllowFilters = 1;
	$x->AllowSavingFilters = 1;
	$x->AllowSorting = 1;
	$x->AllowNavigation = 1;
	$x->AllowPrinting = 1;
	$x->AllowPrintingDV = 1;
	$x->AllowCSV = 1;
	$x->RecordsPerPage = 10;
	$x->QuickSearch = 1;
	$x->QuickSearchText = $Translation['quick search'];
	$x->ScriptFileName = 'chr_scenes_1_view.php';
	$x->RedirectAfterInsert = 'chr_scenes_1_view.php?SelectedID=#ID#';
	$x->TableTitle = 'IV.2. Character scenes';
	$x->TableIcon = 'resources/table_icons/camera.png';
	$x->PrimaryKey = '`chr_scenes_1`.`id`';

	$x->ColWidth = [150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, ];
	$x->ColCaption = ['ID', 'Author', 'Author name', 'Bibliography', 'Transcript', 'Token_sequence', 'Token', 'Invivo_code', 'Startdate', 'End_date', 'Person', 'Place', 'Herme_code', 'Impression', 'Noetictension', 'Pc', 'Chr element', 'Comment', 'Illustration', 'Scene', ];
	$x->ColFieldName = ['id', 'author_id', 'author_name', 'bibliography', 'transcript', 'token_sequence', 'token', 'invivo_code', 'startdate', 'enddate', 'person', 'place', 'herme_code', 'impression', 'noetictension', 'pc', 'chr_element', 'comment', 'illustration', 'scene', ];
	$x->ColNumber  = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, ];

	// template paths below are based on the app main directory
	$x->Template = 'templates/chr_scenes_1_templateTV.html';
	$x->SelectedTemplate = 'templates/chr_scenes_1_templateTVS.html';
	$x->TemplateDV = 'templates/chr_scenes_1_templateDV.html';
	$x->TemplateDVP = 'templates/chr_scenes_1_templateDVP.html';

	$x->ShowTableHeader = 1;
	$x->TVClasses = "";
	$x->DVClasses = "";
	$x->HasCalculatedFields = false;
	$x->AllowConsoleLog = false;
	$x->AllowDVNavigation = true;

	// mm: build the query based on current member's permissions
	$DisplayRecords = $_REQUEST['DisplayRecords'];
	if(!in_array($DisplayRecords, ['user', 'group'])) { $DisplayRecords = 'all'; }
	if($perm['view'] == 1 || ($perm['view'] > 1 && $DisplayRecords == 'user' && !$_REQUEST['NoFilter_x'])) { // view owner only
		$x->QueryFrom .= ', `membership_userrecords`';
		$x->QueryWhere = "WHERE `chr_scenes_1`.`id`=`membership_userrecords`.`pkValue` AND `membership_userrecords`.`tableName`='chr_scenes_1' AND LCASE(`membership_userrecords`.`memberID`)='" . getLoggedMemberID() . "'";
	} elseif($perm['view'] == 2 || ($perm['view'] > 2 && $DisplayRecords == 'group' && !$_REQUEST['NoFilter_x'])) { // view group only
		$x->QueryFrom .= ', `membership_userrecords`';
		$x->QueryWhere = "WHERE `chr_scenes_1`.`id`=`membership_userrecords`.`pkValue` AND `membership_userrecords`.`tableName`='chr_scenes_1' AND `membership_userrecords`.`groupID`='" . getLoggedGroupID() . "'";
	} elseif($perm['view'] == 3) { // view all
		// no further action
	} elseif($perm['view'] == 0) { // view none
		$x->QueryFields = ['Not enough permissions' => 'NEP'];
		$x->QueryFrom = '`chr_scenes_1`';
		$x->QueryWhere = '';
		$x->DefaultSortField = '';
	}
	// hook: chr_scenes_1_init
	$render = true;
	if(function_exists('chr_scenes_1_init')) {
		$args = [];
		$render = chr_scenes_1_init($x, getMemberInfo(), $args);
	}

	if($render) $x->Render();

	// hook: chr_scenes_1_header
	$headerCode = '';
	if(function_exists('chr_scenes_1_header')) {
		$args = [];
		$headerCode = chr_scenes_1_header($x->ContentType, getMemberInfo(), $args);
	}

	if(!$headerCode) {
		include_once("{$currDir}/header.php"); 
	} else {
		ob_start();
		include_once("{$currDir}/header.php");
		echo str_replace('<%%HEADER%%>', ob_get_clean(), $headerCode);
	}

	echo $x->HTML;

	// hook: chr_scenes_1_footer
	$footerCode = '';
	if(function_exists('chr_scenes_1_footer')) {
		$args = [];
		$footerCode = chr_scenes_1_footer($x->ContentType, getMemberInfo(), $args);
	}

	if(!$footerCode) {
		include_once("{$currDir}/footer.php"); 
	} else {
		ob_start();
		include_once("{$currDir}/footer.php");
		echo str_replace('<%%FOOTER%%>', ob_get_clean(), $footerCode);
	}
