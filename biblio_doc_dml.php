<?php

// Data functions (insert, update, delete, form) for table biblio_doc

// This script and data application were generated by AppGini 5.76
// Download AppGini for free from https://bigprof.com/appgini/download/

function biblio_doc_insert(){
	global $Translation;

	// mm: can member insert record?
	$arrPerm=getTablePermissions('biblio_doc');
	if(!$arrPerm[1]){
		return false;
	}

	$data['author_name'] = makeSafe($_REQUEST['author_id']);
		if($data['author_name'] == empty_lookup_value){ $data['author_name'] = ''; }
	$data['author_id'] = makeSafe($_REQUEST['author_id']);
		if($data['author_id'] == empty_lookup_value){ $data['author_id'] = ''; }
	$data['type'] = makeSafe($_REQUEST['type']);
		if($data['type'] == empty_lookup_value){ $data['type'] = ''; }
	$data['genre'] = makeSafe($_REQUEST['genre']);
		if($data['genre'] == empty_lookup_value){ $data['genre'] = ''; }
	$data['created'] = mysql_datetime($_REQUEST['created']);
		if($data['created'] == empty_lookup_value){ $data['created'] = ''; }
	$data['published'] = mysql_datetime($_REQUEST['published']);
		if($data['published'] == empty_lookup_value){ $data['published'] = ''; }
	$data['title'] = makeSafe($_REQUEST['title']);
		if($data['title'] == empty_lookup_value){ $data['title'] = ''; }
	$data['subtitle'] = makeSafe($_REQUEST['subtitle']);
		if($data['subtitle'] == empty_lookup_value){ $data['subtitle'] = ''; }
	$data['publisher'] = makeSafe($_REQUEST['publisher']);
		if($data['publisher'] == empty_lookup_value){ $data['publisher'] = ''; }
	$data['location'] = makeSafe($_REQUEST['location']);
		if($data['location'] == empty_lookup_value){ $data['location'] = ''; }
	$data['citation'] = makeSafe($_REQUEST['citation']);
		if($data['citation'] == empty_lookup_value){ $data['citation'] = ''; }
	$data['description'] = makeSafe($_REQUEST['description']);
		if($data['description'] == empty_lookup_value){ $data['description'] = ''; }
	$data['source'] = makeSafe($_REQUEST['source']);
		if($data['source'] == empty_lookup_value){ $data['source'] = ''; }
	$data['medium'] = makeSafe($_REQUEST['medium']);
		if($data['medium'] == empty_lookup_value){ $data['medium'] = ''; }
	$data['language'] = makeSafe($_REQUEST['language']);
		if($data['language'] == empty_lookup_value){ $data['language'] = ''; }
	$data['format'] = makeSafe($_REQUEST['format']);
		if($data['format'] == empty_lookup_value){ $data['format'] = ''; }
	$data['subject'] = makeSafe($_REQUEST['subject']);
		if($data['subject'] == empty_lookup_value){ $data['subject'] = ''; }
	$data['rights'] = makeSafe($_REQUEST['rights']);
		if($data['rights'] == empty_lookup_value){ $data['rights'] = ''; }
	$data['rights_holder'] = makeSafe($_REQUEST['rights_holder']);
		if($data['rights_holder'] == empty_lookup_value){ $data['rights_holder'] = ''; }
	$data['data_evaluation'] = makeSafe($_REQUEST['data_evaluation']);
		if($data['data_evaluation'] == empty_lookup_value){ $data['data_evaluation'] = ''; }
	$data['authority_record'] = makeSafe($_REQUEST['authority_record']);
		if($data['authority_record'] == empty_lookup_value){ $data['authority_record'] = ''; }
	$data['authority_organization'] = makeSafe($_REQUEST['authority_organization']);
		if($data['authority_organization'] == empty_lookup_value){ $data['authority_organization'] = ''; }
	$data['ext_source'] = makeSafe($_REQUEST['ext_source']);
		if($data['ext_source'] == empty_lookup_value){ $data['ext_source'] = ''; }
	$data['img'] = PrepareUploadedFile('img', 102400,'jpg|jpeg|gif|png', false, '');
	if($data['img']) createThumbnail($data['img'], getThumbnailSpecs('biblio_doc', 'img', 'tv'));
	if($data['img']) createThumbnail($data['img'], getThumbnailSpecs('biblio_doc', 'img', 'dv'));
	$data['pdf_book'] = PrepareUploadedFile('pdf_book', 10240000,'txt|doc|docx|docm|odt|pdf|rtf', false, '');
	if($data['author_id']== ''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">" . $Translation['error:'] . " 'Author_id': " . $Translation['field not null'] . '<br><br>';
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	if($data['title']== ''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">" . $Translation['error:'] . " 'Title': " . $Translation['field not null'] . '<br><br>';
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}

	/* for empty upload fields, when saving a copy of an existing record, copy the original upload field */
	if($_REQUEST['SelectedID']){
		$res = sql("select * from biblio_doc where id='" . makeSafe($_REQUEST['SelectedID']) . "'", $eo);
		if($row = db_fetch_assoc($res)){
			if(!$data['img']) $data['img'] = makeSafe($row['img']);
			if(!$data['pdf_book']) $data['pdf_book'] = makeSafe($row['pdf_book']);
		}
	}

	// hook: biblio_doc_before_insert
	if(function_exists('biblio_doc_before_insert')){
		$args=array();
		if(!biblio_doc_before_insert($data, getMemberInfo(), $args)){ return false; }
	}

	$o = array('silentErrors' => true);
	sql('insert into `biblio_doc` set       ' . ($data['img'] != '' ? "`img`='{$data['img']}'" : '`img`=NULL') . ', `author_name`=' . (($data['author_name'] !== '' && $data['author_name'] !== NULL) ? "'{$data['author_name']}'" : 'NULL') . ', `author_id`=' . (($data['author_id'] !== '' && $data['author_id'] !== NULL) ? "'{$data['author_id']}'" : 'NULL') . ', `type`=' . (($data['type'] !== '' && $data['type'] !== NULL) ? "'{$data['type']}'" : 'NULL') . ', `genre`=' . (($data['genre'] !== '' && $data['genre'] !== NULL) ? "'{$data['genre']}'" : 'NULL') . ', `created`=' . (($data['created'] !== '' && $data['created'] !== NULL) ? "'{$data['created']}'" : 'NULL') . ', `published`=' . (($data['published'] !== '' && $data['published'] !== NULL) ? "'{$data['published']}'" : 'NULL') . ', `title`=' . (($data['title'] !== '' && $data['title'] !== NULL) ? "'{$data['title']}'" : 'NULL') . ', `subtitle`=' . (($data['subtitle'] !== '' && $data['subtitle'] !== NULL) ? "'{$data['subtitle']}'" : 'NULL') . ', `publisher`=' . (($data['publisher'] !== '' && $data['publisher'] !== NULL) ? "'{$data['publisher']}'" : 'NULL') . ', `location`=' . (($data['location'] !== '' && $data['location'] !== NULL) ? "'{$data['location']}'" : 'NULL') . ', `citation`=' . (($data['citation'] !== '' && $data['citation'] !== NULL) ? "'{$data['citation']}'" : 'NULL') . ', `description`=' . (($data['description'] !== '' && $data['description'] !== NULL) ? "'{$data['description']}'" : 'NULL') . ', `source`=' . (($data['source'] !== '' && $data['source'] !== NULL) ? "'{$data['source']}'" : 'NULL') . ', `medium`=' . (($data['medium'] !== '' && $data['medium'] !== NULL) ? "'{$data['medium']}'" : 'NULL') . ', `language`=' . (($data['language'] !== '' && $data['language'] !== NULL) ? "'{$data['language']}'" : 'NULL') . ', `format`=' . (($data['format'] !== '' && $data['format'] !== NULL) ? "'{$data['format']}'" : 'NULL') . ', `subject`=' . (($data['subject'] !== '' && $data['subject'] !== NULL) ? "'{$data['subject']}'" : 'NULL') . ', `rights`=' . (($data['rights'] !== '' && $data['rights'] !== NULL) ? "'{$data['rights']}'" : 'NULL') . ', `rights_holder`=' . (($data['rights_holder'] !== '' && $data['rights_holder'] !== NULL) ? "'{$data['rights_holder']}'" : 'NULL') . ', `data_evaluation`=' . (($data['data_evaluation'] !== '' && $data['data_evaluation'] !== NULL) ? "'{$data['data_evaluation']}'" : 'NULL') . ', `authority_record`=' . (($data['authority_record'] !== '' && $data['authority_record'] !== NULL) ? "'{$data['authority_record']}'" : 'NULL') . ', `authority_organization`=' . (($data['authority_organization'] !== '' && $data['authority_organization'] !== NULL) ? "'{$data['authority_organization']}'" : 'NULL') . ', ' . ($data['pdf_book'] != '' ? "`pdf_book`='{$data['pdf_book']}'" : '`pdf_book`=NULL') . ', `ext_source`=' . (($data['ext_source'] !== '' && $data['ext_source'] !== NULL) ? "'{$data['ext_source']}'" : 'NULL'), $o);
	if($o['error']!=''){
		echo $o['error'];
		echo "<a href=\"biblio_doc_view.php?addNew_x=1\">{$Translation['< back']}</a>";
		exit;
	}

	$recID = db_insert_id(db_link());

	// hook: biblio_doc_after_insert
	if(function_exists('biblio_doc_after_insert')){
		$res = sql("select * from `biblio_doc` where `id`='" . makeSafe($recID, false) . "' limit 1", $eo);
		if($row = db_fetch_assoc($res)){
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = makeSafe($recID, false);
		$args=array();
		if(!biblio_doc_after_insert($data, getMemberInfo(), $args)){ return $recID; }
	}

	// mm: save ownership data
	set_record_owner('biblio_doc', $recID, getLoggedMemberID());

	return $recID;
}

function biblio_doc_delete($selected_id, $AllowDeleteOfParents=false, $skipChecks=false){
	// insure referential integrity ...
	global $Translation;
	$selected_id=makeSafe($selected_id);

	// mm: can member delete record?
	$arrPerm=getTablePermissions('biblio_doc');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='biblio_doc' and pkValue='$selected_id'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='biblio_doc' and pkValue='$selected_id'");
	if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3){ // allow delete?
		// delete allowed, so continue ...
	}else{
		return $Translation['You don\'t have enough permissions to delete this record'];
	}

	// hook: biblio_doc_before_delete
	if(function_exists('biblio_doc_before_delete')){
		$args=array();
		if(!biblio_doc_before_delete($selected_id, $skipChecks, getMemberInfo(), $args))
			return $Translation['Couldn\'t delete this record'];
	}

	// child table: biblio_transcript
	$res = sql("select `id` from `biblio_doc` where `id`='$selected_id'", $eo);
	$id = db_fetch_row($res);
	$rires = sql("select count(1) from `biblio_transcript` where `bibliography_title`='".addslashes($id[0])."'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "biblio_transcript", $RetMsg);
		return $RetMsg;
	}elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["confirm delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "biblio_transcript", $RetMsg);
		$RetMsg = str_replace("<Delete>", "<input type=\"button\" class=\"button\" value=\"".$Translation['yes']."\" onClick=\"window.location='biblio_doc_view.php?SelectedID=".urlencode($selected_id)."&delete_x=1&confirmed=1';\">", $RetMsg);
		$RetMsg = str_replace("<Cancel>", "<input type=\"button\" class=\"button\" value=\"".$Translation['no']."\" onClick=\"window.location='biblio_doc_view.php?SelectedID=".urlencode($selected_id)."';\">", $RetMsg);
		return $RetMsg;
	}

	// child table: biblio_token
	$res = sql("select `id` from `biblio_doc` where `id`='$selected_id'", $eo);
	$id = db_fetch_row($res);
	$rires = sql("select count(1) from `biblio_token` where `bibliography`='".addslashes($id[0])."'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "biblio_token", $RetMsg);
		return $RetMsg;
	}elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["confirm delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "biblio_token", $RetMsg);
		$RetMsg = str_replace("<Delete>", "<input type=\"button\" class=\"button\" value=\"".$Translation['yes']."\" onClick=\"window.location='biblio_doc_view.php?SelectedID=".urlencode($selected_id)."&delete_x=1&confirmed=1';\">", $RetMsg);
		$RetMsg = str_replace("<Cancel>", "<input type=\"button\" class=\"button\" value=\"".$Translation['no']."\" onClick=\"window.location='biblio_doc_view.php?SelectedID=".urlencode($selected_id)."';\">", $RetMsg);
		return $RetMsg;
	}

	// child table: code_invivo
	$res = sql("select `id` from `biblio_doc` where `id`='$selected_id'", $eo);
	$id = db_fetch_row($res);
	$rires = sql("select count(1) from `code_invivo` where `bibliography`='".addslashes($id[0])."'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "code_invivo", $RetMsg);
		return $RetMsg;
	}elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["confirm delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "code_invivo", $RetMsg);
		$RetMsg = str_replace("<Delete>", "<input type=\"button\" class=\"button\" value=\"".$Translation['yes']."\" onClick=\"window.location='biblio_doc_view.php?SelectedID=".urlencode($selected_id)."&delete_x=1&confirmed=1';\">", $RetMsg);
		$RetMsg = str_replace("<Cancel>", "<input type=\"button\" class=\"button\" value=\"".$Translation['no']."\" onClick=\"window.location='biblio_doc_view.php?SelectedID=".urlencode($selected_id)."';\">", $RetMsg);
		return $RetMsg;
	}

	// child table: code_herme
	$res = sql("select `id` from `biblio_doc` where `id`='$selected_id'", $eo);
	$id = db_fetch_row($res);
	$rires = sql("select count(1) from `code_herme` where `bibliography`='".addslashes($id[0])."'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "code_herme", $RetMsg);
		return $RetMsg;
	}elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["confirm delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "code_herme", $RetMsg);
		$RetMsg = str_replace("<Delete>", "<input type=\"button\" class=\"button\" value=\"".$Translation['yes']."\" onClick=\"window.location='biblio_doc_view.php?SelectedID=".urlencode($selected_id)."&delete_x=1&confirmed=1';\">", $RetMsg);
		$RetMsg = str_replace("<Cancel>", "<input type=\"button\" class=\"button\" value=\"".$Translation['no']."\" onClick=\"window.location='biblio_doc_view.php?SelectedID=".urlencode($selected_id)."';\">", $RetMsg);
		return $RetMsg;
	}

	// child table: chr_scenes
	$res = sql("select `id` from `biblio_doc` where `id`='$selected_id'", $eo);
	$id = db_fetch_row($res);
	$rires = sql("select count(1) from `chr_scenes` where `bibliography`='".addslashes($id[0])."'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "chr_scenes", $RetMsg);
		return $RetMsg;
	}elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["confirm delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "chr_scenes", $RetMsg);
		$RetMsg = str_replace("<Delete>", "<input type=\"button\" class=\"button\" value=\"".$Translation['yes']."\" onClick=\"window.location='biblio_doc_view.php?SelectedID=".urlencode($selected_id)."&delete_x=1&confirmed=1';\">", $RetMsg);
		$RetMsg = str_replace("<Cancel>", "<input type=\"button\" class=\"button\" value=\"".$Translation['no']."\" onClick=\"window.location='biblio_doc_view.php?SelectedID=".urlencode($selected_id)."';\">", $RetMsg);
		return $RetMsg;
	}

	// child table: code_encounters
	$res = sql("select `id` from `biblio_doc` where `id`='$selected_id'", $eo);
	$id = db_fetch_row($res);
	$rires = sql("select count(1) from `code_encounters` where `bibliographyA`='".addslashes($id[0])."'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "code_encounters", $RetMsg);
		return $RetMsg;
	}elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["confirm delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "code_encounters", $RetMsg);
		$RetMsg = str_replace("<Delete>", "<input type=\"button\" class=\"button\" value=\"".$Translation['yes']."\" onClick=\"window.location='biblio_doc_view.php?SelectedID=".urlencode($selected_id)."&delete_x=1&confirmed=1';\">", $RetMsg);
		$RetMsg = str_replace("<Cancel>", "<input type=\"button\" class=\"button\" value=\"".$Translation['no']."\" onClick=\"window.location='biblio_doc_view.php?SelectedID=".urlencode($selected_id)."';\">", $RetMsg);
		return $RetMsg;
	}

	// child table: code_encounters
	$res = sql("select `id` from `biblio_doc` where `id`='$selected_id'", $eo);
	$id = db_fetch_row($res);
	$rires = sql("select count(1) from `code_encounters` where `bibliographyB`='".addslashes($id[0])."'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "code_encounters", $RetMsg);
		return $RetMsg;
	}elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["confirm delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "code_encounters", $RetMsg);
		$RetMsg = str_replace("<Delete>", "<input type=\"button\" class=\"button\" value=\"".$Translation['yes']."\" onClick=\"window.location='biblio_doc_view.php?SelectedID=".urlencode($selected_id)."&delete_x=1&confirmed=1';\">", $RetMsg);
		$RetMsg = str_replace("<Cancel>", "<input type=\"button\" class=\"button\" value=\"".$Translation['no']."\" onClick=\"window.location='biblio_doc_view.php?SelectedID=".urlencode($selected_id)."';\">", $RetMsg);
		return $RetMsg;
	}

	// delete file stored in the 'pdf_book' field
	$res = sql("select `pdf_book` from `biblio_doc` where `id`='$selected_id'", $eo);
	if($row=@db_fetch_row($res)){
		if($row[0]!=''){
			@unlink(getUploadDir('').$row[0]);
		}
	}

	sql("delete from `biblio_doc` where `id`='$selected_id'", $eo);

	// hook: biblio_doc_after_delete
	if(function_exists('biblio_doc_after_delete')){
		$args=array();
		biblio_doc_after_delete($selected_id, getMemberInfo(), $args);
	}

	// mm: delete ownership data
	sql("delete from membership_userrecords where tableName='biblio_doc' and pkValue='$selected_id'", $eo);
}

function biblio_doc_update($selected_id){
	global $Translation;

	// mm: can member edit record?
	$arrPerm=getTablePermissions('biblio_doc');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='biblio_doc' and pkValue='".makeSafe($selected_id)."'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='biblio_doc' and pkValue='".makeSafe($selected_id)."'");
	if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3){ // allow update?
		// update allowed, so continue ...
	}else{
		return false;
	}

	$data['author_name'] = makeSafe($_REQUEST['author_id']);
		if($data['author_name'] == empty_lookup_value){ $data['author_name'] = ''; }
	$data['author_id'] = makeSafe($_REQUEST['author_id']);
		if($data['author_id'] == empty_lookup_value){ $data['author_id'] = ''; }
	if($data['author_id']==''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Author_id': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	$data['type'] = makeSafe($_REQUEST['type']);
		if($data['type'] == empty_lookup_value){ $data['type'] = ''; }
	$data['genre'] = makeSafe($_REQUEST['genre']);
		if($data['genre'] == empty_lookup_value){ $data['genre'] = ''; }
	$data['created'] = mysql_datetime($_REQUEST['created']);
		if($data['created'] == empty_lookup_value){ $data['created'] = ''; }
	$data['published'] = mysql_datetime($_REQUEST['published']);
		if($data['published'] == empty_lookup_value){ $data['published'] = ''; }
	$data['title'] = makeSafe($_REQUEST['title']);
		if($data['title'] == empty_lookup_value){ $data['title'] = ''; }
	if($data['title']==''){
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Title': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">'.$Translation['< back'].'</a></div>';
		exit;
	}
	$data['subtitle'] = makeSafe($_REQUEST['subtitle']);
		if($data['subtitle'] == empty_lookup_value){ $data['subtitle'] = ''; }
	$data['publisher'] = makeSafe($_REQUEST['publisher']);
		if($data['publisher'] == empty_lookup_value){ $data['publisher'] = ''; }
	$data['location'] = makeSafe($_REQUEST['location']);
		if($data['location'] == empty_lookup_value){ $data['location'] = ''; }
	$data['citation'] = makeSafe($_REQUEST['citation']);
		if($data['citation'] == empty_lookup_value){ $data['citation'] = ''; }
	$data['description'] = makeSafe($_REQUEST['description']);
		if($data['description'] == empty_lookup_value){ $data['description'] = ''; }
	$data['source'] = makeSafe($_REQUEST['source']);
		if($data['source'] == empty_lookup_value){ $data['source'] = ''; }
	$data['medium'] = makeSafe($_REQUEST['medium']);
		if($data['medium'] == empty_lookup_value){ $data['medium'] = ''; }
	$data['language'] = makeSafe($_REQUEST['language']);
		if($data['language'] == empty_lookup_value){ $data['language'] = ''; }
	$data['format'] = makeSafe($_REQUEST['format']);
		if($data['format'] == empty_lookup_value){ $data['format'] = ''; }
	$data['subject'] = makeSafe($_REQUEST['subject']);
		if($data['subject'] == empty_lookup_value){ $data['subject'] = ''; }
	$data['rights'] = makeSafe($_REQUEST['rights']);
		if($data['rights'] == empty_lookup_value){ $data['rights'] = ''; }
	$data['rights_holder'] = makeSafe($_REQUEST['rights_holder']);
		if($data['rights_holder'] == empty_lookup_value){ $data['rights_holder'] = ''; }
	$data['data_evaluation'] = makeSafe($_REQUEST['data_evaluation']);
		if($data['data_evaluation'] == empty_lookup_value){ $data['data_evaluation'] = ''; }
	$data['authority_record'] = makeSafe($_REQUEST['authority_record']);
		if($data['authority_record'] == empty_lookup_value){ $data['authority_record'] = ''; }
	$data['authority_organization'] = makeSafe($_REQUEST['authority_organization']);
		if($data['authority_organization'] == empty_lookup_value){ $data['authority_organization'] = ''; }
	$data['ext_source'] = makeSafe($_REQUEST['ext_source']);
		if($data['ext_source'] == empty_lookup_value){ $data['ext_source'] = ''; }
	$data['selectedID']=makeSafe($selected_id);
	if($_REQUEST['img_remove'] == 1){
		$data['img'] = '';
	}else{
		$data['img'] = PrepareUploadedFile('img', 102400, 'jpg|jpeg|gif|png', false, "");
		if($data['img']) createThumbnail($data['img'], getThumbnailSpecs('biblio_doc', 'img', 'tv'));
		if($data['img']) createThumbnail($data['img'], getThumbnailSpecs('biblio_doc', 'img', 'dv'));
	}
	if($_REQUEST['pdf_book_remove'] == 1){
		$data['pdf_book'] = '';
		// delete file from server
		$res = sql("select `pdf_book` from `biblio_doc` where `id`='".makeSafe($selected_id)."'", $eo);
		if($row=@db_fetch_row($res)){
			if($row[0]!=''){
				@unlink(getUploadDir('').$row[0]);
			}
		}
	}else{
		$data['pdf_book'] = PrepareUploadedFile('pdf_book', 10240000, 'txt|doc|docx|docm|odt|pdf|rtf', false, "");
		// delete file from server
		if($data['pdf_book'] != ''){
			$res = sql("select `pdf_book` from `biblio_doc` where `id`='".makeSafe($selected_id)."'", $eo);
			if($row=@db_fetch_row($res)){
				if($row[0]!=''){
					@unlink(getUploadDir('').$row[0]);
				}
			}
		}
	}

	// hook: biblio_doc_before_update
	if(function_exists('biblio_doc_before_update')){
		$args=array();
		if(!biblio_doc_before_update($data, getMemberInfo(), $args)){ return false; }
	}

	$o=array('silentErrors' => true);
	sql('update `biblio_doc` set       ' . ($data['img']!='' ? "`img`='{$data['img']}'" : ($_REQUEST['img_remove'] != 1 ? '`img`=`img`' : '`img`=NULL')) . ', `author_name`=' . (($data['author_name'] !== '' && $data['author_name'] !== NULL) ? "'{$data['author_name']}'" : 'NULL') . ', `author_id`=' . (($data['author_id'] !== '' && $data['author_id'] !== NULL) ? "'{$data['author_id']}'" : 'NULL') . ', `type`=' . (($data['type'] !== '' && $data['type'] !== NULL) ? "'{$data['type']}'" : 'NULL') . ', `genre`=' . (($data['genre'] !== '' && $data['genre'] !== NULL) ? "'{$data['genre']}'" : 'NULL') . ', `created`=' . (($data['created'] !== '' && $data['created'] !== NULL) ? "'{$data['created']}'" : 'NULL') . ', `published`=' . (($data['published'] !== '' && $data['published'] !== NULL) ? "'{$data['published']}'" : 'NULL') . ', `title`=' . (($data['title'] !== '' && $data['title'] !== NULL) ? "'{$data['title']}'" : 'NULL') . ', `subtitle`=' . (($data['subtitle'] !== '' && $data['subtitle'] !== NULL) ? "'{$data['subtitle']}'" : 'NULL') . ', `publisher`=' . (($data['publisher'] !== '' && $data['publisher'] !== NULL) ? "'{$data['publisher']}'" : 'NULL') . ', `location`=' . (($data['location'] !== '' && $data['location'] !== NULL) ? "'{$data['location']}'" : 'NULL') . ', `citation`=' . (($data['citation'] !== '' && $data['citation'] !== NULL) ? "'{$data['citation']}'" : 'NULL') . ', `description`=' . (($data['description'] !== '' && $data['description'] !== NULL) ? "'{$data['description']}'" : 'NULL') . ', `source`=' . (($data['source'] !== '' && $data['source'] !== NULL) ? "'{$data['source']}'" : 'NULL') . ', `medium`=' . (($data['medium'] !== '' && $data['medium'] !== NULL) ? "'{$data['medium']}'" : 'NULL') . ', `language`=' . (($data['language'] !== '' && $data['language'] !== NULL) ? "'{$data['language']}'" : 'NULL') . ', `format`=' . (($data['format'] !== '' && $data['format'] !== NULL) ? "'{$data['format']}'" : 'NULL') . ', `subject`=' . (($data['subject'] !== '' && $data['subject'] !== NULL) ? "'{$data['subject']}'" : 'NULL') . ', `rights`=' . (($data['rights'] !== '' && $data['rights'] !== NULL) ? "'{$data['rights']}'" : 'NULL') . ', `rights_holder`=' . (($data['rights_holder'] !== '' && $data['rights_holder'] !== NULL) ? "'{$data['rights_holder']}'" : 'NULL') . ', `data_evaluation`=' . (($data['data_evaluation'] !== '' && $data['data_evaluation'] !== NULL) ? "'{$data['data_evaluation']}'" : 'NULL') . ', `authority_record`=' . (($data['authority_record'] !== '' && $data['authority_record'] !== NULL) ? "'{$data['authority_record']}'" : 'NULL') . ', `authority_organization`=' . (($data['authority_organization'] !== '' && $data['authority_organization'] !== NULL) ? "'{$data['authority_organization']}'" : 'NULL') . ', ' . ($data['pdf_book']!='' ? "`pdf_book`='{$data['pdf_book']}'" : ($_REQUEST['pdf_book_remove'] != 1 ? '`pdf_book`=`pdf_book`' : '`pdf_book`=NULL')) . ', `ext_source`=' . (($data['ext_source'] !== '' && $data['ext_source'] !== NULL) ? "'{$data['ext_source']}'" : 'NULL') . " where `id`='".makeSafe($selected_id)."'", $o);
	if($o['error']!=''){
		echo $o['error'];
		echo '<a href="biblio_doc_view.php?SelectedID='.urlencode($selected_id)."\">{$Translation['< back']}</a>";
		exit;
	}


	// hook: biblio_doc_after_update
	if(function_exists('biblio_doc_after_update')){
		$res = sql("SELECT * FROM `biblio_doc` WHERE `id`='{$data['selectedID']}' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)){
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = $data['id'];
		$args = array();
		if(!biblio_doc_after_update($data, getMemberInfo(), $args)){ return; }
	}

	// mm: update ownership data
	sql("update membership_userrecords set dateUpdated='".time()."' where tableName='biblio_doc' and pkValue='".makeSafe($selected_id)."'", $eo);

}

function biblio_doc_form($selected_id = '', $AllowUpdate = 1, $AllowInsert = 1, $AllowDelete = 1, $ShowCancel = 0, $TemplateDV = '', $TemplateDVP = ''){
	// function to return an editable form for a table records
	// and fill it with data of record whose ID is $selected_id. If $selected_id
	// is empty, an empty form is shown, with only an 'Add New'
	// button displayed.

	global $Translation;

	// mm: get table permissions
	$arrPerm=getTablePermissions('biblio_doc');
	if(!$arrPerm[1] && $selected_id==''){ return ''; }
	$AllowInsert = ($arrPerm[1] ? true : false);
	// print preview?
	$dvprint = false;
	if($selected_id && $_REQUEST['dvprint_x'] != ''){
		$dvprint = true;
	}

	$filterer_author_id = thisOr(undo_magic_quotes($_REQUEST['filterer_author_id']), '');
	$filterer_type = thisOr(undo_magic_quotes($_REQUEST['filterer_type']), '');
	$filterer_genre = thisOr(undo_magic_quotes($_REQUEST['filterer_genre']), '');
	$filterer_language = thisOr(undo_magic_quotes($_REQUEST['filterer_language']), '');
	$filterer_rights = thisOr(undo_magic_quotes($_REQUEST['filterer_rights']), '');
	$filterer_data_evaluation = thisOr(undo_magic_quotes($_REQUEST['filterer_data_evaluation']), '');
	$filterer_authority_organization = thisOr(undo_magic_quotes($_REQUEST['filterer_authority_organization']), '');

	// populate filterers, starting from children to grand-parents

	// unique random identifier
	$rnd1 = ($dvprint ? rand(1000000, 9999999) : '');
	// combobox: author_id
	$combo_author_id = new DataCombo;
	// combobox: type
	$combo_type = new DataCombo;
	// combobox: genre
	$combo_genre = new DataCombo;
	// combobox: language
	$combo_language = new DataCombo;
	// combobox: rights
	$combo_rights = new DataCombo;
	// combobox: data_evaluation
	$combo_data_evaluation = new DataCombo;
	// combobox: authority_organization
	$combo_authority_organization = new DataCombo;

	if($selected_id){
		// mm: check member permissions
		if(!$arrPerm[2]){
			return "";
		}
		// mm: who is the owner?
		$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='biblio_doc' and pkValue='".makeSafe($selected_id)."'");
		$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='biblio_doc' and pkValue='".makeSafe($selected_id)."'");
		if($arrPerm[2]==1 && getLoggedMemberID()!=$ownerMemberID){
			return "";
		}
		if($arrPerm[2]==2 && getLoggedGroupID()!=$ownerGroupID){
			return "";
		}

		// can edit?
		if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3){
			$AllowUpdate=1;
		}else{
			$AllowUpdate=0;
		}

		$res = sql("select * from `biblio_doc` where `id`='".makeSafe($selected_id)."'", $eo);
		if(!($row = db_fetch_array($res))){
			return error_message($Translation['No records found'], 'biblio_doc_view.php', false);
		}
		$urow = $row; /* unsanitized data */
		$hc = new CI_Input();
		$row = $hc->xss_clean($row); /* sanitize data */
		$combo_author_id->SelectedData = $row['author_id'];
		$combo_type->SelectedData = $row['type'];
		$combo_genre->SelectedData = $row['genre'];
		$combo_language->SelectedData = $row['language'];
		$combo_rights->SelectedData = $row['rights'];
		$combo_data_evaluation->SelectedData = $row['data_evaluation'];
		$combo_authority_organization->SelectedData = $row['authority_organization'];
	}else{
		$combo_author_id->SelectedData = $filterer_author_id;
		$combo_type->SelectedData = $filterer_type;
		$combo_genre->SelectedData = $filterer_genre;
		$combo_language->SelectedData = $filterer_language;
		$combo_rights->SelectedData = $filterer_rights;
		$combo_data_evaluation->SelectedData = $filterer_data_evaluation;
		$combo_authority_organization->SelectedData = $filterer_authority_organization;
	}
	$combo_author_id->HTML = '<span id="author_id-container' . $rnd1 . '"></span><input type="hidden" name="author_id" id="author_id' . $rnd1 . '" value="' . html_attr($combo_author_id->SelectedData) . '">';
	$combo_author_id->MatchText = '<span id="author_id-container-readonly' . $rnd1 . '"></span><input type="hidden" name="author_id" id="author_id' . $rnd1 . '" value="' . html_attr($combo_author_id->SelectedData) . '">';
	$combo_type->HTML = '<span id="type-container' . $rnd1 . '"></span><input type="hidden" name="type" id="type' . $rnd1 . '" value="' . html_attr($combo_type->SelectedData) . '">';
	$combo_type->MatchText = '<span id="type-container-readonly' . $rnd1 . '"></span><input type="hidden" name="type" id="type' . $rnd1 . '" value="' . html_attr($combo_type->SelectedData) . '">';
	$combo_genre->HTML = '<span id="genre-container' . $rnd1 . '"></span><input type="hidden" name="genre" id="genre' . $rnd1 . '" value="' . html_attr($combo_genre->SelectedData) . '">';
	$combo_genre->MatchText = '<span id="genre-container-readonly' . $rnd1 . '"></span><input type="hidden" name="genre" id="genre' . $rnd1 . '" value="' . html_attr($combo_genre->SelectedData) . '">';
	$combo_language->HTML = '<span id="language-container' . $rnd1 . '"></span><input type="hidden" name="language" id="language' . $rnd1 . '" value="' . html_attr($combo_language->SelectedData) . '">';
	$combo_language->MatchText = '<span id="language-container-readonly' . $rnd1 . '"></span><input type="hidden" name="language" id="language' . $rnd1 . '" value="' . html_attr($combo_language->SelectedData) . '">';
	$combo_rights->HTML = '<span id="rights-container' . $rnd1 . '"></span><input type="hidden" name="rights" id="rights' . $rnd1 . '" value="' . html_attr($combo_rights->SelectedData) . '">';
	$combo_rights->MatchText = '<span id="rights-container-readonly' . $rnd1 . '"></span><input type="hidden" name="rights" id="rights' . $rnd1 . '" value="' . html_attr($combo_rights->SelectedData) . '">';
	$combo_data_evaluation->HTML = '<span id="data_evaluation-container' . $rnd1 . '"></span><input type="hidden" name="data_evaluation" id="data_evaluation' . $rnd1 . '" value="' . html_attr($combo_data_evaluation->SelectedData) . '">';
	$combo_data_evaluation->MatchText = '<span id="data_evaluation-container-readonly' . $rnd1 . '"></span><input type="hidden" name="data_evaluation" id="data_evaluation' . $rnd1 . '" value="' . html_attr($combo_data_evaluation->SelectedData) . '">';
	$combo_authority_organization->HTML = '<span id="authority_organization-container' . $rnd1 . '"></span><input type="hidden" name="authority_organization" id="authority_organization' . $rnd1 . '" value="' . html_attr($combo_authority_organization->SelectedData) . '">';
	$combo_authority_organization->MatchText = '<span id="authority_organization-container-readonly' . $rnd1 . '"></span><input type="hidden" name="authority_organization" id="authority_organization' . $rnd1 . '" value="' . html_attr($combo_authority_organization->SelectedData) . '">';

	ob_start();
	?>

	<script>
		// initial lookup values
		AppGini.current_author_id__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['author_id'] : $filterer_author_id); ?>"};
		AppGini.current_type__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['type'] : $filterer_type); ?>"};
		AppGini.current_genre__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['genre'] : $filterer_genre); ?>"};
		AppGini.current_language__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['language'] : $filterer_language); ?>"};
		AppGini.current_rights__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['rights'] : $filterer_rights); ?>"};
		AppGini.current_data_evaluation__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['data_evaluation'] : $filterer_data_evaluation); ?>"};
		AppGini.current_authority_organization__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['authority_organization'] : $filterer_authority_organization); ?>"};

		jQuery(function() {
			setTimeout(function(){
				if(typeof(author_id_reload__RAND__) == 'function') author_id_reload__RAND__();
				if(typeof(type_reload__RAND__) == 'function') type_reload__RAND__();
				if(typeof(genre_reload__RAND__) == 'function') genre_reload__RAND__();
				if(typeof(language_reload__RAND__) == 'function') language_reload__RAND__();
				if(typeof(rights_reload__RAND__) == 'function') rights_reload__RAND__();
				if(typeof(data_evaluation_reload__RAND__) == 'function') data_evaluation_reload__RAND__();
				if(typeof(authority_organization_reload__RAND__) == 'function') authority_organization_reload__RAND__();
			}, 10); /* we need to slightly delay client-side execution of the above code to allow AppGini.ajaxCache to work */
		});
		function author_id_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#author_id-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_author_id__RAND__.value, t: 'biblio_doc', f: 'author_id' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="author_id"]').val(resp.results[0].id);
							$j('[id=author_id-container-readonly__RAND__]').html('<span id="author_id-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=biblio_author_view_parent]').hide(); }else{ $j('.btn[id=biblio_author_view_parent]').show(); }


							if(typeof(author_id_update_autofills__RAND__) == 'function') author_id_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ /* */ return { s: term, p: page, t: 'biblio_doc', f: 'author_id' }; },
					results: function(resp, page){ /* */ return resp; }
				},
				escapeMarkup: function(str){ /* */ return str; }
			}).on('change', function(e){
				AppGini.current_author_id__RAND__.value = e.added.id;
				AppGini.current_author_id__RAND__.text = e.added.text;
				$j('[name="author_id"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=biblio_author_view_parent]').hide(); }else{ $j('.btn[id=biblio_author_view_parent]').show(); }


				if(typeof(author_id_update_autofills__RAND__) == 'function') author_id_update_autofills__RAND__();
			});

			if(!$j("#author_id-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_author_id__RAND__.value, t: 'biblio_doc', f: 'author_id' },
					success: function(resp){
						$j('[name="author_id"]').val(resp.results[0].id);
						$j('[id=author_id-container-readonly__RAND__]').html('<span id="author_id-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=biblio_author_view_parent]').hide(); }else{ $j('.btn[id=biblio_author_view_parent]').show(); }

						if(typeof(author_id_update_autofills__RAND__) == 'function') author_id_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_author_id__RAND__.value, t: 'biblio_doc', f: 'author_id' },
				success: function(resp){
					$j('[id=author_id-container__RAND__], [id=author_id-container-readonly__RAND__]').html('<span id="author_id-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=biblio_author_view_parent]').hide(); }else{ $j('.btn[id=biblio_author_view_parent]').show(); }

					if(typeof(author_id_update_autofills__RAND__) == 'function') author_id_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function type_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#type-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_type__RAND__.value, t: 'biblio_doc', f: 'type' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="type"]').val(resp.results[0].id);
							$j('[id=type-container-readonly__RAND__]').html('<span id="type-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_bibliography_type_view_parent]').hide(); }else{ $j('.btn[id=class_bibliography_type_view_parent]').show(); }


							if(typeof(type_update_autofills__RAND__) == 'function') type_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ /* */ return { s: term, p: page, t: 'biblio_doc', f: 'type' }; },
					results: function(resp, page){ /* */ return resp; }
				},
				escapeMarkup: function(str){ /* */ return str; }
			}).on('change', function(e){
				AppGini.current_type__RAND__.value = e.added.id;
				AppGini.current_type__RAND__.text = e.added.text;
				$j('[name="type"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_bibliography_type_view_parent]').hide(); }else{ $j('.btn[id=class_bibliography_type_view_parent]').show(); }


				if(typeof(type_update_autofills__RAND__) == 'function') type_update_autofills__RAND__();
			});

			if(!$j("#type-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_type__RAND__.value, t: 'biblio_doc', f: 'type' },
					success: function(resp){
						$j('[name="type"]').val(resp.results[0].id);
						$j('[id=type-container-readonly__RAND__]').html('<span id="type-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_bibliography_type_view_parent]').hide(); }else{ $j('.btn[id=class_bibliography_type_view_parent]').show(); }

						if(typeof(type_update_autofills__RAND__) == 'function') type_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_type__RAND__.value, t: 'biblio_doc', f: 'type' },
				success: function(resp){
					$j('[id=type-container__RAND__], [id=type-container-readonly__RAND__]').html('<span id="type-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_bibliography_type_view_parent]').hide(); }else{ $j('.btn[id=class_bibliography_type_view_parent]').show(); }

					if(typeof(type_update_autofills__RAND__) == 'function') type_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function genre_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#genre-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_genre__RAND__.value, t: 'biblio_doc', f: 'genre' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="genre"]').val(resp.results[0].id);
							$j('[id=genre-container-readonly__RAND__]').html('<span id="genre-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_bibliography_genre_view_parent]').hide(); }else{ $j('.btn[id=class_bibliography_genre_view_parent]').show(); }


							if(typeof(genre_update_autofills__RAND__) == 'function') genre_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ /* */ return { s: term, p: page, t: 'biblio_doc', f: 'genre' }; },
					results: function(resp, page){ /* */ return resp; }
				},
				escapeMarkup: function(str){ /* */ return str; }
			}).on('change', function(e){
				AppGini.current_genre__RAND__.value = e.added.id;
				AppGini.current_genre__RAND__.text = e.added.text;
				$j('[name="genre"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_bibliography_genre_view_parent]').hide(); }else{ $j('.btn[id=class_bibliography_genre_view_parent]').show(); }


				if(typeof(genre_update_autofills__RAND__) == 'function') genre_update_autofills__RAND__();
			});

			if(!$j("#genre-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_genre__RAND__.value, t: 'biblio_doc', f: 'genre' },
					success: function(resp){
						$j('[name="genre"]').val(resp.results[0].id);
						$j('[id=genre-container-readonly__RAND__]').html('<span id="genre-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_bibliography_genre_view_parent]').hide(); }else{ $j('.btn[id=class_bibliography_genre_view_parent]').show(); }

						if(typeof(genre_update_autofills__RAND__) == 'function') genre_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_genre__RAND__.value, t: 'biblio_doc', f: 'genre' },
				success: function(resp){
					$j('[id=genre-container__RAND__], [id=genre-container-readonly__RAND__]').html('<span id="genre-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_bibliography_genre_view_parent]').hide(); }else{ $j('.btn[id=class_bibliography_genre_view_parent]').show(); }

					if(typeof(genre_update_autofills__RAND__) == 'function') genre_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function language_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#language-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_language__RAND__.value, t: 'biblio_doc', f: 'language' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="language"]').val(resp.results[0].id);
							$j('[id=language-container-readonly__RAND__]').html('<span id="language-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_language_view_parent]').hide(); }else{ $j('.btn[id=class_language_view_parent]').show(); }


							if(typeof(language_update_autofills__RAND__) == 'function') language_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ /* */ return { s: term, p: page, t: 'biblio_doc', f: 'language' }; },
					results: function(resp, page){ /* */ return resp; }
				},
				escapeMarkup: function(str){ /* */ return str; }
			}).on('change', function(e){
				AppGini.current_language__RAND__.value = e.added.id;
				AppGini.current_language__RAND__.text = e.added.text;
				$j('[name="language"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_language_view_parent]').hide(); }else{ $j('.btn[id=class_language_view_parent]').show(); }


				if(typeof(language_update_autofills__RAND__) == 'function') language_update_autofills__RAND__();
			});

			if(!$j("#language-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_language__RAND__.value, t: 'biblio_doc', f: 'language' },
					success: function(resp){
						$j('[name="language"]').val(resp.results[0].id);
						$j('[id=language-container-readonly__RAND__]').html('<span id="language-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_language_view_parent]').hide(); }else{ $j('.btn[id=class_language_view_parent]').show(); }

						if(typeof(language_update_autofills__RAND__) == 'function') language_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_language__RAND__.value, t: 'biblio_doc', f: 'language' },
				success: function(resp){
					$j('[id=language-container__RAND__], [id=language-container-readonly__RAND__]').html('<span id="language-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_language_view_parent]').hide(); }else{ $j('.btn[id=class_language_view_parent]').show(); }

					if(typeof(language_update_autofills__RAND__) == 'function') language_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function rights_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#rights-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_rights__RAND__.value, t: 'biblio_doc', f: 'rights' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="rights"]').val(resp.results[0].id);
							$j('[id=rights-container-readonly__RAND__]').html('<span id="rights-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_rights_view_parent]').hide(); }else{ $j('.btn[id=class_rights_view_parent]').show(); }


							if(typeof(rights_update_autofills__RAND__) == 'function') rights_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ /* */ return { s: term, p: page, t: 'biblio_doc', f: 'rights' }; },
					results: function(resp, page){ /* */ return resp; }
				},
				escapeMarkup: function(str){ /* */ return str; }
			}).on('change', function(e){
				AppGini.current_rights__RAND__.value = e.added.id;
				AppGini.current_rights__RAND__.text = e.added.text;
				$j('[name="rights"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_rights_view_parent]').hide(); }else{ $j('.btn[id=class_rights_view_parent]').show(); }


				if(typeof(rights_update_autofills__RAND__) == 'function') rights_update_autofills__RAND__();
			});

			if(!$j("#rights-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_rights__RAND__.value, t: 'biblio_doc', f: 'rights' },
					success: function(resp){
						$j('[name="rights"]').val(resp.results[0].id);
						$j('[id=rights-container-readonly__RAND__]').html('<span id="rights-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_rights_view_parent]').hide(); }else{ $j('.btn[id=class_rights_view_parent]').show(); }

						if(typeof(rights_update_autofills__RAND__) == 'function') rights_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_rights__RAND__.value, t: 'biblio_doc', f: 'rights' },
				success: function(resp){
					$j('[id=rights-container__RAND__], [id=rights-container-readonly__RAND__]').html('<span id="rights-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_rights_view_parent]').hide(); }else{ $j('.btn[id=class_rights_view_parent]').show(); }

					if(typeof(rights_update_autofills__RAND__) == 'function') rights_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function data_evaluation_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#data_evaluation-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_data_evaluation__RAND__.value, t: 'biblio_doc', f: 'data_evaluation' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="data_evaluation"]').val(resp.results[0].id);
							$j('[id=data_evaluation-container-readonly__RAND__]').html('<span id="data_evaluation-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_evaluation_view_parent]').hide(); }else{ $j('.btn[id=class_evaluation_view_parent]').show(); }


							if(typeof(data_evaluation_update_autofills__RAND__) == 'function') data_evaluation_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ /* */ return { s: term, p: page, t: 'biblio_doc', f: 'data_evaluation' }; },
					results: function(resp, page){ /* */ return resp; }
				},
				escapeMarkup: function(str){ /* */ return str; }
			}).on('change', function(e){
				AppGini.current_data_evaluation__RAND__.value = e.added.id;
				AppGini.current_data_evaluation__RAND__.text = e.added.text;
				$j('[name="data_evaluation"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_evaluation_view_parent]').hide(); }else{ $j('.btn[id=class_evaluation_view_parent]').show(); }


				if(typeof(data_evaluation_update_autofills__RAND__) == 'function') data_evaluation_update_autofills__RAND__();
			});

			if(!$j("#data_evaluation-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_data_evaluation__RAND__.value, t: 'biblio_doc', f: 'data_evaluation' },
					success: function(resp){
						$j('[name="data_evaluation"]').val(resp.results[0].id);
						$j('[id=data_evaluation-container-readonly__RAND__]').html('<span id="data_evaluation-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_evaluation_view_parent]').hide(); }else{ $j('.btn[id=class_evaluation_view_parent]').show(); }

						if(typeof(data_evaluation_update_autofills__RAND__) == 'function') data_evaluation_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_data_evaluation__RAND__.value, t: 'biblio_doc', f: 'data_evaluation' },
				success: function(resp){
					$j('[id=data_evaluation-container__RAND__], [id=data_evaluation-container-readonly__RAND__]').html('<span id="data_evaluation-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_evaluation_view_parent]').hide(); }else{ $j('.btn[id=class_evaluation_view_parent]').show(); }

					if(typeof(data_evaluation_update_autofills__RAND__) == 'function') data_evaluation_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function authority_organization_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#authority_organization-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_authority_organization__RAND__.value, t: 'biblio_doc', f: 'authority_organization' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="authority_organization"]').val(resp.results[0].id);
							$j('[id=authority_organization-container-readonly__RAND__]').html('<span id="authority_organization-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_authority_library_view_parent]').hide(); }else{ $j('.btn[id=class_authority_library_view_parent]').show(); }


							if(typeof(authority_organization_update_autofills__RAND__) == 'function') authority_organization_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ /* */ return { s: term, p: page, t: 'biblio_doc', f: 'authority_organization' }; },
					results: function(resp, page){ /* */ return resp; }
				},
				escapeMarkup: function(str){ /* */ return str; }
			}).on('change', function(e){
				AppGini.current_authority_organization__RAND__.value = e.added.id;
				AppGini.current_authority_organization__RAND__.text = e.added.text;
				$j('[name="authority_organization"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_authority_library_view_parent]').hide(); }else{ $j('.btn[id=class_authority_library_view_parent]').show(); }


				if(typeof(authority_organization_update_autofills__RAND__) == 'function') authority_organization_update_autofills__RAND__();
			});

			if(!$j("#authority_organization-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_authority_organization__RAND__.value, t: 'biblio_doc', f: 'authority_organization' },
					success: function(resp){
						$j('[name="authority_organization"]').val(resp.results[0].id);
						$j('[id=authority_organization-container-readonly__RAND__]').html('<span id="authority_organization-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_authority_library_view_parent]').hide(); }else{ $j('.btn[id=class_authority_library_view_parent]').show(); }

						if(typeof(authority_organization_update_autofills__RAND__) == 'function') authority_organization_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_authority_organization__RAND__.value, t: 'biblio_doc', f: 'authority_organization' },
				success: function(resp){
					$j('[id=authority_organization-container__RAND__], [id=authority_organization-container-readonly__RAND__]').html('<span id="authority_organization-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_authority_library_view_parent]').hide(); }else{ $j('.btn[id=class_authority_library_view_parent]').show(); }

					if(typeof(authority_organization_update_autofills__RAND__) == 'function') authority_organization_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
	</script>
	<?php

	$lookups = str_replace('__RAND__', $rnd1, ob_get_contents());
	ob_end_clean();


	// code for template based detail view forms

	// open the detail view template
	if($dvprint){
		$template_file = is_file("./{$TemplateDVP}") ? "./{$TemplateDVP}" : './templates/biblio_doc_templateDVP.html';
		$templateCode = @file_get_contents($template_file);
	}else{
		$template_file = is_file("./{$TemplateDV}") ? "./{$TemplateDV}" : './templates/biblio_doc_templateDV.html';
		$templateCode = @file_get_contents($template_file);
	}

	// process form title
	$templateCode = str_replace('<%%DETAIL_VIEW_TITLE%%>', 'Detail View', $templateCode);
	$templateCode = str_replace('<%%RND1%%>', $rnd1, $templateCode);
	$templateCode = str_replace('<%%EMBEDDED%%>', ($_REQUEST['Embedded'] ? 'Embedded=1' : ''), $templateCode);
	// process buttons
	if($AllowInsert){
		if(!$selected_id) $templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-success" id="insert" name="insert_x" value="1" onclick="return biblio_doc_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save New'] . '</button>', $templateCode);
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="insert" name="insert_x" value="1" onclick="return biblio_doc_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save As Copy'] . '</button>', $templateCode);
	}else{
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '', $templateCode);
	}

	// 'Back' button action
	if($_REQUEST['Embedded']){
		$backAction = 'AppGini.closeParentModal(); return false;';
	}else{
		$backAction = '$j(\'form\').eq(0).attr(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;';
	}

	if($selected_id){
		if(!$_REQUEST['Embedded']) $templateCode = str_replace('<%%DVPRINT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="dvprint" name="dvprint_x" value="1" onclick="$j(\'form\').eq(0).prop(\'novalidate\', true); document.myform.reset(); return true;" title="' . html_attr($Translation['Print Preview']) . '"><i class="glyphicon glyphicon-print"></i> ' . $Translation['Print Preview'] . '</button>', $templateCode);
		if($AllowUpdate){
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '<button type="submit" class="btn btn-success btn-lg" id="update" name="update_x" value="1" onclick="return biblio_doc_validateData();" title="' . html_attr($Translation['Save Changes']) . '"><i class="glyphicon glyphicon-ok"></i> ' . $Translation['Save Changes'] . '</button>', $templateCode);
		}else{
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		}
		if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3){ // allow delete?
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '<button type="submit" class="btn btn-danger" id="delete" name="delete_x" value="1" onclick="return confirm(\'' . $Translation['are you sure?'] . '\');" title="' . html_attr($Translation['Delete']) . '"><i class="glyphicon glyphicon-trash"></i> ' . $Translation['Delete'] . '</button>', $templateCode);
		}else{
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		}
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>', $templateCode);
	}else{
		$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', ($ShowCancel ? '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>' : ''), $templateCode);
	}

	// set records to read only if user can't insert new records and can't edit current record
	if(($selected_id && !$AllowUpdate && !$AllowInsert) || (!$selected_id && !$AllowInsert)){
		$jsReadOnly .= "\tjQuery('#img').replaceWith('<div class=\"form-control-static\" id=\"img\">' + (jQuery('#img').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#author_id').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#author_id_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#type').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#type_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#genre').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#genre_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#created').parents('.input-group').replaceWith('<div class=\"form-control-static\" id=\"created\">' + (jQuery('#created').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#published').parents('.input-group').replaceWith('<div class=\"form-control-static\" id=\"published\">' + (jQuery('#published').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#title').replaceWith('<div class=\"form-control-static\" id=\"title\">' + (jQuery('#title').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#subtitle').replaceWith('<div class=\"form-control-static\" id=\"subtitle\">' + (jQuery('#subtitle').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#publisher').replaceWith('<div class=\"form-control-static\" id=\"publisher\">' + (jQuery('#publisher').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#location').replaceWith('<div class=\"form-control-static\" id=\"location\">' + (jQuery('#location').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#citation').replaceWith('<div class=\"form-control-static\" id=\"citation\">' + (jQuery('#citation').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#description').replaceWith('<div class=\"form-control-static\" id=\"description\">' + (jQuery('#description').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#source').replaceWith('<div class=\"form-control-static\" id=\"source\">' + (jQuery('#source').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#medium').replaceWith('<div class=\"form-control-static\" id=\"medium\">' + (jQuery('#medium').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#language').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#language_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#format').replaceWith('<div class=\"form-control-static\" id=\"format\">' + (jQuery('#format').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#subject').replaceWith('<div class=\"form-control-static\" id=\"subject\">' + (jQuery('#subject').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#rights').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#rights_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#rights_holder').replaceWith('<div class=\"form-control-static\" id=\"rights_holder\">' + (jQuery('#rights_holder').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#data_evaluation').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#data_evaluation_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#authority_record').replaceWith('<div class=\"form-control-static\" id=\"authority_record\">' + (jQuery('#authority_record').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#authority_organization').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#authority_organization_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#pdf_book').replaceWith('<div class=\"form-control-static\" id=\"pdf_book\">' + (jQuery('#pdf_book').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#pdf_book, #pdf_book-edit-link').hide();\n";
		$jsReadOnly .= "\tjQuery('#ext_source').replaceWith('<div class=\"form-control-static\" id=\"ext_source\">' + (jQuery('#ext_source').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('.select2-container').hide();\n";

		$noUploads = true;
	}elseif($AllowInsert){
		$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', true);"; // temporarily disable form change handler
		$locale = isset($Translation['datetimepicker locale']) ? ", locale: '{$Translation['datetimepicker locale']}'" : '';
		$jsEditable .= "\tjQuery('#created').addClass('always_shown').parents('.input-group').datetimepicker({ toolbarPlacement: 'top', sideBySide: true, showClear: true, showTodayButton: true, showClose: true, icons: { close: 'glyphicon glyphicon-ok' }, format: AppGini.datetimeFormat('dt') {$locale} });";
		$locale = isset($Translation['datetimepicker locale']) ? ", locale: '{$Translation['datetimepicker locale']}'" : '';
		$jsEditable .= "\tjQuery('#published').addClass('always_shown').parents('.input-group').datetimepicker({ toolbarPlacement: 'top', sideBySide: true, showClear: true, showTodayButton: true, showClose: true, icons: { close: 'glyphicon glyphicon-ok' }, format: AppGini.datetimeFormat('dt') {$locale} });";
			$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', false);"; // re-enable form change handler
	}

	// process combos
	$templateCode = str_replace('<%%COMBO(author_id)%%>', $combo_author_id->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(author_id)%%>', $combo_author_id->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(author_id)%%>', urlencode($combo_author_id->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(type)%%>', $combo_type->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(type)%%>', $combo_type->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(type)%%>', urlencode($combo_type->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(genre)%%>', $combo_genre->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(genre)%%>', $combo_genre->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(genre)%%>', urlencode($combo_genre->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(language)%%>', $combo_language->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(language)%%>', $combo_language->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(language)%%>', urlencode($combo_language->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(rights)%%>', $combo_rights->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(rights)%%>', $combo_rights->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(rights)%%>', urlencode($combo_rights->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(data_evaluation)%%>', $combo_data_evaluation->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(data_evaluation)%%>', $combo_data_evaluation->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(data_evaluation)%%>', urlencode($combo_data_evaluation->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(authority_organization)%%>', $combo_authority_organization->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(authority_organization)%%>', $combo_authority_organization->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(authority_organization)%%>', urlencode($combo_authority_organization->MatchText), $templateCode);

	/* lookup fields array: 'lookup field name' => array('parent table name', 'lookup field caption') */
	$lookup_fields = array(  'author_id' => array('biblio_author', 'Author_id'), 'type' => array('class_bibliography_type', 'Type'), 'genre' => array('class_bibliography_genre', 'Genre'), 'language' => array('class_language', 'Language'), 'rights' => array('class_rights', 'Rights'), 'data_evaluation' => array('class_evaluation', 'Data evaluation'), 'authority_organization' => array('class_authority_library', 'Authority organization'));
	foreach($lookup_fields as $luf => $ptfc){
		$pt_perm = getTablePermissions($ptfc[0]);

		// process foreign key links
		if($pt_perm['view'] || $pt_perm['edit']){
			$templateCode = str_replace("<%%PLINK({$luf})%%>", '<button type="button" class="btn btn-default view_parent hspacer-md" id="' . $ptfc[0] . '_view_parent" title="' . html_attr($Translation['View'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-eye-open"></i></button>', $templateCode);
		}

		// if user has insert permission to parent table of a lookup field, put an add new button
		if($pt_perm['insert'] && !$_REQUEST['Embedded']){
			$templateCode = str_replace("<%%ADDNEW({$ptfc[0]})%%>", '<button type="button" class="btn btn-success add_new_parent hspacer-md" id="' . $ptfc[0] . '_add_new" title="' . html_attr($Translation['Add New'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-plus-sign"></i></button>', $templateCode);
		}
	}

	// process images
	$templateCode = str_replace('<%%UPLOADFILE(id)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(img)%%>', ($noUploads ? '' : '<input type=hidden name=MAX_FILE_SIZE value=102400>'.$Translation['upload image'].' <input type="file" name="img" id="img">'), $templateCode);
	if($AllowUpdate && $row['img'] != ''){
		$templateCode = str_replace('<%%REMOVEFILE(img)%%>', '<br><input type="checkbox" name="img_remove" id="img_remove" value="1"> <label for="img_remove" style="color: red; font-weight: bold;">'.$Translation['remove image'].'</label>', $templateCode);
	}else{
		$templateCode = str_replace('<%%REMOVEFILE(img)%%>', '', $templateCode);
	}
	$templateCode = str_replace('<%%UPLOADFILE(author_id)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(type)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(genre)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(created)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(published)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(title)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(subtitle)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(publisher)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(location)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(citation)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(description)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(source)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(medium)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(language)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(format)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(subject)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(rights)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(rights_holder)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(data_evaluation)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(authority_record)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(authority_organization)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(pdf_book)%%>', ($noUploads ? '' : '<input type=hidden name=MAX_FILE_SIZE value=10240000>'.$Translation['upload image'].' <input type="file" name="pdf_book" id="pdf_book">'), $templateCode);
	if($AllowUpdate && $row['pdf_book'] != ''){
		$templateCode = str_replace('<%%REMOVEFILE(pdf_book)%%>', '<br><input type="checkbox" name="pdf_book_remove" id="pdf_book_remove" value="1"> <label for="pdf_book_remove" style="color: red; font-weight: bold;">'.$Translation['remove image'].'</label>', $templateCode);
	}else{
		$templateCode = str_replace('<%%REMOVEFILE(pdf_book)%%>', '', $templateCode);
	}
	$templateCode = str_replace('<%%UPLOADFILE(ext_source)%%>', '', $templateCode);

	// process values
	if($selected_id){
		if( $dvprint) $templateCode = str_replace('<%%VALUE(id)%%>', safe_html($urow['id']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(id)%%>', html_attr($row['id']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(id)%%>', urlencode($urow['id']), $templateCode);
		$row['img'] = ($row['img'] != '' ? $row['img'] : 'blank.gif');
		if( $dvprint) $templateCode = str_replace('<%%VALUE(img)%%>', safe_html($urow['img']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(img)%%>', html_attr($row['img']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(img)%%>', urlencode($urow['img']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(author_id)%%>', safe_html($urow['author_id']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(author_id)%%>', html_attr($row['author_id']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(author_id)%%>', urlencode($urow['author_id']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(type)%%>', safe_html($urow['type']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(type)%%>', html_attr($row['type']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(type)%%>', urlencode($urow['type']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(genre)%%>', safe_html($urow['genre']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(genre)%%>', html_attr($row['genre']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(genre)%%>', urlencode($urow['genre']), $templateCode);
		$templateCode = str_replace('<%%VALUE(created)%%>', app_datetime($row['created'], 'dt'), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(created)%%>', urlencode(app_datetime($urow['created'], 'dt')), $templateCode);
		$templateCode = str_replace('<%%VALUE(published)%%>', app_datetime($row['published'], 'dt'), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(published)%%>', urlencode(app_datetime($urow['published'], 'dt')), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(title)%%>', safe_html($urow['title']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(title)%%>', html_attr($row['title']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(title)%%>', urlencode($urow['title']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(subtitle)%%>', safe_html($urow['subtitle']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(subtitle)%%>', html_attr($row['subtitle']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(subtitle)%%>', urlencode($urow['subtitle']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(publisher)%%>', safe_html($urow['publisher']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(publisher)%%>', html_attr($row['publisher']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(publisher)%%>', urlencode($urow['publisher']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(location)%%>', safe_html($urow['location']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(location)%%>', html_attr($row['location']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(location)%%>', urlencode($urow['location']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(citation)%%>', safe_html($urow['citation']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(citation)%%>', html_attr($row['citation']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(citation)%%>', urlencode($urow['citation']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(description)%%>', safe_html($urow['description']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(description)%%>', html_attr($row['description']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(description)%%>', urlencode($urow['description']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(source)%%>', safe_html($urow['source']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(source)%%>', html_attr($row['source']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(source)%%>', urlencode($urow['source']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(medium)%%>', safe_html($urow['medium']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(medium)%%>', html_attr($row['medium']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(medium)%%>', urlencode($urow['medium']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(language)%%>', safe_html($urow['language']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(language)%%>', html_attr($row['language']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(language)%%>', urlencode($urow['language']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(format)%%>', safe_html($urow['format']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(format)%%>', html_attr($row['format']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(format)%%>', urlencode($urow['format']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(subject)%%>', safe_html($urow['subject']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(subject)%%>', html_attr($row['subject']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(subject)%%>', urlencode($urow['subject']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(rights)%%>', safe_html($urow['rights']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(rights)%%>', html_attr($row['rights']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(rights)%%>', urlencode($urow['rights']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(rights_holder)%%>', safe_html($urow['rights_holder']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(rights_holder)%%>', html_attr($row['rights_holder']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(rights_holder)%%>', urlencode($urow['rights_holder']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(data_evaluation)%%>', safe_html($urow['data_evaluation']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(data_evaluation)%%>', html_attr($row['data_evaluation']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(data_evaluation)%%>', urlencode($urow['data_evaluation']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(authority_record)%%>', safe_html($urow['authority_record']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(authority_record)%%>', html_attr($row['authority_record']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(authority_record)%%>', urlencode($urow['authority_record']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(authority_organization)%%>', safe_html($urow['authority_organization']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(authority_organization)%%>', html_attr($row['authority_organization']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(authority_organization)%%>', urlencode($urow['authority_organization']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(pdf_book)%%>', safe_html($urow['pdf_book']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(pdf_book)%%>', html_attr($row['pdf_book']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(pdf_book)%%>', urlencode($urow['pdf_book']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(ext_source)%%>', safe_html($urow['ext_source']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(ext_source)%%>', html_attr($row['ext_source']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(ext_source)%%>', urlencode($urow['ext_source']), $templateCode);
	}else{
		$templateCode = str_replace('<%%VALUE(id)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(id)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(img)%%>', 'blank.gif', $templateCode);
		$templateCode = str_replace('<%%VALUE(author_id)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(author_id)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(type)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(type)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(genre)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(genre)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(created)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(created)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(published)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(published)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(title)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(title)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(subtitle)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(subtitle)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(publisher)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(publisher)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(location)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(location)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(citation)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(citation)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(description)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(description)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(source)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(source)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(medium)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(medium)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(language)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(language)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(format)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(format)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(subject)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(subject)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(rights)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(rights)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(rights_holder)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(rights_holder)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(data_evaluation)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(data_evaluation)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(authority_record)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(authority_record)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(authority_organization)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(authority_organization)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(pdf_book)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(pdf_book)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(ext_source)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(ext_source)%%>', urlencode(''), $templateCode);
	}

	// process translations
	foreach($Translation as $symbol=>$trans){
		$templateCode = str_replace("<%%TRANSLATION($symbol)%%>", $trans, $templateCode);
	}

	// clear scrap
	$templateCode = str_replace('<%%', '<!-- ', $templateCode);
	$templateCode = str_replace('%%>', ' -->', $templateCode);

	// hide links to inaccessible tables
	if($_REQUEST['dvprint_x'] == ''){
		$templateCode .= "\n\n<script>\$j(function(){\n";
		$arrTables = getTableList();
		foreach($arrTables as $name => $caption){
			$templateCode .= "\t\$j('#{$name}_link').removeClass('hidden');\n";
			$templateCode .= "\t\$j('#xs_{$name}_link').removeClass('hidden');\n";
		}

		$templateCode .= $jsReadOnly;
		$templateCode .= $jsEditable;

		if(!$selected_id){
			$templateCode.="\n\tif(document.getElementById('pdf_bookEdit')){ document.getElementById('pdf_bookEdit').style.display='inline'; }";
			$templateCode.="\n\tif(document.getElementById('pdf_bookEditLink')){ document.getElementById('pdf_bookEditLink').style.display='none'; }";
		}

		$templateCode.="\n});</script>\n";
	}

	// ajaxed auto-fill fields
	$templateCode .= '<script>';
	$templateCode .= '$j(function() {';

	$templateCode .= "\tauthor_id_update_autofills$rnd1 = function(){\n";
	$templateCode .= "\t\t\$j.ajax({\n";
	if($dvprint) {
		$templateCode .= "\t\t\turl: 'biblio_doc_autofill.php?rnd1=$rnd1&mfk=author_id&id=' + encodeURIComponent('".addslashes($row['author_id'])."'),\n";
		$templateCode .= "\t\t\tcontentType: 'application/x-www-form-urlencoded; charset=" . datalist_db_encoding . "',\n";
		$templateCode .= "\t\t\ttype: 'GET'\n";
	} else {
		$templateCode .= "\t\t\turl: 'biblio_doc_autofill.php?rnd1=$rnd1&mfk=author_id&id=' + encodeURIComponent(AppGini.current_author_id{$rnd1}.value),\n";
		$templateCode .= "\t\t\tcontentType: 'application/x-www-form-urlencoded; charset=" . datalist_db_encoding . "',\n";
		$templateCode .= "\t\t\ttype: 'GET',\n";
		$templateCode .= "\t\t\tbeforeSend: function() { \$j('#author_id$rnd1').prop('disabled', true); \$j('#author_idLoading').html('<img src=loading.gif align=top>'); },\n";
		$templateCode .= "\t\t\tcomplete: function() { " . (($arrPerm[1] || (($arrPerm[3] == 1 && $ownerMemberID == getLoggedMemberID()) || ($arrPerm[3] == 2 && $ownerGroupID == getLoggedGroupID()) || $arrPerm[3] == 3)) ? "\$j('#author_id$rnd1').prop('disabled', false); " : "\$j('#author_id$rnd1').prop('disabled', true); ")."\$j('#author_idLoading').html(''); \$j(window).resize(); }\n";
	}
	$templateCode .= "\t\t});\n";
	$templateCode .= "\t};\n";
	if(!$dvprint) $templateCode .= "\tif(\$j('#author_id_caption').length) \$j('#author_id_caption').click(function(){ /* */ author_id_update_autofills$rnd1(); });\n";


	$templateCode.="});";
	$templateCode.="</script>";
	$templateCode .= $lookups;

	// handle enforced parent values for read-only lookup fields

	// don't include blank images in lightbox gallery
	$templateCode = preg_replace('/blank.gif" data-lightbox=".*?"/', 'blank.gif"', $templateCode);

	// don't display empty email links
	$templateCode=preg_replace('/<a .*?href="mailto:".*?<\/a>/', '', $templateCode);

	/* default field values */
	$rdata = $jdata = get_defaults('biblio_doc');
	if($selected_id){
		$jdata = get_joined_record('biblio_doc', $selected_id);
		if($jdata === false) $jdata = get_defaults('biblio_doc');
		$rdata = $row;
	}
	$templateCode .= loadView('biblio_doc-ajax-cache', array('rdata' => $rdata, 'jdata' => $jdata));

	// hook: biblio_doc_dv
	if(function_exists('biblio_doc_dv')){
		$args=array();
		biblio_doc_dv(($selected_id ? $selected_id : FALSE), getMemberInfo(), $templateCode, $args);
	}

	return $templateCode;
}
?>