<?php

// Data functions (insert, update, delete, form) for table biblio_author

// This script and data application were generated by AppGini 5.76
// Download AppGini for free from https://bigprof.com/appgini/download/

function biblio_author_insert(){
	global $Translation;

	// mm: can member insert record?
	$arrPerm=getTablePermissions('biblio_author');
	if(!$arrPerm[1]){
		return false;
	}

	$data['memberID'] = makeSafe($_REQUEST['memberID']);
		if($data['memberID'] == empty_lookup_value){ $data['memberID'] = ''; }
	$data['groupID'] = makeSafe($_REQUEST['groupID']);
		if($data['groupID'] == empty_lookup_value){ $data['groupID'] = ''; }
	$data['selection_class'] = makeSafe($_REQUEST['selection_class']);
		if($data['selection_class'] == empty_lookup_value){ $data['selection_class'] = ''; }
	$data['agenttype1'] = makeSafe($_REQUEST['agenttype1']);
		if($data['agenttype1'] == empty_lookup_value){ $data['agenttype1'] = ''; }
	$data['agenttype2'] = makeSafe($_REQUEST['agenttype2']);
		if($data['agenttype2'] == empty_lookup_value){ $data['agenttype2'] = ''; }
	$data['gender'] = makeSafe($_REQUEST['gender']);
		if($data['gender'] == empty_lookup_value){ $data['gender'] = ''; }
	$data['last_name'] = makeSafe($_REQUEST['last_name']);
		if($data['last_name'] == empty_lookup_value){ $data['last_name'] = ''; }
	$data['first_name'] = makeSafe($_REQUEST['first_name']);
		if($data['first_name'] == empty_lookup_value){ $data['first_name'] = ''; }
	$data['other_name'] = makeSafe($_REQUEST['other_name']);
		if($data['other_name'] == empty_lookup_value){ $data['other_name'] = ''; }
	$data['birthday'] = mysql_datetime($_REQUEST['birthday']);
		if($data['birthday'] == empty_lookup_value){ $data['birthday'] = ''; }
	$data['birth_location'] = makeSafe($_REQUEST['birth_location']);
		if($data['birth_location'] == empty_lookup_value){ $data['birth_location'] = ''; }
	$data['birth_location_map'] = makeSafe($_REQUEST['birth_location_map']);
		if($data['birth_location_map'] == empty_lookup_value){ $data['birth_location_map'] = ''; }
	$data['deathday'] = mysql_datetime($_REQUEST['deathday']);
		if($data['deathday'] == empty_lookup_value){ $data['deathday'] = ''; }
	$data['death_location'] = makeSafe($_REQUEST['death_location']);
		if($data['death_location'] == empty_lookup_value){ $data['death_location'] = ''; }
	$data['workplace'] = makeSafe($_REQUEST['workplace']);
		if($data['workplace'] == empty_lookup_value){ $data['workplace'] = ''; }
	$data['knows'] = makeSafe($_REQUEST['knows']);
		if($data['knows'] == empty_lookup_value){ $data['knows'] = ''; }
	$data['shortbio'] = br2nl(makeSafe($_REQUEST['shortbio']));
	$data['data_evaluation'] = makeSafe($_REQUEST['data_evaluation']);
		if($data['data_evaluation'] == empty_lookup_value){ $data['data_evaluation'] = ''; }
	$data['authority_record'] = makeSafe($_REQUEST['authority_record']);
		if($data['authority_record'] == empty_lookup_value){ $data['authority_record'] = ''; }
	$data['authority_organization'] = makeSafe($_REQUEST['authority_organization']);
		if($data['authority_organization'] == empty_lookup_value){ $data['authority_organization'] = ''; }
	$data['img'] = PrepareUploadedFile('img', 102400,'jpg|jpeg|gif|png', false, '');
	if($data['img']) createThumbnail($data['img'], getThumbnailSpecs('biblio_author', 'img', 'tv'));
	if($data['img']) createThumbnail($data['img'], getThumbnailSpecs('biblio_author', 'img', 'dv'));

	/* for empty upload fields, when saving a copy of an existing record, copy the original upload field */
	if($_REQUEST['SelectedID']){
		$res = sql("select * from biblio_author where id='" . makeSafe($_REQUEST['SelectedID']) . "'", $eo);
		if($row = db_fetch_assoc($res)){
			if(!$data['img']) $data['img'] = makeSafe($row['img']);
		}
	}

	// hook: biblio_author_before_insert
	if(function_exists('biblio_author_before_insert')){
		$args=array();
		if(!biblio_author_before_insert($data, getMemberInfo(), $args)){ return false; }
	}

	$o = array('silentErrors' => true);
	sql('insert into `biblio_author` set       `memberID`=' . (($data['memberID'] !== '' && $data['memberID'] !== NULL) ? "'{$data['memberID']}'" : 'NULL') . ', ' . ($data['img'] != '' ? "`img`='{$data['img']}'" : '`img`=NULL') . ', `groupID`=' . (($data['groupID'] !== '' && $data['groupID'] !== NULL) ? "'{$data['groupID']}'" : 'NULL') . ', `selection_class`=' . (($data['selection_class'] !== '' && $data['selection_class'] !== NULL) ? "'{$data['selection_class']}'" : 'NULL') . ', `agenttype1`=' . (($data['agenttype1'] !== '' && $data['agenttype1'] !== NULL) ? "'{$data['agenttype1']}'" : 'NULL') . ', `agenttype2`=' . (($data['agenttype2'] !== '' && $data['agenttype2'] !== NULL) ? "'{$data['agenttype2']}'" : 'NULL') . ', `gender`=' . (($data['gender'] !== '' && $data['gender'] !== NULL) ? "'{$data['gender']}'" : 'NULL') . ', `last_name`=' . (($data['last_name'] !== '' && $data['last_name'] !== NULL) ? "'{$data['last_name']}'" : 'NULL') . ', `first_name`=' . (($data['first_name'] !== '' && $data['first_name'] !== NULL) ? "'{$data['first_name']}'" : 'NULL') . ', `other_name`=' . (($data['other_name'] !== '' && $data['other_name'] !== NULL) ? "'{$data['other_name']}'" : 'NULL') . ', `birthday`=' . (($data['birthday'] !== '' && $data['birthday'] !== NULL) ? "'{$data['birthday']}'" : 'NULL') . ', `birth_location`=' . (($data['birth_location'] !== '' && $data['birth_location'] !== NULL) ? "'{$data['birth_location']}'" : 'NULL') . ', `birth_location_map`=' . (($data['birth_location_map'] !== '' && $data['birth_location_map'] !== NULL) ? "'{$data['birth_location_map']}'" : 'NULL') . ', `deathday`=' . (($data['deathday'] !== '' && $data['deathday'] !== NULL) ? "'{$data['deathday']}'" : 'NULL') . ', `death_location`=' . (($data['death_location'] !== '' && $data['death_location'] !== NULL) ? "'{$data['death_location']}'" : 'NULL') . ', `workplace`=' . (($data['workplace'] !== '' && $data['workplace'] !== NULL) ? "'{$data['workplace']}'" : 'NULL') . ', `knows`=' . (($data['knows'] !== '' && $data['knows'] !== NULL) ? "'{$data['knows']}'" : 'NULL') . ', `shortbio`=' . (($data['shortbio'] !== '' && $data['shortbio'] !== NULL) ? "'{$data['shortbio']}'" : 'NULL') . ', `data_evaluation`=' . (($data['data_evaluation'] !== '' && $data['data_evaluation'] !== NULL) ? "'{$data['data_evaluation']}'" : 'NULL') . ', `authority_record`=' . (($data['authority_record'] !== '' && $data['authority_record'] !== NULL) ? "'{$data['authority_record']}'" : 'NULL') . ', `authority_organization`=' . (($data['authority_organization'] !== '' && $data['authority_organization'] !== NULL) ? "'{$data['authority_organization']}'" : 'NULL'), $o);
	if($o['error']!=''){
		echo $o['error'];
		echo "<a href=\"biblio_author_view.php?addNew_x=1\">{$Translation['< back']}</a>";
		exit;
	}

	$recID = db_insert_id(db_link());

	// hook: biblio_author_after_insert
	if(function_exists('biblio_author_after_insert')){
		$res = sql("select * from `biblio_author` where `id`='" . makeSafe($recID, false) . "' limit 1", $eo);
		if($row = db_fetch_assoc($res)){
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = makeSafe($recID, false);
		$args=array();
		if(!biblio_author_after_insert($data, getMemberInfo(), $args)){ return $recID; }
	}

	// mm: save ownership data
	set_record_owner('biblio_author', $recID, getLoggedMemberID());

	return $recID;
}

function biblio_author_delete($selected_id, $AllowDeleteOfParents=false, $skipChecks=false){
	// insure referential integrity ...
	global $Translation;
	$selected_id=makeSafe($selected_id);

	// mm: can member delete record?
	$arrPerm=getTablePermissions('biblio_author');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='biblio_author' and pkValue='$selected_id'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='biblio_author' and pkValue='$selected_id'");
	if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3){ // allow delete?
		// delete allowed, so continue ...
	}else{
		return $Translation['You don\'t have enough permissions to delete this record'];
	}

	// hook: biblio_author_before_delete
	if(function_exists('biblio_author_before_delete')){
		$args=array();
		if(!biblio_author_before_delete($selected_id, $skipChecks, getMemberInfo(), $args))
			return $Translation['Couldn\'t delete this record'];
	}

	// child table: biblio_doc
	$res = sql("select `id` from `biblio_author` where `id`='$selected_id'", $eo);
	$id = db_fetch_row($res);
	$rires = sql("select count(1) from `biblio_doc` where `author_id`='".addslashes($id[0])."'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "biblio_doc", $RetMsg);
		return $RetMsg;
	}elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["confirm delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "biblio_doc", $RetMsg);
		$RetMsg = str_replace("<Delete>", "<input type=\"button\" class=\"button\" value=\"".$Translation['yes']."\" onClick=\"window.location='biblio_author_view.php?SelectedID=".urlencode($selected_id)."&delete_x=1&confirmed=1';\">", $RetMsg);
		$RetMsg = str_replace("<Cancel>", "<input type=\"button\" class=\"button\" value=\"".$Translation['no']."\" onClick=\"window.location='biblio_author_view.php?SelectedID=".urlencode($selected_id)."';\">", $RetMsg);
		return $RetMsg;
	}

	// child table: biblio_transcript
	$res = sql("select `id` from `biblio_author` where `id`='$selected_id'", $eo);
	$id = db_fetch_row($res);
	$rires = sql("select count(1) from `biblio_transcript` where `author_memberID`='".addslashes($id[0])."'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "biblio_transcript", $RetMsg);
		return $RetMsg;
	}elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["confirm delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "biblio_transcript", $RetMsg);
		$RetMsg = str_replace("<Delete>", "<input type=\"button\" class=\"button\" value=\"".$Translation['yes']."\" onClick=\"window.location='biblio_author_view.php?SelectedID=".urlencode($selected_id)."&delete_x=1&confirmed=1';\">", $RetMsg);
		$RetMsg = str_replace("<Cancel>", "<input type=\"button\" class=\"button\" value=\"".$Translation['no']."\" onClick=\"window.location='biblio_author_view.php?SelectedID=".urlencode($selected_id)."';\">", $RetMsg);
		return $RetMsg;
	}

	// child table: biblio_token
	$res = sql("select `id` from `biblio_author` where `id`='$selected_id'", $eo);
	$id = db_fetch_row($res);
	$rires = sql("select count(1) from `biblio_token` where `author_id`='".addslashes($id[0])."'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "biblio_token", $RetMsg);
		return $RetMsg;
	}elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["confirm delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "biblio_token", $RetMsg);
		$RetMsg = str_replace("<Delete>", "<input type=\"button\" class=\"button\" value=\"".$Translation['yes']."\" onClick=\"window.location='biblio_author_view.php?SelectedID=".urlencode($selected_id)."&delete_x=1&confirmed=1';\">", $RetMsg);
		$RetMsg = str_replace("<Cancel>", "<input type=\"button\" class=\"button\" value=\"".$Translation['no']."\" onClick=\"window.location='biblio_author_view.php?SelectedID=".urlencode($selected_id)."';\">", $RetMsg);
		return $RetMsg;
	}

	// child table: code_invivo
	$res = sql("select `id` from `biblio_author` where `id`='$selected_id'", $eo);
	$id = db_fetch_row($res);
	$rires = sql("select count(1) from `code_invivo` where `author`='".addslashes($id[0])."'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "code_invivo", $RetMsg);
		return $RetMsg;
	}elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["confirm delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "code_invivo", $RetMsg);
		$RetMsg = str_replace("<Delete>", "<input type=\"button\" class=\"button\" value=\"".$Translation['yes']."\" onClick=\"window.location='biblio_author_view.php?SelectedID=".urlencode($selected_id)."&delete_x=1&confirmed=1';\">", $RetMsg);
		$RetMsg = str_replace("<Cancel>", "<input type=\"button\" class=\"button\" value=\"".$Translation['no']."\" onClick=\"window.location='biblio_author_view.php?SelectedID=".urlencode($selected_id)."';\">", $RetMsg);
		return $RetMsg;
	}

	// child table: code_herme
	$res = sql("select `id` from `biblio_author` where `id`='$selected_id'", $eo);
	$id = db_fetch_row($res);
	$rires = sql("select count(1) from `code_herme` where `author_id`='".addslashes($id[0])."'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "code_herme", $RetMsg);
		return $RetMsg;
	}elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["confirm delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "code_herme", $RetMsg);
		$RetMsg = str_replace("<Delete>", "<input type=\"button\" class=\"button\" value=\"".$Translation['yes']."\" onClick=\"window.location='biblio_author_view.php?SelectedID=".urlencode($selected_id)."&delete_x=1&confirmed=1';\">", $RetMsg);
		$RetMsg = str_replace("<Cancel>", "<input type=\"button\" class=\"button\" value=\"".$Translation['no']."\" onClick=\"window.location='biblio_author_view.php?SelectedID=".urlencode($selected_id)."';\">", $RetMsg);
		return $RetMsg;
	}

	// child table: chr_dev
	$res = sql("select `id` from `biblio_author` where `id`='$selected_id'", $eo);
	$id = db_fetch_row($res);
	$rires = sql("select count(1) from `chr_dev` where `agent_id`='".addslashes($id[0])."'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "chr_dev", $RetMsg);
		return $RetMsg;
	}elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["confirm delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "chr_dev", $RetMsg);
		$RetMsg = str_replace("<Delete>", "<input type=\"button\" class=\"button\" value=\"".$Translation['yes']."\" onClick=\"window.location='biblio_author_view.php?SelectedID=".urlencode($selected_id)."&delete_x=1&confirmed=1';\">", $RetMsg);
		$RetMsg = str_replace("<Cancel>", "<input type=\"button\" class=\"button\" value=\"".$Translation['no']."\" onClick=\"window.location='biblio_author_view.php?SelectedID=".urlencode($selected_id)."';\">", $RetMsg);
		return $RetMsg;
	}

	// child table: chr_scenes
	$res = sql("select `id` from `biblio_author` where `id`='$selected_id'", $eo);
	$id = db_fetch_row($res);
	$rires = sql("select count(1) from `chr_scenes` where `author_id`='".addslashes($id[0])."'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "chr_scenes", $RetMsg);
		return $RetMsg;
	}elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["confirm delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "chr_scenes", $RetMsg);
		$RetMsg = str_replace("<Delete>", "<input type=\"button\" class=\"button\" value=\"".$Translation['yes']."\" onClick=\"window.location='biblio_author_view.php?SelectedID=".urlencode($selected_id)."&delete_x=1&confirmed=1';\">", $RetMsg);
		$RetMsg = str_replace("<Cancel>", "<input type=\"button\" class=\"button\" value=\"".$Translation['no']."\" onClick=\"window.location='biblio_author_view.php?SelectedID=".urlencode($selected_id)."';\">", $RetMsg);
		return $RetMsg;
	}

	// child table: code_encounters
	$res = sql("select `id` from `biblio_author` where `id`='$selected_id'", $eo);
	$id = db_fetch_row($res);
	$rires = sql("select count(1) from `code_encounters` where `authorA`='".addslashes($id[0])."'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "code_encounters", $RetMsg);
		return $RetMsg;
	}elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["confirm delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "code_encounters", $RetMsg);
		$RetMsg = str_replace("<Delete>", "<input type=\"button\" class=\"button\" value=\"".$Translation['yes']."\" onClick=\"window.location='biblio_author_view.php?SelectedID=".urlencode($selected_id)."&delete_x=1&confirmed=1';\">", $RetMsg);
		$RetMsg = str_replace("<Cancel>", "<input type=\"button\" class=\"button\" value=\"".$Translation['no']."\" onClick=\"window.location='biblio_author_view.php?SelectedID=".urlencode($selected_id)."';\">", $RetMsg);
		return $RetMsg;
	}

	// child table: code_encounters
	$res = sql("select `id` from `biblio_author` where `id`='$selected_id'", $eo);
	$id = db_fetch_row($res);
	$rires = sql("select count(1) from `code_encounters` where `author_nameA`='".addslashes($id[0])."'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "code_encounters", $RetMsg);
		return $RetMsg;
	}elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["confirm delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "code_encounters", $RetMsg);
		$RetMsg = str_replace("<Delete>", "<input type=\"button\" class=\"button\" value=\"".$Translation['yes']."\" onClick=\"window.location='biblio_author_view.php?SelectedID=".urlencode($selected_id)."&delete_x=1&confirmed=1';\">", $RetMsg);
		$RetMsg = str_replace("<Cancel>", "<input type=\"button\" class=\"button\" value=\"".$Translation['no']."\" onClick=\"window.location='biblio_author_view.php?SelectedID=".urlencode($selected_id)."';\">", $RetMsg);
		return $RetMsg;
	}

	// child table: code_encounters
	$res = sql("select `id` from `biblio_author` where `id`='$selected_id'", $eo);
	$id = db_fetch_row($res);
	$rires = sql("select count(1) from `code_encounters` where `authorB`='".addslashes($id[0])."'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "code_encounters", $RetMsg);
		return $RetMsg;
	}elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["confirm delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "code_encounters", $RetMsg);
		$RetMsg = str_replace("<Delete>", "<input type=\"button\" class=\"button\" value=\"".$Translation['yes']."\" onClick=\"window.location='biblio_author_view.php?SelectedID=".urlencode($selected_id)."&delete_x=1&confirmed=1';\">", $RetMsg);
		$RetMsg = str_replace("<Cancel>", "<input type=\"button\" class=\"button\" value=\"".$Translation['no']."\" onClick=\"window.location='biblio_author_view.php?SelectedID=".urlencode($selected_id)."';\">", $RetMsg);
		return $RetMsg;
	}

	// child table: code_encounters
	$res = sql("select `id` from `biblio_author` where `id`='$selected_id'", $eo);
	$id = db_fetch_row($res);
	$rires = sql("select count(1) from `code_encounters` where `authornameB`='".addslashes($id[0])."'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "code_encounters", $RetMsg);
		return $RetMsg;
	}elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["confirm delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "code_encounters", $RetMsg);
		$RetMsg = str_replace("<Delete>", "<input type=\"button\" class=\"button\" value=\"".$Translation['yes']."\" onClick=\"window.location='biblio_author_view.php?SelectedID=".urlencode($selected_id)."&delete_x=1&confirmed=1';\">", $RetMsg);
		$RetMsg = str_replace("<Cancel>", "<input type=\"button\" class=\"button\" value=\"".$Translation['no']."\" onClick=\"window.location='biblio_author_view.php?SelectedID=".urlencode($selected_id)."';\">", $RetMsg);
		return $RetMsg;
	}

	// child table: story_chrs
	$res = sql("select `id` from `biblio_author` where `id`='$selected_id'", $eo);
	$id = db_fetch_row($res);
	$rires = sql("select count(1) from `story_chrs` where `agent_id`='".addslashes($id[0])."'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "story_chrs", $RetMsg);
		return $RetMsg;
	}elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["confirm delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "story_chrs", $RetMsg);
		$RetMsg = str_replace("<Delete>", "<input type=\"button\" class=\"button\" value=\"".$Translation['yes']."\" onClick=\"window.location='biblio_author_view.php?SelectedID=".urlencode($selected_id)."&delete_x=1&confirmed=1';\">", $RetMsg);
		$RetMsg = str_replace("<Cancel>", "<input type=\"button\" class=\"button\" value=\"".$Translation['no']."\" onClick=\"window.location='biblio_author_view.php?SelectedID=".urlencode($selected_id)."';\">", $RetMsg);
		return $RetMsg;
	}

	// child table: storydynamic
	$res = sql("select `id` from `biblio_author` where `id`='$selected_id'", $eo);
	$id = db_fetch_row($res);
	$rires = sql("select count(1) from `storydynamic` where `agent`='".addslashes($id[0])."'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "storydynamic", $RetMsg);
		return $RetMsg;
	}elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks){
		$RetMsg = $Translation["confirm delete"];
		$RetMsg = str_replace("<RelatedRecords>", $rirow[0], $RetMsg);
		$RetMsg = str_replace("<TableName>", "storydynamic", $RetMsg);
		$RetMsg = str_replace("<Delete>", "<input type=\"button\" class=\"button\" value=\"".$Translation['yes']."\" onClick=\"window.location='biblio_author_view.php?SelectedID=".urlencode($selected_id)."&delete_x=1&confirmed=1';\">", $RetMsg);
		$RetMsg = str_replace("<Cancel>", "<input type=\"button\" class=\"button\" value=\"".$Translation['no']."\" onClick=\"window.location='biblio_author_view.php?SelectedID=".urlencode($selected_id)."';\">", $RetMsg);
		return $RetMsg;
	}

	sql("delete from `biblio_author` where `id`='$selected_id'", $eo);

	// hook: biblio_author_after_delete
	if(function_exists('biblio_author_after_delete')){
		$args=array();
		biblio_author_after_delete($selected_id, getMemberInfo(), $args);
	}

	// mm: delete ownership data
	sql("delete from membership_userrecords where tableName='biblio_author' and pkValue='$selected_id'", $eo);
}

function biblio_author_update($selected_id){
	global $Translation;

	// mm: can member edit record?
	$arrPerm=getTablePermissions('biblio_author');
	$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='biblio_author' and pkValue='".makeSafe($selected_id)."'");
	$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='biblio_author' and pkValue='".makeSafe($selected_id)."'");
	if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3){ // allow update?
		// update allowed, so continue ...
	}else{
		return false;
	}

	$data['memberID'] = makeSafe($_REQUEST['memberID']);
		if($data['memberID'] == empty_lookup_value){ $data['memberID'] = ''; }
	$data['groupID'] = makeSafe($_REQUEST['groupID']);
		if($data['groupID'] == empty_lookup_value){ $data['groupID'] = ''; }
	$data['selection_class'] = makeSafe($_REQUEST['selection_class']);
		if($data['selection_class'] == empty_lookup_value){ $data['selection_class'] = ''; }
	$data['agenttype1'] = makeSafe($_REQUEST['agenttype1']);
		if($data['agenttype1'] == empty_lookup_value){ $data['agenttype1'] = ''; }
	$data['agenttype2'] = makeSafe($_REQUEST['agenttype2']);
		if($data['agenttype2'] == empty_lookup_value){ $data['agenttype2'] = ''; }
	$data['gender'] = makeSafe($_REQUEST['gender']);
		if($data['gender'] == empty_lookup_value){ $data['gender'] = ''; }
	$data['last_name'] = makeSafe($_REQUEST['last_name']);
		if($data['last_name'] == empty_lookup_value){ $data['last_name'] = ''; }
	$data['first_name'] = makeSafe($_REQUEST['first_name']);
		if($data['first_name'] == empty_lookup_value){ $data['first_name'] = ''; }
	$data['other_name'] = makeSafe($_REQUEST['other_name']);
		if($data['other_name'] == empty_lookup_value){ $data['other_name'] = ''; }
	$data['birthday'] = mysql_datetime($_REQUEST['birthday']);
		if($data['birthday'] == empty_lookup_value){ $data['birthday'] = ''; }
	$data['birth_location'] = makeSafe($_REQUEST['birth_location']);
		if($data['birth_location'] == empty_lookup_value){ $data['birth_location'] = ''; }
	$data['birth_location_map'] = makeSafe($_REQUEST['birth_location_map']);
		if($data['birth_location_map'] == empty_lookup_value){ $data['birth_location_map'] = ''; }
	$data['deathday'] = mysql_datetime($_REQUEST['deathday']);
		if($data['deathday'] == empty_lookup_value){ $data['deathday'] = ''; }
	$data['death_location'] = makeSafe($_REQUEST['death_location']);
		if($data['death_location'] == empty_lookup_value){ $data['death_location'] = ''; }
	$data['workplace'] = makeSafe($_REQUEST['workplace']);
		if($data['workplace'] == empty_lookup_value){ $data['workplace'] = ''; }
	$data['knows'] = makeSafe($_REQUEST['knows']);
		if($data['knows'] == empty_lookup_value){ $data['knows'] = ''; }
	$data['shortbio'] = br2nl(makeSafe($_REQUEST['shortbio']));
	$data['data_evaluation'] = makeSafe($_REQUEST['data_evaluation']);
		if($data['data_evaluation'] == empty_lookup_value){ $data['data_evaluation'] = ''; }
	$data['authority_record'] = makeSafe($_REQUEST['authority_record']);
		if($data['authority_record'] == empty_lookup_value){ $data['authority_record'] = ''; }
	$data['authority_organization'] = makeSafe($_REQUEST['authority_organization']);
		if($data['authority_organization'] == empty_lookup_value){ $data['authority_organization'] = ''; }
	$data['selectedID']=makeSafe($selected_id);
	if($_REQUEST['img_remove'] == 1){
		$data['img'] = '';
	}else{
		$data['img'] = PrepareUploadedFile('img', 102400, 'jpg|jpeg|gif|png', false, "");
		if($data['img']) createThumbnail($data['img'], getThumbnailSpecs('biblio_author', 'img', 'tv'));
		if($data['img']) createThumbnail($data['img'], getThumbnailSpecs('biblio_author', 'img', 'dv'));
	}

	// hook: biblio_author_before_update
	if(function_exists('biblio_author_before_update')){
		$args=array();
		if(!biblio_author_before_update($data, getMemberInfo(), $args)){ return false; }
	}

	$o=array('silentErrors' => true);
	sql('update `biblio_author` set       `memberID`=' . (($data['memberID'] !== '' && $data['memberID'] !== NULL) ? "'{$data['memberID']}'" : 'NULL') . ', ' . ($data['img']!='' ? "`img`='{$data['img']}'" : ($_REQUEST['img_remove'] != 1 ? '`img`=`img`' : '`img`=NULL')) . ', `groupID`=' . (($data['groupID'] !== '' && $data['groupID'] !== NULL) ? "'{$data['groupID']}'" : 'NULL') . ', `selection_class`=' . (($data['selection_class'] !== '' && $data['selection_class'] !== NULL) ? "'{$data['selection_class']}'" : 'NULL') . ', `agenttype1`=' . (($data['agenttype1'] !== '' && $data['agenttype1'] !== NULL) ? "'{$data['agenttype1']}'" : 'NULL') . ', `agenttype2`=' . (($data['agenttype2'] !== '' && $data['agenttype2'] !== NULL) ? "'{$data['agenttype2']}'" : 'NULL') . ', `gender`=' . (($data['gender'] !== '' && $data['gender'] !== NULL) ? "'{$data['gender']}'" : 'NULL') . ', `last_name`=' . (($data['last_name'] !== '' && $data['last_name'] !== NULL) ? "'{$data['last_name']}'" : 'NULL') . ', `first_name`=' . (($data['first_name'] !== '' && $data['first_name'] !== NULL) ? "'{$data['first_name']}'" : 'NULL') . ', `other_name`=' . (($data['other_name'] !== '' && $data['other_name'] !== NULL) ? "'{$data['other_name']}'" : 'NULL') . ', `birthday`=' . (($data['birthday'] !== '' && $data['birthday'] !== NULL) ? "'{$data['birthday']}'" : 'NULL') . ', `birth_location`=' . (($data['birth_location'] !== '' && $data['birth_location'] !== NULL) ? "'{$data['birth_location']}'" : 'NULL') . ', `birth_location_map`=' . (($data['birth_location_map'] !== '' && $data['birth_location_map'] !== NULL) ? "'{$data['birth_location_map']}'" : 'NULL') . ', `deathday`=' . (($data['deathday'] !== '' && $data['deathday'] !== NULL) ? "'{$data['deathday']}'" : 'NULL') . ', `death_location`=' . (($data['death_location'] !== '' && $data['death_location'] !== NULL) ? "'{$data['death_location']}'" : 'NULL') . ', `workplace`=' . (($data['workplace'] !== '' && $data['workplace'] !== NULL) ? "'{$data['workplace']}'" : 'NULL') . ', `knows`=' . (($data['knows'] !== '' && $data['knows'] !== NULL) ? "'{$data['knows']}'" : 'NULL') . ', `shortbio`=' . (($data['shortbio'] !== '' && $data['shortbio'] !== NULL) ? "'{$data['shortbio']}'" : 'NULL') . ', `data_evaluation`=' . (($data['data_evaluation'] !== '' && $data['data_evaluation'] !== NULL) ? "'{$data['data_evaluation']}'" : 'NULL') . ', `authority_record`=' . (($data['authority_record'] !== '' && $data['authority_record'] !== NULL) ? "'{$data['authority_record']}'" : 'NULL') . ', `authority_organization`=' . (($data['authority_organization'] !== '' && $data['authority_organization'] !== NULL) ? "'{$data['authority_organization']}'" : 'NULL') . " where `id`='".makeSafe($selected_id)."'", $o);
	if($o['error']!=''){
		echo $o['error'];
		echo '<a href="biblio_author_view.php?SelectedID='.urlencode($selected_id)."\">{$Translation['< back']}</a>";
		exit;
	}


	// hook: biblio_author_after_update
	if(function_exists('biblio_author_after_update')){
		$res = sql("SELECT * FROM `biblio_author` WHERE `id`='{$data['selectedID']}' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)){
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = $data['id'];
		$args = array();
		if(!biblio_author_after_update($data, getMemberInfo(), $args)){ return; }
	}

	// mm: update ownership data
	sql("update membership_userrecords set dateUpdated='".time()."' where tableName='biblio_author' and pkValue='".makeSafe($selected_id)."'", $eo);

}

function biblio_author_form($selected_id = '', $AllowUpdate = 1, $AllowInsert = 1, $AllowDelete = 1, $ShowCancel = 0, $TemplateDV = '', $TemplateDVP = ''){
	// function to return an editable form for a table records
	// and fill it with data of record whose ID is $selected_id. If $selected_id
	// is empty, an empty form is shown, with only an 'Add New'
	// button displayed.

	global $Translation;

	// mm: get table permissions
	$arrPerm=getTablePermissions('biblio_author');
	if(!$arrPerm[1] && $selected_id==''){ return ''; }
	$AllowInsert = ($arrPerm[1] ? true : false);
	// print preview?
	$dvprint = false;
	if($selected_id && $_REQUEST['dvprint_x'] != ''){
		$dvprint = true;
	}

	$filterer_selection_class = thisOr(undo_magic_quotes($_REQUEST['filterer_selection_class']), '');
	$filterer_agenttype1 = thisOr(undo_magic_quotes($_REQUEST['filterer_agenttype1']), '');
	$filterer_agenttype2 = thisOr(undo_magic_quotes($_REQUEST['filterer_agenttype2']), '');
	$filterer_gender = thisOr(undo_magic_quotes($_REQUEST['filterer_gender']), '');
	$filterer_data_evaluation = thisOr(undo_magic_quotes($_REQUEST['filterer_data_evaluation']), '');
	$filterer_authority_organization = thisOr(undo_magic_quotes($_REQUEST['filterer_authority_organization']), '');

	// populate filterers, starting from children to grand-parents

	// unique random identifier
	$rnd1 = ($dvprint ? rand(1000000, 9999999) : '');
	// combobox: selection_class
	$combo_selection_class = new DataCombo;
	// combobox: agenttype1
	$combo_agenttype1 = new DataCombo;
	// combobox: agenttype2
	$combo_agenttype2 = new DataCombo;
	// combobox: gender
	$combo_gender = new DataCombo;
	// combobox: data_evaluation
	$combo_data_evaluation = new DataCombo;
	// combobox: authority_organization
	$combo_authority_organization = new DataCombo;

	if($selected_id){
		// mm: check member permissions
		if(!$arrPerm[2]){
			return "";
		}
		// mm: who is the owner?
		$ownerGroupID=sqlValue("select groupID from membership_userrecords where tableName='biblio_author' and pkValue='".makeSafe($selected_id)."'");
		$ownerMemberID=sqlValue("select lcase(memberID) from membership_userrecords where tableName='biblio_author' and pkValue='".makeSafe($selected_id)."'");
		if($arrPerm[2]==1 && getLoggedMemberID()!=$ownerMemberID){
			return "";
		}
		if($arrPerm[2]==2 && getLoggedGroupID()!=$ownerGroupID){
			return "";
		}

		// can edit?
		if(($arrPerm[3]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[3]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[3]==3){
			$AllowUpdate=1;
		}else{
			$AllowUpdate=0;
		}

		$res = sql("select * from `biblio_author` where `id`='".makeSafe($selected_id)."'", $eo);
		if(!($row = db_fetch_array($res))){
			return error_message($Translation['No records found'], 'biblio_author_view.php', false);
		}
		$urow = $row; /* unsanitized data */
		$hc = new CI_Input();
		$row = $hc->xss_clean($row); /* sanitize data */
		$combo_selection_class->SelectedData = $row['selection_class'];
		$combo_agenttype1->SelectedData = $row['agenttype1'];
		$combo_agenttype2->SelectedData = $row['agenttype2'];
		$combo_gender->SelectedData = $row['gender'];
		$combo_data_evaluation->SelectedData = $row['data_evaluation'];
		$combo_authority_organization->SelectedData = $row['authority_organization'];
	}else{
		$combo_selection_class->SelectedData = $filterer_selection_class;
		$combo_agenttype1->SelectedData = $filterer_agenttype1;
		$combo_agenttype2->SelectedData = $filterer_agenttype2;
		$combo_gender->SelectedData = $filterer_gender;
		$combo_data_evaluation->SelectedData = $filterer_data_evaluation;
		$combo_authority_organization->SelectedData = $filterer_authority_organization;
	}
	$combo_selection_class->HTML = '<span id="selection_class-container' . $rnd1 . '"></span><input type="hidden" name="selection_class" id="selection_class' . $rnd1 . '" value="' . html_attr($combo_selection_class->SelectedData) . '">';
	$combo_selection_class->MatchText = '<span id="selection_class-container-readonly' . $rnd1 . '"></span><input type="hidden" name="selection_class" id="selection_class' . $rnd1 . '" value="' . html_attr($combo_selection_class->SelectedData) . '">';
	$combo_agenttype1->HTML = '<span id="agenttype1-container' . $rnd1 . '"></span><input type="hidden" name="agenttype1" id="agenttype1' . $rnd1 . '" value="' . html_attr($combo_agenttype1->SelectedData) . '">';
	$combo_agenttype1->MatchText = '<span id="agenttype1-container-readonly' . $rnd1 . '"></span><input type="hidden" name="agenttype1" id="agenttype1' . $rnd1 . '" value="' . html_attr($combo_agenttype1->SelectedData) . '">';
	$combo_agenttype2->HTML = '<span id="agenttype2-container' . $rnd1 . '"></span><input type="hidden" name="agenttype2" id="agenttype2' . $rnd1 . '" value="' . html_attr($combo_agenttype2->SelectedData) . '">';
	$combo_agenttype2->MatchText = '<span id="agenttype2-container-readonly' . $rnd1 . '"></span><input type="hidden" name="agenttype2" id="agenttype2' . $rnd1 . '" value="' . html_attr($combo_agenttype2->SelectedData) . '">';
	$combo_gender->HTML = '<span id="gender-container' . $rnd1 . '"></span><input type="hidden" name="gender" id="gender' . $rnd1 . '" value="' . html_attr($combo_gender->SelectedData) . '">';
	$combo_gender->MatchText = '<span id="gender-container-readonly' . $rnd1 . '"></span><input type="hidden" name="gender" id="gender' . $rnd1 . '" value="' . html_attr($combo_gender->SelectedData) . '">';
	$combo_data_evaluation->HTML = '<span id="data_evaluation-container' . $rnd1 . '"></span><input type="hidden" name="data_evaluation" id="data_evaluation' . $rnd1 . '" value="' . html_attr($combo_data_evaluation->SelectedData) . '">';
	$combo_data_evaluation->MatchText = '<span id="data_evaluation-container-readonly' . $rnd1 . '"></span><input type="hidden" name="data_evaluation" id="data_evaluation' . $rnd1 . '" value="' . html_attr($combo_data_evaluation->SelectedData) . '">';
	$combo_authority_organization->HTML = '<span id="authority_organization-container' . $rnd1 . '"></span><input type="hidden" name="authority_organization" id="authority_organization' . $rnd1 . '" value="' . html_attr($combo_authority_organization->SelectedData) . '">';
	$combo_authority_organization->MatchText = '<span id="authority_organization-container-readonly' . $rnd1 . '"></span><input type="hidden" name="authority_organization" id="authority_organization' . $rnd1 . '" value="' . html_attr($combo_authority_organization->SelectedData) . '">';

	ob_start();
	?>

	<script>
		// initial lookup values
		AppGini.current_selection_class__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['selection_class'] : $filterer_selection_class); ?>"};
		AppGini.current_agenttype1__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['agenttype1'] : $filterer_agenttype1); ?>"};
		AppGini.current_agenttype2__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['agenttype2'] : $filterer_agenttype2); ?>"};
		AppGini.current_gender__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['gender'] : $filterer_gender); ?>"};
		AppGini.current_data_evaluation__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['data_evaluation'] : $filterer_data_evaluation); ?>"};
		AppGini.current_authority_organization__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['authority_organization'] : $filterer_authority_organization); ?>"};

		jQuery(function() {
			setTimeout(function(){
				if(typeof(selection_class_reload__RAND__) == 'function') selection_class_reload__RAND__();
				if(typeof(agenttype1_reload__RAND__) == 'function') agenttype1_reload__RAND__();
				if(typeof(agenttype2_reload__RAND__) == 'function') agenttype2_reload__RAND__();
				if(typeof(gender_reload__RAND__) == 'function') gender_reload__RAND__();
				if(typeof(data_evaluation_reload__RAND__) == 'function') data_evaluation_reload__RAND__();
				if(typeof(authority_organization_reload__RAND__) == 'function') authority_organization_reload__RAND__();
			}, 10); /* we need to slightly delay client-side execution of the above code to allow AppGini.ajaxCache to work */
		});
		function selection_class_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#selection_class-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_selection_class__RAND__.value, t: 'biblio_author', f: 'selection_class' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="selection_class"]').val(resp.results[0].id);
							$j('[id=selection_class-container-readonly__RAND__]').html('<span id="selection_class-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_agent_selection_view_parent]').hide(); }else{ $j('.btn[id=class_agent_selection_view_parent]').show(); }


							if(typeof(selection_class_update_autofills__RAND__) == 'function') selection_class_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ /* */ return { s: term, p: page, t: 'biblio_author', f: 'selection_class' }; },
					results: function(resp, page){ /* */ return resp; }
				},
				escapeMarkup: function(str){ /* */ return str; }
			}).on('change', function(e){
				AppGini.current_selection_class__RAND__.value = e.added.id;
				AppGini.current_selection_class__RAND__.text = e.added.text;
				$j('[name="selection_class"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_agent_selection_view_parent]').hide(); }else{ $j('.btn[id=class_agent_selection_view_parent]').show(); }


				if(typeof(selection_class_update_autofills__RAND__) == 'function') selection_class_update_autofills__RAND__();
			});

			if(!$j("#selection_class-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_selection_class__RAND__.value, t: 'biblio_author', f: 'selection_class' },
					success: function(resp){
						$j('[name="selection_class"]').val(resp.results[0].id);
						$j('[id=selection_class-container-readonly__RAND__]').html('<span id="selection_class-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_agent_selection_view_parent]').hide(); }else{ $j('.btn[id=class_agent_selection_view_parent]').show(); }

						if(typeof(selection_class_update_autofills__RAND__) == 'function') selection_class_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_selection_class__RAND__.value, t: 'biblio_author', f: 'selection_class' },
				success: function(resp){
					$j('[id=selection_class-container__RAND__], [id=selection_class-container-readonly__RAND__]').html('<span id="selection_class-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_agent_selection_view_parent]').hide(); }else{ $j('.btn[id=class_agent_selection_view_parent]').show(); }

					if(typeof(selection_class_update_autofills__RAND__) == 'function') selection_class_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function agenttype1_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#agenttype1-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_agenttype1__RAND__.value, t: 'biblio_author', f: 'agenttype1' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="agenttype1"]').val(resp.results[0].id);
							$j('[id=agenttype1-container-readonly__RAND__]').html('<span id="agenttype1-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_agent_type1_view_parent]').hide(); }else{ $j('.btn[id=class_agent_type1_view_parent]').show(); }


							if(typeof(agenttype1_update_autofills__RAND__) == 'function') agenttype1_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ /* */ return { s: term, p: page, t: 'biblio_author', f: 'agenttype1' }; },
					results: function(resp, page){ /* */ return resp; }
				},
				escapeMarkup: function(str){ /* */ return str; }
			}).on('change', function(e){
				AppGini.current_agenttype1__RAND__.value = e.added.id;
				AppGini.current_agenttype1__RAND__.text = e.added.text;
				$j('[name="agenttype1"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_agent_type1_view_parent]').hide(); }else{ $j('.btn[id=class_agent_type1_view_parent]').show(); }


				if(typeof(agenttype1_update_autofills__RAND__) == 'function') agenttype1_update_autofills__RAND__();
			});

			if(!$j("#agenttype1-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_agenttype1__RAND__.value, t: 'biblio_author', f: 'agenttype1' },
					success: function(resp){
						$j('[name="agenttype1"]').val(resp.results[0].id);
						$j('[id=agenttype1-container-readonly__RAND__]').html('<span id="agenttype1-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_agent_type1_view_parent]').hide(); }else{ $j('.btn[id=class_agent_type1_view_parent]').show(); }

						if(typeof(agenttype1_update_autofills__RAND__) == 'function') agenttype1_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_agenttype1__RAND__.value, t: 'biblio_author', f: 'agenttype1' },
				success: function(resp){
					$j('[id=agenttype1-container__RAND__], [id=agenttype1-container-readonly__RAND__]').html('<span id="agenttype1-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_agent_type1_view_parent]').hide(); }else{ $j('.btn[id=class_agent_type1_view_parent]').show(); }

					if(typeof(agenttype1_update_autofills__RAND__) == 'function') agenttype1_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function agenttype2_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#agenttype2-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_agenttype2__RAND__.value, t: 'biblio_author', f: 'agenttype2' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="agenttype2"]').val(resp.results[0].id);
							$j('[id=agenttype2-container-readonly__RAND__]').html('<span id="agenttype2-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_agent_type2_view_parent]').hide(); }else{ $j('.btn[id=class_agent_type2_view_parent]').show(); }


							if(typeof(agenttype2_update_autofills__RAND__) == 'function') agenttype2_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ /* */ return { s: term, p: page, t: 'biblio_author', f: 'agenttype2' }; },
					results: function(resp, page){ /* */ return resp; }
				},
				escapeMarkup: function(str){ /* */ return str; }
			}).on('change', function(e){
				AppGini.current_agenttype2__RAND__.value = e.added.id;
				AppGini.current_agenttype2__RAND__.text = e.added.text;
				$j('[name="agenttype2"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_agent_type2_view_parent]').hide(); }else{ $j('.btn[id=class_agent_type2_view_parent]').show(); }


				if(typeof(agenttype2_update_autofills__RAND__) == 'function') agenttype2_update_autofills__RAND__();
			});

			if(!$j("#agenttype2-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_agenttype2__RAND__.value, t: 'biblio_author', f: 'agenttype2' },
					success: function(resp){
						$j('[name="agenttype2"]').val(resp.results[0].id);
						$j('[id=agenttype2-container-readonly__RAND__]').html('<span id="agenttype2-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_agent_type2_view_parent]').hide(); }else{ $j('.btn[id=class_agent_type2_view_parent]').show(); }

						if(typeof(agenttype2_update_autofills__RAND__) == 'function') agenttype2_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_agenttype2__RAND__.value, t: 'biblio_author', f: 'agenttype2' },
				success: function(resp){
					$j('[id=agenttype2-container__RAND__], [id=agenttype2-container-readonly__RAND__]').html('<span id="agenttype2-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_agent_type2_view_parent]').hide(); }else{ $j('.btn[id=class_agent_type2_view_parent]').show(); }

					if(typeof(agenttype2_update_autofills__RAND__) == 'function') agenttype2_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function gender_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#gender-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_gender__RAND__.value, t: 'biblio_author', f: 'gender' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="gender"]').val(resp.results[0].id);
							$j('[id=gender-container-readonly__RAND__]').html('<span id="gender-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_gender_view_parent]').hide(); }else{ $j('.btn[id=class_gender_view_parent]').show(); }


							if(typeof(gender_update_autofills__RAND__) == 'function') gender_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ /* */ return { s: term, p: page, t: 'biblio_author', f: 'gender' }; },
					results: function(resp, page){ /* */ return resp; }
				},
				escapeMarkup: function(str){ /* */ return str; }
			}).on('change', function(e){
				AppGini.current_gender__RAND__.value = e.added.id;
				AppGini.current_gender__RAND__.text = e.added.text;
				$j('[name="gender"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_gender_view_parent]').hide(); }else{ $j('.btn[id=class_gender_view_parent]').show(); }


				if(typeof(gender_update_autofills__RAND__) == 'function') gender_update_autofills__RAND__();
			});

			if(!$j("#gender-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_gender__RAND__.value, t: 'biblio_author', f: 'gender' },
					success: function(resp){
						$j('[name="gender"]').val(resp.results[0].id);
						$j('[id=gender-container-readonly__RAND__]').html('<span id="gender-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_gender_view_parent]').hide(); }else{ $j('.btn[id=class_gender_view_parent]').show(); }

						if(typeof(gender_update_autofills__RAND__) == 'function') gender_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_gender__RAND__.value, t: 'biblio_author', f: 'gender' },
				success: function(resp){
					$j('[id=gender-container__RAND__], [id=gender-container-readonly__RAND__]').html('<span id="gender-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_gender_view_parent]').hide(); }else{ $j('.btn[id=class_gender_view_parent]').show(); }

					if(typeof(gender_update_autofills__RAND__) == 'function') gender_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function data_evaluation_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#data_evaluation-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_data_evaluation__RAND__.value, t: 'biblio_author', f: 'data_evaluation' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="data_evaluation"]').val(resp.results[0].id);
							$j('[id=data_evaluation-container-readonly__RAND__]').html('<span id="data_evaluation-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_evaluation_view_parent]').hide(); }else{ $j('.btn[id=class_evaluation_view_parent]').show(); }


							if(typeof(data_evaluation_update_autofills__RAND__) == 'function') data_evaluation_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ /* */ return { s: term, p: page, t: 'biblio_author', f: 'data_evaluation' }; },
					results: function(resp, page){ /* */ return resp; }
				},
				escapeMarkup: function(str){ /* */ return str; }
			}).on('change', function(e){
				AppGini.current_data_evaluation__RAND__.value = e.added.id;
				AppGini.current_data_evaluation__RAND__.text = e.added.text;
				$j('[name="data_evaluation"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_evaluation_view_parent]').hide(); }else{ $j('.btn[id=class_evaluation_view_parent]').show(); }


				if(typeof(data_evaluation_update_autofills__RAND__) == 'function') data_evaluation_update_autofills__RAND__();
			});

			if(!$j("#data_evaluation-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_data_evaluation__RAND__.value, t: 'biblio_author', f: 'data_evaluation' },
					success: function(resp){
						$j('[name="data_evaluation"]').val(resp.results[0].id);
						$j('[id=data_evaluation-container-readonly__RAND__]').html('<span id="data_evaluation-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_evaluation_view_parent]').hide(); }else{ $j('.btn[id=class_evaluation_view_parent]').show(); }

						if(typeof(data_evaluation_update_autofills__RAND__) == 'function') data_evaluation_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_data_evaluation__RAND__.value, t: 'biblio_author', f: 'data_evaluation' },
				success: function(resp){
					$j('[id=data_evaluation-container__RAND__], [id=data_evaluation-container-readonly__RAND__]').html('<span id="data_evaluation-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_evaluation_view_parent]').hide(); }else{ $j('.btn[id=class_evaluation_view_parent]').show(); }

					if(typeof(data_evaluation_update_autofills__RAND__) == 'function') data_evaluation_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function authority_organization_reload__RAND__(){
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint){ ?>

			$j("#authority_organization-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c){
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_authority_organization__RAND__.value, t: 'biblio_author', f: 'authority_organization' },
						success: function(resp){
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="authority_organization"]').val(resp.results[0].id);
							$j('[id=authority_organization-container-readonly__RAND__]').html('<span id="authority_organization-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_authority_agent_view_parent]').hide(); }else{ $j('.btn[id=class_authority_agent_view_parent]').show(); }


							if(typeof(authority_organization_update_autofills__RAND__) == 'function') authority_organization_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term){ /* */ return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page){ /* */ return { s: term, p: page, t: 'biblio_author', f: 'authority_organization' }; },
					results: function(resp, page){ /* */ return resp; }
				},
				escapeMarkup: function(str){ /* */ return str; }
			}).on('change', function(e){
				AppGini.current_authority_organization__RAND__.value = e.added.id;
				AppGini.current_authority_organization__RAND__.text = e.added.text;
				$j('[name="authority_organization"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_authority_agent_view_parent]').hide(); }else{ $j('.btn[id=class_authority_agent_view_parent]').show(); }


				if(typeof(authority_organization_update_autofills__RAND__) == 'function') authority_organization_update_autofills__RAND__();
			});

			if(!$j("#authority_organization-container__RAND__").length){
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_authority_organization__RAND__.value, t: 'biblio_author', f: 'authority_organization' },
					success: function(resp){
						$j('[name="authority_organization"]').val(resp.results[0].id);
						$j('[id=authority_organization-container-readonly__RAND__]').html('<span id="authority_organization-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_authority_agent_view_parent]').hide(); }else{ $j('.btn[id=class_authority_agent_view_parent]').show(); }

						if(typeof(authority_organization_update_autofills__RAND__) == 'function') authority_organization_update_autofills__RAND__();
					}
				});
			}

		<?php }else{ ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_authority_organization__RAND__.value, t: 'biblio_author', f: 'authority_organization' },
				success: function(resp){
					$j('[id=authority_organization-container__RAND__], [id=authority_organization-container-readonly__RAND__]').html('<span id="authority_organization-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>'){ $j('.btn[id=class_authority_agent_view_parent]').hide(); }else{ $j('.btn[id=class_authority_agent_view_parent]').show(); }

					if(typeof(authority_organization_update_autofills__RAND__) == 'function') authority_organization_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
	</script>
	<?php

	$lookups = str_replace('__RAND__', $rnd1, ob_get_contents());
	ob_end_clean();


	// code for template based detail view forms

	// open the detail view template
	if($dvprint){
		$template_file = is_file("./{$TemplateDVP}") ? "./{$TemplateDVP}" : './templates/biblio_author_templateDVP.html';
		$templateCode = @file_get_contents($template_file);
	}else{
		$template_file = is_file("./{$TemplateDV}") ? "./{$TemplateDV}" : './templates/biblio_author_templateDV.html';
		$templateCode = @file_get_contents($template_file);
	}

	// process form title
	$templateCode = str_replace('<%%DETAIL_VIEW_TITLE%%>', 'Detail View', $templateCode);
	$templateCode = str_replace('<%%RND1%%>', $rnd1, $templateCode);
	$templateCode = str_replace('<%%EMBEDDED%%>', ($_REQUEST['Embedded'] ? 'Embedded=1' : ''), $templateCode);
	// process buttons
	if($AllowInsert){
		if(!$selected_id) $templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-success" id="insert" name="insert_x" value="1" onclick="return biblio_author_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save New'] . '</button>', $templateCode);
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="insert" name="insert_x" value="1" onclick="return biblio_author_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save As Copy'] . '</button>', $templateCode);
	}else{
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '', $templateCode);
	}

	// 'Back' button action
	if($_REQUEST['Embedded']){
		$backAction = 'AppGini.closeParentModal(); return false;';
	}else{
		$backAction = '$j(\'form\').eq(0).attr(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;';
	}

	if($selected_id){
		if(!$_REQUEST['Embedded']) $templateCode = str_replace('<%%DVPRINT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="dvprint" name="dvprint_x" value="1" onclick="$j(\'form\').eq(0).prop(\'novalidate\', true); document.myform.reset(); return true;" title="' . html_attr($Translation['Print Preview']) . '"><i class="glyphicon glyphicon-print"></i> ' . $Translation['Print Preview'] . '</button>', $templateCode);
		if($AllowUpdate){
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '<button type="submit" class="btn btn-success btn-lg" id="update" name="update_x" value="1" onclick="return biblio_author_validateData();" title="' . html_attr($Translation['Save Changes']) . '"><i class="glyphicon glyphicon-ok"></i> ' . $Translation['Save Changes'] . '</button>', $templateCode);
		}else{
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		}
		if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3){ // allow delete?
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '<button type="submit" class="btn btn-danger" id="delete" name="delete_x" value="1" onclick="return confirm(\'' . $Translation['are you sure?'] . '\');" title="' . html_attr($Translation['Delete']) . '"><i class="glyphicon glyphicon-trash"></i> ' . $Translation['Delete'] . '</button>', $templateCode);
		}else{
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		}
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>', $templateCode);
	}else{
		$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', ($ShowCancel ? '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>' : ''), $templateCode);
	}

	// set records to read only if user can't insert new records and can't edit current record
	if(($selected_id && !$AllowUpdate && !$AllowInsert) || (!$selected_id && !$AllowInsert)){
		$jsReadOnly .= "\tjQuery('#memberID').replaceWith('<div class=\"form-control-static\" id=\"memberID\">' + (jQuery('#memberID').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#img').replaceWith('<div class=\"form-control-static\" id=\"img\">' + (jQuery('#img').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#groupID').replaceWith('<div class=\"form-control-static\" id=\"groupID\">' + (jQuery('#groupID').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#selection_class').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#selection_class_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#agenttype1').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#agenttype1_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#agenttype2').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#agenttype2_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#gender').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#gender_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#last_name').replaceWith('<div class=\"form-control-static\" id=\"last_name\">' + (jQuery('#last_name').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#first_name').replaceWith('<div class=\"form-control-static\" id=\"first_name\">' + (jQuery('#first_name').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#other_name').replaceWith('<div class=\"form-control-static\" id=\"other_name\">' + (jQuery('#other_name').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#birthday').parents('.input-group').replaceWith('<div class=\"form-control-static\" id=\"birthday\">' + (jQuery('#birthday').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#birth_location').replaceWith('<div class=\"form-control-static\" id=\"birth_location\">' + (jQuery('#birth_location').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#birth_location_map').replaceWith('');\n";
		$jsReadOnly .= "\tjQuery('#birth_location_map, #birth_location_map-edit-link').hide();\n";
		$jsReadOnly .= "\tjQuery('#deathday').parents('.input-group').replaceWith('<div class=\"form-control-static\" id=\"deathday\">' + (jQuery('#deathday').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#death_location').replaceWith('<div class=\"form-control-static\" id=\"death_location\">' + (jQuery('#death_location').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#workplace').replaceWith('<div class=\"form-control-static\" id=\"workplace\">' + (jQuery('#workplace').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#knows').replaceWith('<div class=\"form-control-static\" id=\"knows\">' + (jQuery('#knows').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#shortbio').replaceWith('<div class=\"form-control-static\" id=\"shortbio\">' + (jQuery('#shortbio').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#data_evaluation').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#data_evaluation_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#authority_record').replaceWith('<div class=\"form-control-static\" id=\"authority_record\">' + (jQuery('#authority_record').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#authority_organization').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#authority_organization_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('.select2-container').hide();\n";

		$noUploads = true;
	}elseif($AllowInsert){
		$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', true);"; // temporarily disable form change handler
		$locale = isset($Translation['datetimepicker locale']) ? ", locale: '{$Translation['datetimepicker locale']}'" : '';
		$jsEditable .= "\tjQuery('#birthday').addClass('always_shown').parents('.input-group').datetimepicker({ toolbarPlacement: 'top', sideBySide: true, showClear: true, showTodayButton: true, showClose: true, icons: { close: 'glyphicon glyphicon-ok' }, format: AppGini.datetimeFormat('dt') {$locale} });";
		$locale = isset($Translation['datetimepicker locale']) ? ", locale: '{$Translation['datetimepicker locale']}'" : '';
		$jsEditable .= "\tjQuery('#deathday').addClass('always_shown').parents('.input-group').datetimepicker({ toolbarPlacement: 'top', sideBySide: true, showClear: true, showTodayButton: true, showClose: true, icons: { close: 'glyphicon glyphicon-ok' }, format: AppGini.datetimeFormat('dt') {$locale} });";
			$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', false);"; // re-enable form change handler
	}

	// process combos
	$templateCode = str_replace('<%%COMBO(selection_class)%%>', $combo_selection_class->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(selection_class)%%>', $combo_selection_class->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(selection_class)%%>', urlencode($combo_selection_class->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(agenttype1)%%>', $combo_agenttype1->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(agenttype1)%%>', $combo_agenttype1->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(agenttype1)%%>', urlencode($combo_agenttype1->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(agenttype2)%%>', $combo_agenttype2->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(agenttype2)%%>', $combo_agenttype2->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(agenttype2)%%>', urlencode($combo_agenttype2->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(gender)%%>', $combo_gender->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(gender)%%>', $combo_gender->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(gender)%%>', urlencode($combo_gender->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(data_evaluation)%%>', $combo_data_evaluation->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(data_evaluation)%%>', $combo_data_evaluation->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(data_evaluation)%%>', urlencode($combo_data_evaluation->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(authority_organization)%%>', $combo_authority_organization->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(authority_organization)%%>', $combo_authority_organization->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(authority_organization)%%>', urlencode($combo_authority_organization->MatchText), $templateCode);

	/* lookup fields array: 'lookup field name' => array('parent table name', 'lookup field caption') */
	$lookup_fields = array(  'selection_class' => array('class_agent_selection', 'Selection class'), 'agenttype1' => array('class_agent_type1', 'Agent type 1'), 'agenttype2' => array('class_agent_type2', 'Agent type 2'), 'gender' => array('class_gender', 'Gender'), 'data_evaluation' => array('class_evaluation', 'Data evaluation'), 'authority_organization' => array('class_authority_agent', 'Authority organization'));
	foreach($lookup_fields as $luf => $ptfc){
		$pt_perm = getTablePermissions($ptfc[0]);

		// process foreign key links
		if($pt_perm['view'] || $pt_perm['edit']){
			$templateCode = str_replace("<%%PLINK({$luf})%%>", '<button type="button" class="btn btn-default view_parent hspacer-md" id="' . $ptfc[0] . '_view_parent" title="' . html_attr($Translation['View'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-eye-open"></i></button>', $templateCode);
		}

		// if user has insert permission to parent table of a lookup field, put an add new button
		if($pt_perm['insert'] && !$_REQUEST['Embedded']){
			$templateCode = str_replace("<%%ADDNEW({$ptfc[0]})%%>", '<button type="button" class="btn btn-success add_new_parent hspacer-md" id="' . $ptfc[0] . '_add_new" title="' . html_attr($Translation['Add New'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-plus-sign"></i></button>', $templateCode);
		}
	}

	// process images
	$templateCode = str_replace('<%%UPLOADFILE(id)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(memberID)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(img)%%>', ($noUploads ? '' : '<input type=hidden name=MAX_FILE_SIZE value=102400>'.$Translation['upload image'].' <input type="file" name="img" id="img">'), $templateCode);
	if($AllowUpdate && $row['img'] != ''){
		$templateCode = str_replace('<%%REMOVEFILE(img)%%>', '<br><input type="checkbox" name="img_remove" id="img_remove" value="1"> <label for="img_remove" style="color: red; font-weight: bold;">'.$Translation['remove image'].'</label>', $templateCode);
	}else{
		$templateCode = str_replace('<%%REMOVEFILE(img)%%>', '', $templateCode);
	}
	$templateCode = str_replace('<%%UPLOADFILE(groupID)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(selection_class)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(agenttype1)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(agenttype2)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(gender)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(last_name)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(first_name)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(other_name)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(birthday)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(birth_location)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(birth_location_map)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(deathday)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(death_location)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(workplace)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(knows)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(shortbio)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(data_evaluation)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(authority_record)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(authority_organization)%%>', '', $templateCode);

	// process values
	if($selected_id){
		if( $dvprint) $templateCode = str_replace('<%%VALUE(id)%%>', safe_html($urow['id']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(id)%%>', html_attr($row['id']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(id)%%>', urlencode($urow['id']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(memberID)%%>', safe_html($urow['memberID']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(memberID)%%>', html_attr($row['memberID']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(memberID)%%>', urlencode($urow['memberID']), $templateCode);
		$row['img'] = ($row['img'] != '' ? $row['img'] : 'blank.gif');
		if( $dvprint) $templateCode = str_replace('<%%VALUE(img)%%>', safe_html($urow['img']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(img)%%>', html_attr($row['img']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(img)%%>', urlencode($urow['img']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(groupID)%%>', safe_html($urow['groupID']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(groupID)%%>', html_attr($row['groupID']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(groupID)%%>', urlencode($urow['groupID']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(selection_class)%%>', safe_html($urow['selection_class']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(selection_class)%%>', html_attr($row['selection_class']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(selection_class)%%>', urlencode($urow['selection_class']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(agenttype1)%%>', safe_html($urow['agenttype1']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(agenttype1)%%>', html_attr($row['agenttype1']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(agenttype1)%%>', urlencode($urow['agenttype1']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(agenttype2)%%>', safe_html($urow['agenttype2']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(agenttype2)%%>', html_attr($row['agenttype2']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(agenttype2)%%>', urlencode($urow['agenttype2']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(gender)%%>', safe_html($urow['gender']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(gender)%%>', html_attr($row['gender']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(gender)%%>', urlencode($urow['gender']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(last_name)%%>', safe_html($urow['last_name']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(last_name)%%>', html_attr($row['last_name']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(last_name)%%>', urlencode($urow['last_name']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(first_name)%%>', safe_html($urow['first_name']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(first_name)%%>', html_attr($row['first_name']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(first_name)%%>', urlencode($urow['first_name']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(other_name)%%>', safe_html($urow['other_name']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(other_name)%%>', html_attr($row['other_name']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(other_name)%%>', urlencode($urow['other_name']), $templateCode);
		$templateCode = str_replace('<%%VALUE(birthday)%%>', app_datetime($row['birthday'], 'dt'), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(birthday)%%>', urlencode(app_datetime($urow['birthday'], 'dt')), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(birth_location)%%>', safe_html($urow['birth_location']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(birth_location)%%>', html_attr($row['birth_location']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(birth_location)%%>', urlencode($urow['birth_location']), $templateCode);
		$templateCode = str_replace('<%%VALUE(birth_location_map)%%>', html_attr($row['birth_location_map']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(birth_location_map)%%>', urlencode($urow['birth_location_map']), $templateCode);
		$templateCode = str_replace('<%%GOOGLEMAP(birth_location_map)%%>', get_embed('googlemap', $urow['birth_location_map'], '480', '360'), $templateCode);
		$templateCode = str_replace('<%%GOOGLEMAPTHUMB(birth_location_map)%%>', thisOr(get_embed('googlemap', $urow['birth_location_map'], '480', '360', 'thumbnail_url'), 'blank.gif'), $templateCode);
		$templateCode = str_replace('<%%VALUE(deathday)%%>', app_datetime($row['deathday'], 'dt'), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(deathday)%%>', urlencode(app_datetime($urow['deathday'], 'dt')), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(death_location)%%>', safe_html($urow['death_location']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(death_location)%%>', html_attr($row['death_location']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(death_location)%%>', urlencode($urow['death_location']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(workplace)%%>', safe_html($urow['workplace']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(workplace)%%>', html_attr($row['workplace']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(workplace)%%>', urlencode($urow['workplace']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(knows)%%>', safe_html($urow['knows']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(knows)%%>', html_attr($row['knows']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(knows)%%>', urlencode($urow['knows']), $templateCode);
		if($dvprint || (!$AllowUpdate && !$AllowInsert)){
			$templateCode = str_replace('<%%VALUE(shortbio)%%>', safe_html($urow['shortbio']), $templateCode);
		}else{
			$templateCode = str_replace('<%%VALUE(shortbio)%%>', html_attr($row['shortbio']), $templateCode);
		}
		$templateCode = str_replace('<%%URLVALUE(shortbio)%%>', urlencode($urow['shortbio']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(data_evaluation)%%>', safe_html($urow['data_evaluation']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(data_evaluation)%%>', html_attr($row['data_evaluation']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(data_evaluation)%%>', urlencode($urow['data_evaluation']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(authority_record)%%>', safe_html($urow['authority_record']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(authority_record)%%>', html_attr($row['authority_record']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(authority_record)%%>', urlencode($urow['authority_record']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(authority_organization)%%>', safe_html($urow['authority_organization']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(authority_organization)%%>', html_attr($row['authority_organization']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(authority_organization)%%>', urlencode($urow['authority_organization']), $templateCode);
	}else{
		$templateCode = str_replace('<%%VALUE(id)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(id)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(memberID)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(memberID)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(img)%%>', 'blank.gif', $templateCode);
		$templateCode = str_replace('<%%VALUE(groupID)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(groupID)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(selection_class)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(selection_class)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(agenttype1)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(agenttype1)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(agenttype2)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(agenttype2)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(gender)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(gender)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(last_name)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(last_name)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(first_name)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(first_name)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(other_name)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(other_name)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(birthday)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(birthday)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(birth_location)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(birth_location)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(birth_location_map)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(birth_location_map)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%GOOGLEMAP(birth_location_map)%%>', '', $templateCode);
		$templateCode = str_replace('<%%GOOGLEMAPTHUMB(birth_location_map)%%>', 'blank.gif', $templateCode);
		$templateCode = str_replace('<%%VALUE(deathday)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(deathday)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(death_location)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(death_location)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(workplace)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(workplace)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(knows)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(knows)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(shortbio)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(shortbio)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(data_evaluation)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(data_evaluation)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(authority_record)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(authority_record)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(authority_organization)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(authority_organization)%%>', urlencode(''), $templateCode);
	}

	// process translations
	foreach($Translation as $symbol=>$trans){
		$templateCode = str_replace("<%%TRANSLATION($symbol)%%>", $trans, $templateCode);
	}

	// clear scrap
	$templateCode = str_replace('<%%', '<!-- ', $templateCode);
	$templateCode = str_replace('%%>', ' -->', $templateCode);

	// hide links to inaccessible tables
	if($_REQUEST['dvprint_x'] == ''){
		$templateCode .= "\n\n<script>\$j(function(){\n";
		$arrTables = getTableList();
		foreach($arrTables as $name => $caption){
			$templateCode .= "\t\$j('#{$name}_link').removeClass('hidden');\n";
			$templateCode .= "\t\$j('#xs_{$name}_link').removeClass('hidden');\n";
		}

		$templateCode .= $jsReadOnly;
		$templateCode .= $jsEditable;

		if(!$selected_id){
		}

		$templateCode.="\n});</script>\n";
	}

	// ajaxed auto-fill fields
	$templateCode .= '<script>';
	$templateCode .= '$j(function() {';


	$templateCode.="});";
	$templateCode.="</script>";
	$templateCode .= $lookups;

	// handle enforced parent values for read-only lookup fields

	// don't include blank images in lightbox gallery
	$templateCode = preg_replace('/blank.gif" data-lightbox=".*?"/', 'blank.gif"', $templateCode);

	// don't display empty email links
	$templateCode=preg_replace('/<a .*?href="mailto:".*?<\/a>/', '', $templateCode);

	/* default field values */
	$rdata = $jdata = get_defaults('biblio_author');
	if($selected_id){
		$jdata = get_joined_record('biblio_author', $selected_id);
		if($jdata === false) $jdata = get_defaults('biblio_author');
		$rdata = $row;
	}
	$templateCode .= loadView('biblio_author-ajax-cache', array('rdata' => $rdata, 'jdata' => $jdata));

	// hook: biblio_author_dv
	if(function_exists('biblio_author_dv')){
		$args=array();
		biblio_author_dv(($selected_id ? $selected_id : FALSE), getMemberInfo(), $templateCode, $args);
	}

	return $templateCode;
}
?>