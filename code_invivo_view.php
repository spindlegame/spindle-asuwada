<?php
// This script and data application were generated by AppGini 5.76
// Download AppGini for free from https://bigprof.com/appgini/download/

	$currDir=dirname(__FILE__);
	include("$currDir/defaultLang.php");
	include("$currDir/language.php");
	include("$currDir/lib.php");
	@include("$currDir/hooks/code_invivo.php");
	include("$currDir/code_invivo_dml.php");

	// mm: can the current member access this page?
	$perm=getTablePermissions('code_invivo');
	if(!$perm[0]){
		echo error_message($Translation['tableAccessDenied'], false);
		echo '<script>setTimeout("window.location=\'index.php?signOut=1\'", 2000);</script>';
		exit;
	}

	$x = new DataList;
	$x->TableName = "code_invivo";

	// Fields that can be displayed in the table view
	$x->QueryFieldsTV = array(   
		"`code_invivo`.`id`" => "id",
		"IF(    CHAR_LENGTH(`biblio_author1`.`id`) || CHAR_LENGTH(`biblio_author1`.`id`), CONCAT_WS('',   `biblio_author1`.`id`, '   ', `biblio_author1`.`id`), '') /* Author */" => "author",
		"IF(    CHAR_LENGTH(`biblio_doc1`.`id`) || CHAR_LENGTH(`biblio_doc1`.`title`), CONCAT_WS('',   `biblio_doc1`.`id`, '   ', `biblio_doc1`.`title`), '') /* Bibliography */" => "bibliography",
		"IF(    CHAR_LENGTH(`biblio_transcript1`.`id`) || CHAR_LENGTH(`biblio_transcript1`.`transcript_title`), CONCAT_WS('',   `biblio_transcript1`.`id`, '   ', `biblio_transcript1`.`transcript_title`), '') /* Transcript */" => "transcript",
		"IF(    CHAR_LENGTH(`biblio_token1`.`id`) || CHAR_LENGTH(`biblio_token1`.`token_sequence`), CONCAT_WS('',   `biblio_token1`.`id`, '   ', `biblio_token1`.`token_sequence`), '') /* Token_sequence */" => "token_sequence",
		"IF(    CHAR_LENGTH(`biblio_token1`.`token`), CONCAT_WS('',   `biblio_token1`.`token`), '') /* Token */" => "token",
		"`code_invivo`.`invivo`" => "invivo",
		"if(`code_invivo`.`start_date`,date_format(`code_invivo`.`start_date`,'%d/%m/%Y %H:%i'),'')" => "start_date",
		"if(`code_invivo`.`end_date`,date_format(`code_invivo`.`end_date`,'%d/%m/%Y %H:%i'),'')" => "end_date",
		"`code_invivo`.`person`" => "person",
		"`code_invivo`.`place`" => "place",
		"`code_invivo`.`freecode`" => "freecode"
	);
	// mapping incoming sort by requests to actual query fields
	$x->SortFields = array(   
		1 => '`code_invivo`.`id`',
		2 => 2,
		3 => 3,
		4 => 4,
		5 => 5,
		6 => '`biblio_token1`.`token`',
		7 => 7,
		8 => '`code_invivo`.`start_date`',
		9 => '`code_invivo`.`end_date`',
		10 => 10,
		11 => 11,
		12 => 12
	);

	// Fields that can be displayed in the csv file
	$x->QueryFieldsCSV = array(   
		"`code_invivo`.`id`" => "id",
		"IF(    CHAR_LENGTH(`biblio_author1`.`id`) || CHAR_LENGTH(`biblio_author1`.`id`), CONCAT_WS('',   `biblio_author1`.`id`, '   ', `biblio_author1`.`id`), '') /* Author */" => "author",
		"IF(    CHAR_LENGTH(`biblio_doc1`.`id`) || CHAR_LENGTH(`biblio_doc1`.`title`), CONCAT_WS('',   `biblio_doc1`.`id`, '   ', `biblio_doc1`.`title`), '') /* Bibliography */" => "bibliography",
		"IF(    CHAR_LENGTH(`biblio_transcript1`.`id`) || CHAR_LENGTH(`biblio_transcript1`.`transcript_title`), CONCAT_WS('',   `biblio_transcript1`.`id`, '   ', `biblio_transcript1`.`transcript_title`), '') /* Transcript */" => "transcript",
		"IF(    CHAR_LENGTH(`biblio_token1`.`id`) || CHAR_LENGTH(`biblio_token1`.`token_sequence`), CONCAT_WS('',   `biblio_token1`.`id`, '   ', `biblio_token1`.`token_sequence`), '') /* Token_sequence */" => "token_sequence",
		"IF(    CHAR_LENGTH(`biblio_token1`.`token`), CONCAT_WS('',   `biblio_token1`.`token`), '') /* Token */" => "token",
		"`code_invivo`.`invivo`" => "invivo",
		"if(`code_invivo`.`start_date`,date_format(`code_invivo`.`start_date`,'%d/%m/%Y %H:%i'),'')" => "start_date",
		"if(`code_invivo`.`end_date`,date_format(`code_invivo`.`end_date`,'%d/%m/%Y %H:%i'),'')" => "end_date",
		"`code_invivo`.`person`" => "person",
		"`code_invivo`.`place`" => "place",
		"`code_invivo`.`freecode`" => "freecode"
	);
	// Fields that can be filtered
	$x->QueryFieldsFilters = array(   
		"`code_invivo`.`id`" => "ID",
		"IF(    CHAR_LENGTH(`biblio_author1`.`id`) || CHAR_LENGTH(`biblio_author1`.`id`), CONCAT_WS('',   `biblio_author1`.`id`, '   ', `biblio_author1`.`id`), '') /* Author */" => "Author",
		"IF(    CHAR_LENGTH(`biblio_doc1`.`id`) || CHAR_LENGTH(`biblio_doc1`.`title`), CONCAT_WS('',   `biblio_doc1`.`id`, '   ', `biblio_doc1`.`title`), '') /* Bibliography */" => "Bibliography",
		"IF(    CHAR_LENGTH(`biblio_transcript1`.`id`) || CHAR_LENGTH(`biblio_transcript1`.`transcript_title`), CONCAT_WS('',   `biblio_transcript1`.`id`, '   ', `biblio_transcript1`.`transcript_title`), '') /* Transcript */" => "Transcript",
		"IF(    CHAR_LENGTH(`biblio_token1`.`id`) || CHAR_LENGTH(`biblio_token1`.`token_sequence`), CONCAT_WS('',   `biblio_token1`.`id`, '   ', `biblio_token1`.`token_sequence`), '') /* Token_sequence */" => "Token_sequence",
		"IF(    CHAR_LENGTH(`biblio_token1`.`token`), CONCAT_WS('',   `biblio_token1`.`token`), '') /* Token */" => "Token",
		"`code_invivo`.`invivo`" => "Invivo",
		"`code_invivo`.`start_date`" => "Start date",
		"`code_invivo`.`end_date`" => "End date",
		"`code_invivo`.`person`" => "Person",
		"`code_invivo`.`place`" => "Place",
		"`code_invivo`.`freecode`" => "Freecode"
	);

	// Fields that can be quick searched
	$x->QueryFieldsQS = array(   
		"`code_invivo`.`id`" => "id",
		"IF(    CHAR_LENGTH(`biblio_author1`.`id`) || CHAR_LENGTH(`biblio_author1`.`id`), CONCAT_WS('',   `biblio_author1`.`id`, '   ', `biblio_author1`.`id`), '') /* Author */" => "author",
		"IF(    CHAR_LENGTH(`biblio_doc1`.`id`) || CHAR_LENGTH(`biblio_doc1`.`title`), CONCAT_WS('',   `biblio_doc1`.`id`, '   ', `biblio_doc1`.`title`), '') /* Bibliography */" => "bibliography",
		"IF(    CHAR_LENGTH(`biblio_transcript1`.`id`) || CHAR_LENGTH(`biblio_transcript1`.`transcript_title`), CONCAT_WS('',   `biblio_transcript1`.`id`, '   ', `biblio_transcript1`.`transcript_title`), '') /* Transcript */" => "transcript",
		"IF(    CHAR_LENGTH(`biblio_token1`.`id`) || CHAR_LENGTH(`biblio_token1`.`token_sequence`), CONCAT_WS('',   `biblio_token1`.`id`, '   ', `biblio_token1`.`token_sequence`), '') /* Token_sequence */" => "token_sequence",
		"IF(    CHAR_LENGTH(`biblio_token1`.`token`), CONCAT_WS('',   `biblio_token1`.`token`), '') /* Token */" => "token",
		"`code_invivo`.`invivo`" => "invivo",
		"if(`code_invivo`.`start_date`,date_format(`code_invivo`.`start_date`,'%d/%m/%Y %H:%i'),'')" => "start_date",
		"if(`code_invivo`.`end_date`,date_format(`code_invivo`.`end_date`,'%d/%m/%Y %H:%i'),'')" => "end_date",
		"`code_invivo`.`person`" => "person",
		"`code_invivo`.`place`" => "place",
		"`code_invivo`.`freecode`" => "freecode"
	);

	// Lookup fields that can be used as filterers
	$x->filterers = array(  'author' => 'Author', 'bibliography' => 'Bibliography', 'transcript' => 'Transcript', 'token_sequence' => 'Token_sequence');

	$x->QueryFrom = "`code_invivo` LEFT JOIN `biblio_author` as biblio_author1 ON `biblio_author1`.`id`=`code_invivo`.`author` LEFT JOIN `biblio_doc` as biblio_doc1 ON `biblio_doc1`.`id`=`code_invivo`.`bibliography` LEFT JOIN `biblio_transcript` as biblio_transcript1 ON `biblio_transcript1`.`id`=`code_invivo`.`transcript` LEFT JOIN `biblio_token` as biblio_token1 ON `biblio_token1`.`id`=`code_invivo`.`token_sequence` ";
	$x->QueryWhere = '';
	$x->QueryOrder = '';

	$x->AllowSelection = 1;
	$x->HideTableView = ($perm[2]==0 ? 1 : 0);
	$x->AllowDelete = $perm[4];
	$x->AllowMassDelete = false;
	$x->AllowInsert = $perm[1];
	$x->AllowUpdate = $perm[3];
	$x->SeparateDV = 1;
	$x->AllowDeleteOfParents = 0;
	$x->AllowFilters = 1;
	$x->AllowSavingFilters = 1;
	$x->AllowSorting = 1;
	$x->AllowNavigation = 1;
	$x->AllowPrinting = 1;
	$x->AllowPrintingDV = 1;
	$x->AllowCSV = 1;
	$x->RecordsPerPage = 10;
	$x->QuickSearch = 1;
	$x->QuickSearchText = $Translation["quick search"];
	$x->ScriptFileName = "code_invivo_view.php";
	$x->RedirectAfterInsert = "code_invivo_view.php";
	$x->TableTitle = "III.1. Invivo";
	$x->TableIcon = "resources/table_icons/book_link.png";
	$x->PrimaryKey = "`code_invivo`.`id`";

	$x->ColWidth   = array(  150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150);
	$x->ColCaption = array("ID", "Author", "Bibliography", "Transcript", "Token_sequence", "Token", "Invivo", "Start date", "End date", "Person", "Place", "Freecode");
	$x->ColFieldName = array('id', 'author', 'bibliography', 'transcript', 'token_sequence', 'token', 'invivo', 'start_date', 'end_date', 'person', 'place', 'freecode');
	$x->ColNumber  = array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12);

	// template paths below are based on the app main directory
	$x->Template = 'templates/code_invivo_templateTV.html';
	$x->SelectedTemplate = 'templates/code_invivo_templateTVS.html';
	$x->TemplateDV = 'templates/code_invivo_templateDV.html';
	$x->TemplateDVP = 'templates/code_invivo_templateDVP.html';

	$x->ShowTableHeader = 1;
	$x->TVClasses = "";
	$x->DVClasses = "";
	$x->HighlightColor = '#FFF0C2';

	// mm: build the query based on current member's permissions
	$DisplayRecords = $_REQUEST['DisplayRecords'];
	if(!in_array($DisplayRecords, array('user', 'group'))){ $DisplayRecords = 'all'; }
	if($perm[2]==1 || ($perm[2]>1 && $DisplayRecords=='user' && !$_REQUEST['NoFilter_x'])){ // view owner only
		$x->QueryFrom.=', membership_userrecords';
		$x->QueryWhere="where `code_invivo`.`id`=membership_userrecords.pkValue and membership_userrecords.tableName='code_invivo' and lcase(membership_userrecords.memberID)='".getLoggedMemberID()."'";
	}elseif($perm[2]==2 || ($perm[2]>2 && $DisplayRecords=='group' && !$_REQUEST['NoFilter_x'])){ // view group only
		$x->QueryFrom.=', membership_userrecords';
		$x->QueryWhere="where `code_invivo`.`id`=membership_userrecords.pkValue and membership_userrecords.tableName='code_invivo' and membership_userrecords.groupID='".getLoggedGroupID()."'";
	}elseif($perm[2]==3){ // view all
		// no further action
	}elseif($perm[2]==0){ // view none
		$x->QueryFields = array("Not enough permissions" => "NEP");
		$x->QueryFrom = '`code_invivo`';
		$x->QueryWhere = '';
		$x->DefaultSortField = '';
	}
	// hook: code_invivo_init
	$render=TRUE;
	if(function_exists('code_invivo_init')){
		$args=array();
		$render=code_invivo_init($x, getMemberInfo(), $args);
	}

	if($render) $x->Render();

	// hook: code_invivo_header
	$headerCode='';
	if(function_exists('code_invivo_header')){
		$args=array();
		$headerCode=code_invivo_header($x->ContentType, getMemberInfo(), $args);
	}  
	if(!$headerCode){
		include_once("$currDir/header.php"); 
	}else{
		ob_start(); include_once("$currDir/header.php"); $dHeader=ob_get_contents(); ob_end_clean();
		echo str_replace('<%%HEADER%%>', $dHeader, $headerCode);
	}

	echo $x->HTML;
	// hook: code_invivo_footer
	$footerCode='';
	if(function_exists('code_invivo_footer')){
		$args=array();
		$footerCode=code_invivo_footer($x->ContentType, getMemberInfo(), $args);
	}  
	if(!$footerCode){
		include_once("$currDir/footer.php"); 
	}else{
		ob_start(); include_once("$currDir/footer.php"); $dFooter=ob_get_contents(); ob_end_clean();
		echo str_replace('<%%FOOTER%%>', $dFooter, $footerCode);
	}
?>