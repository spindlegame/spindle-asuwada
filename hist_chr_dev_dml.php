<?php

// Data functions (insert, update, delete, form) for table hist_chr_dev

// This script and data application were generated by AppGini 5.94
// Download AppGini for free from https://bigprof.com/appgini/download/

function hist_chr_dev_insert(&$error_message = '') {
	global $Translation;

	// mm: can member insert record?
	$arrPerm = getTablePermissions('hist_chr_dev');
	if(!$arrPerm['insert']) return false;

	$data = [
		'hist_story' => Request::val('hist_story', ''),
		'bio_story' => Request::val('bio_story', ''),
		'agent_id' => Request::val('agent_id', ''),
		'agent_name' => Request::val('agent_name', ''),
		'cw_name' => Request::val('cw_name', ''),
		'dp1_resolve' => Request::val('dp1_resolve', ''),
		'dp2_resolve' => Request::val('dp2_resolve', ''),
		'dp3_resolve' => Request::val('dp3_resolve', ''),
		'mc_resolve' => Request::val('mc_resolve', ''),
		'illust_resolve' => Request::val('illust_resolve', ''),
		'dp3_growth' => Request::val('dp3_growth', ''),
		'mc_growth' => Request::val('mc_growth', ''),
		'illust_growth' => Request::val('illust_growth', ''),
		'dp3_approach' => Request::val('dp3_approach', ''),
		'mc_approach' => Request::val('mc_approach', ''),
		'illust_approach' => Request::val('illust_approach', ''),
		'dp3_psstyle' => Request::val('dp3_psstyle', ''),
		'mc_ps_style' => Request::val('mc_ps_style', ''),
		'illust_ps_style' => Request::val('illust_ps_style', ''),
		'cw_age' => Request::val('cw_age', ''),
		'cw_gender' => Request::val('cw_gender', ''),
		'cw_communication_style' => Request::val('cw_communication_style', ''),
		'cw_background' => Request::val('cw_background', ''),
		'cw_appearance' => Request::val('cw_appearance', ''),
		'cw_relationships' => Request::val('cw_relationships', ''),
		'cw_ambition' => Request::val('cw_ambition', ''),
		'cw_defects' => Request::val('cw_defects', ''),
		'cw_thoughts' => Request::val('cw_thoughts', ''),
		'cw_relatedness' => Request::val('cw_relatedness', ''),
		'cw_restrictions' => Request::val('cw_restrictions', ''),
		'locations' => Request::val('locations', ''),
		'persons' => Request::val('persons', ''),
		'events' => Request::val('events', ''),
		'noetictension' => Request::val('noetictension', ''),
		'illust_nt' => Request::val('illust_nt', ''),
		'impression' => Request::val('impression', ''),
		'illust_im' => Request::val('illust_im', ''),
		'mcs_problem' => Request::val('mcs_problem', ''),
		'illust_mcs_problem' => Request::val('illust_mcs_problem', ''),
		'mcs_solution' => Request::lookup('mcs_problem'),
		'illust_mcs_solution' => Request::val('illust_mcs_solution', ''),
		'mcs_symptom' => Request::lookup('mcs_problem'),
		'illust_mcs_symptom' => Request::val('illust_mcs_symptom', ''),
		'mcs_response' => Request::lookup('mcs_problem'),
		'illust_mcs_response' => Request::val('illust_mcs_response', ''),
	];


	// hook: hist_chr_dev_before_insert
	if(function_exists('hist_chr_dev_before_insert')) {
		$args = [];
		if(!hist_chr_dev_before_insert($data, getMemberInfo(), $args)) {
			if(isset($args['error_message'])) $error_message = $args['error_message'];
			return false;
		}
	}

	$error = '';
	// set empty fields to NULL
	$data = array_map(function($v) { return ($v === '' ? NULL : $v); }, $data);
	insert('hist_chr_dev', backtick_keys_once($data), $error);
	if($error)
		die("{$error}<br><a href=\"#\" onclick=\"history.go(-1);\">{$Translation['< back']}</a>");

	$recID = db_insert_id(db_link());

	update_calc_fields('hist_chr_dev', $recID, calculated_fields()['hist_chr_dev']);

	// hook: hist_chr_dev_after_insert
	if(function_exists('hist_chr_dev_after_insert')) {
		$res = sql("SELECT * FROM `hist_chr_dev` WHERE `id`='" . makeSafe($recID, false) . "' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)) {
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = makeSafe($recID, false);
		$args=[];
		if(!hist_chr_dev_after_insert($data, getMemberInfo(), $args)) { return $recID; }
	}

	// mm: save ownership data
	set_record_owner('hist_chr_dev', $recID, getLoggedMemberID());

	// if this record is a copy of another record, copy children if applicable
	if(!empty($_REQUEST['SelectedID'])) hist_chr_dev_copy_children($recID, $_REQUEST['SelectedID']);

	return $recID;
}

function hist_chr_dev_copy_children($destination_id, $source_id) {
	global $Translation;
	$requests = []; // array of curl handlers for launching insert requests
	$eo = ['silentErrors' => true];
	$safe_sid = makeSafe($source_id);

	// launch requests, asynchronously
	curl_batch($requests);
}

function hist_chr_dev_delete($selected_id, $AllowDeleteOfParents = false, $skipChecks = false) {
	// insure referential integrity ...
	global $Translation;
	$selected_id = makeSafe($selected_id);

	// mm: can member delete record?
	if(!check_record_permission('hist_chr_dev', $selected_id, 'delete')) {
		return $Translation['You don\'t have enough permissions to delete this record'];
	}

	// hook: hist_chr_dev_before_delete
	if(function_exists('hist_chr_dev_before_delete')) {
		$args = [];
		if(!hist_chr_dev_before_delete($selected_id, $skipChecks, getMemberInfo(), $args))
			return $Translation['Couldn\'t delete this record'] . (
				!empty($args['error_message']) ?
					'<div class="text-bold">' . strip_tags($args['error_message']) . '</div>'
					: '' 
			);
	}

	sql("DELETE FROM `hist_chr_dev` WHERE `id`='{$selected_id}'", $eo);

	// hook: hist_chr_dev_after_delete
	if(function_exists('hist_chr_dev_after_delete')) {
		$args = [];
		hist_chr_dev_after_delete($selected_id, getMemberInfo(), $args);
	}

	// mm: delete ownership data
	sql("DELETE FROM `membership_userrecords` WHERE `tableName`='hist_chr_dev' AND `pkValue`='{$selected_id}'", $eo);
}

function hist_chr_dev_update(&$selected_id, &$error_message = '') {
	global $Translation;

	// mm: can member edit record?
	if(!check_record_permission('hist_chr_dev', $selected_id, 'edit')) return false;

	$data = [
		'hist_story' => Request::val('hist_story', ''),
		'bio_story' => Request::val('bio_story', ''),
		'agent_id' => Request::val('agent_id', ''),
		'agent_name' => Request::val('agent_name', ''),
		'cw_name' => Request::val('cw_name', ''),
		'dp1_resolve' => Request::val('dp1_resolve', ''),
		'dp2_resolve' => Request::val('dp2_resolve', ''),
		'dp3_resolve' => Request::val('dp3_resolve', ''),
		'mc_resolve' => Request::val('mc_resolve', ''),
		'illust_resolve' => Request::val('illust_resolve', ''),
		'dp3_growth' => Request::val('dp3_growth', ''),
		'mc_growth' => Request::val('mc_growth', ''),
		'illust_growth' => Request::val('illust_growth', ''),
		'dp3_approach' => Request::val('dp3_approach', ''),
		'mc_approach' => Request::val('mc_approach', ''),
		'illust_approach' => Request::val('illust_approach', ''),
		'dp3_psstyle' => Request::val('dp3_psstyle', ''),
		'mc_ps_style' => Request::val('mc_ps_style', ''),
		'illust_ps_style' => Request::val('illust_ps_style', ''),
		'cw_age' => Request::val('cw_age', ''),
		'cw_gender' => Request::val('cw_gender', ''),
		'cw_communication_style' => Request::val('cw_communication_style', ''),
		'cw_background' => Request::val('cw_background', ''),
		'cw_appearance' => Request::val('cw_appearance', ''),
		'cw_relationships' => Request::val('cw_relationships', ''),
		'cw_ambition' => Request::val('cw_ambition', ''),
		'cw_defects' => Request::val('cw_defects', ''),
		'cw_thoughts' => Request::val('cw_thoughts', ''),
		'cw_relatedness' => Request::val('cw_relatedness', ''),
		'cw_restrictions' => Request::val('cw_restrictions', ''),
		'locations' => Request::val('locations', ''),
		'persons' => Request::val('persons', ''),
		'events' => Request::val('events', ''),
		'noetictension' => Request::val('noetictension', ''),
		'illust_nt' => Request::val('illust_nt', ''),
		'impression' => Request::val('impression', ''),
		'illust_im' => Request::val('illust_im', ''),
		'mcs_problem' => Request::val('mcs_problem', ''),
		'illust_mcs_problem' => Request::val('illust_mcs_problem', ''),
		'mcs_solution' => Request::lookup('mcs_problem'),
		'illust_mcs_solution' => Request::val('illust_mcs_solution', ''),
		'mcs_symptom' => Request::lookup('mcs_problem'),
		'illust_mcs_symptom' => Request::val('illust_mcs_symptom', ''),
		'mcs_response' => Request::lookup('mcs_problem'),
		'illust_mcs_response' => Request::val('illust_mcs_response', ''),
	];

	// get existing values
	$old_data = getRecord('hist_chr_dev', $selected_id);
	if(is_array($old_data)) {
		$old_data = array_map('makeSafe', $old_data);
		$old_data['selectedID'] = makeSafe($selected_id);
	}

	$data['selectedID'] = makeSafe($selected_id);

	// hook: hist_chr_dev_before_update
	if(function_exists('hist_chr_dev_before_update')) {
		$args = ['old_data' => $old_data];
		if(!hist_chr_dev_before_update($data, getMemberInfo(), $args)) {
			if(isset($args['error_message'])) $error_message = $args['error_message'];
			return false;
		}
	}

	$set = $data; unset($set['selectedID']);
	foreach ($set as $field => $value) {
		$set[$field] = ($value !== '' && $value !== NULL) ? $value : NULL;
	}

	if(!update(
		'hist_chr_dev', 
		backtick_keys_once($set), 
		['`id`' => $selected_id], 
		$error_message
	)) {
		echo $error_message;
		echo '<a href="hist_chr_dev_view.php?SelectedID=' . urlencode($selected_id) . "\">{$Translation['< back']}</a>";
		exit;
	}


	$eo = ['silentErrors' => true];

	update_calc_fields('hist_chr_dev', $data['selectedID'], calculated_fields()['hist_chr_dev']);

	// hook: hist_chr_dev_after_update
	if(function_exists('hist_chr_dev_after_update')) {
		$res = sql("SELECT * FROM `hist_chr_dev` WHERE `id`='{$data['selectedID']}' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)) $data = array_map('makeSafe', $row);

		$data['selectedID'] = $data['id'];
		$args = ['old_data' => $old_data];
		if(!hist_chr_dev_after_update($data, getMemberInfo(), $args)) return;
	}

	// mm: update ownership data
	sql("UPDATE `membership_userrecords` SET `dateUpdated`='" . time() . "' WHERE `tableName`='hist_chr_dev' AND `pkValue`='" . makeSafe($selected_id) . "'", $eo);
}

function hist_chr_dev_form($selected_id = '', $AllowUpdate = 1, $AllowInsert = 1, $AllowDelete = 1, $ShowCancel = 0, $TemplateDV = '', $TemplateDVP = '') {
	// function to return an editable form for a table records
	// and fill it with data of record whose ID is $selected_id. If $selected_id
	// is empty, an empty form is shown, with only an 'Add New'
	// button displayed.

	global $Translation;

	// mm: get table permissions
	$arrPerm = getTablePermissions('hist_chr_dev');
	if(!$arrPerm['insert'] && $selected_id=='') { return ''; }
	$AllowInsert = ($arrPerm['insert'] ? true : false);
	// print preview?
	$dvprint = false;
	if($selected_id && $_REQUEST['dvprint_x'] != '') {
		$dvprint = true;
	}

	$filterer_hist_story = thisOr($_REQUEST['filterer_hist_story'], '');
	$filterer_bio_story = thisOr($_REQUEST['filterer_bio_story'], '');
	$filterer_agent_id = thisOr($_REQUEST['filterer_agent_id'], '');
	$filterer_agent_name = thisOr($_REQUEST['filterer_agent_name'], '');
	$filterer_cw_name = thisOr($_REQUEST['filterer_cw_name'], '');
	$filterer_dp1_resolve = thisOr($_REQUEST['filterer_dp1_resolve'], '');
	$filterer_dp2_resolve = thisOr($_REQUEST['filterer_dp2_resolve'], '');
	$filterer_dp3_resolve = thisOr($_REQUEST['filterer_dp3_resolve'], '');
	$filterer_mc_resolve = thisOr($_REQUEST['filterer_mc_resolve'], '');
	$filterer_illust_resolve = thisOr($_REQUEST['filterer_illust_resolve'], '');
	$filterer_dp3_growth = thisOr($_REQUEST['filterer_dp3_growth'], '');
	$filterer_mc_growth = thisOr($_REQUEST['filterer_mc_growth'], '');
	$filterer_illust_growth = thisOr($_REQUEST['filterer_illust_growth'], '');
	$filterer_dp3_approach = thisOr($_REQUEST['filterer_dp3_approach'], '');
	$filterer_mc_approach = thisOr($_REQUEST['filterer_mc_approach'], '');
	$filterer_illust_approach = thisOr($_REQUEST['filterer_illust_approach'], '');
	$filterer_dp3_psstyle = thisOr($_REQUEST['filterer_dp3_psstyle'], '');
	$filterer_mc_ps_style = thisOr($_REQUEST['filterer_mc_ps_style'], '');
	$filterer_illust_ps_style = thisOr($_REQUEST['filterer_illust_ps_style'], '');
	$filterer_cw_gender = thisOr($_REQUEST['filterer_cw_gender'], '');
	$filterer_noetictension = thisOr($_REQUEST['filterer_noetictension'], '');
	$filterer_illust_nt = thisOr($_REQUEST['filterer_illust_nt'], '');
	$filterer_impression = thisOr($_REQUEST['filterer_impression'], '');
	$filterer_illust_im = thisOr($_REQUEST['filterer_illust_im'], '');
	$filterer_mcs_problem = thisOr($_REQUEST['filterer_mcs_problem'], '');
	$filterer_illust_mcs_problem = thisOr($_REQUEST['filterer_illust_mcs_problem'], '');
	$filterer_illust_mcs_solution = thisOr($_REQUEST['filterer_illust_mcs_solution'], '');
	$filterer_illust_mcs_symptom = thisOr($_REQUEST['filterer_illust_mcs_symptom'], '');
	$filterer_illust_mcs_response = thisOr($_REQUEST['filterer_illust_mcs_response'], '');

	// populate filterers, starting from children to grand-parents
	if($filterer_agent_name && !$filterer_hist_story) $filterer_hist_story = sqlValue("select hist_story from hist_chr where id='" . makeSafe($filterer_agent_name) . "'");
	if($filterer_cw_name && !$filterer_hist_story) $filterer_hist_story = sqlValue("select hist_story from hist_chr where id='" . makeSafe($filterer_cw_name) . "'");
	if($filterer_dp2_resolve && !$filterer_dp1_resolve) $filterer_dp1_resolve = sqlValue("select cat1 from class_dynamicstorypoints2 where id='" . makeSafe($filterer_dp2_resolve) . "'");
	if($filterer_dp3_resolve && !$filterer_dp1_resolve) $filterer_dp1_resolve = sqlValue("select cat1 from class_dynamicstorypoints3 where id='" . makeSafe($filterer_dp3_resolve) . "'");
	if($filterer_dp3_resolve && !$filterer_dp2_resolve) $filterer_dp2_resolve = sqlValue("select cat2 from class_dynamicstorypoints3 where id='" . makeSafe($filterer_dp3_resolve) . "'");
	if($filterer_mc_resolve && !$filterer_dp1_resolve) $filterer_dp1_resolve = sqlValue("select cat1 from class_dynamicstorypoints4 where id='" . makeSafe($filterer_mc_resolve) . "'");
	if($filterer_mc_resolve && !$filterer_dp2_resolve) $filterer_dp2_resolve = sqlValue("select cat2 from class_dynamicstorypoints4 where id='" . makeSafe($filterer_mc_resolve) . "'");
	if($filterer_mc_resolve && !$filterer_dp3_resolve) $filterer_dp3_resolve = sqlValue("select cat3 from class_dynamicstorypoints4 where id='" . makeSafe($filterer_mc_resolve) . "'");
	if($filterer_illust_resolve && !$filterer_hist_story) $filterer_hist_story = sqlValue("select hist_story from hist_chr_scene where id='" . makeSafe($filterer_illust_resolve) . "'");
	if($filterer_illust_resolve && !$filterer_agent_name) $filterer_agent_name = sqlValue("select hist_chr from hist_chr_scene where id='" . makeSafe($filterer_illust_resolve) . "'");
	if($filterer_dp3_growth && !$filterer_dp1_resolve) $filterer_dp1_resolve = sqlValue("select cat1 from class_dynamicstorypoints3 where id='" . makeSafe($filterer_dp3_growth) . "'");
	if($filterer_dp3_growth && !$filterer_dp2_resolve) $filterer_dp2_resolve = sqlValue("select cat2 from class_dynamicstorypoints3 where id='" . makeSafe($filterer_dp3_growth) . "'");
	if($filterer_mc_growth && !$filterer_dp1_resolve) $filterer_dp1_resolve = sqlValue("select cat1 from class_dynamicstorypoints4 where id='" . makeSafe($filterer_mc_growth) . "'");
	if($filterer_mc_growth && !$filterer_dp2_resolve) $filterer_dp2_resolve = sqlValue("select cat2 from class_dynamicstorypoints4 where id='" . makeSafe($filterer_mc_growth) . "'");
	if($filterer_mc_growth && !$filterer_dp3_resolve) $filterer_dp3_resolve = sqlValue("select cat3 from class_dynamicstorypoints4 where id='" . makeSafe($filterer_mc_growth) . "'");
	if($filterer_illust_growth && !$filterer_hist_story) $filterer_hist_story = sqlValue("select hist_story from hist_chr_scene where id='" . makeSafe($filterer_illust_growth) . "'");
	if($filterer_illust_growth && !$filterer_agent_name) $filterer_agent_name = sqlValue("select hist_chr from hist_chr_scene where id='" . makeSafe($filterer_illust_growth) . "'");
	if($filterer_dp3_approach && !$filterer_dp1_resolve) $filterer_dp1_resolve = sqlValue("select cat1 from class_dynamicstorypoints3 where id='" . makeSafe($filterer_dp3_approach) . "'");
	if($filterer_dp3_approach && !$filterer_dp2_resolve) $filterer_dp2_resolve = sqlValue("select cat2 from class_dynamicstorypoints3 where id='" . makeSafe($filterer_dp3_approach) . "'");
	if($filterer_mc_approach && !$filterer_dp1_resolve) $filterer_dp1_resolve = sqlValue("select cat1 from class_dynamicstorypoints4 where id='" . makeSafe($filterer_mc_approach) . "'");
	if($filterer_mc_approach && !$filterer_dp2_resolve) $filterer_dp2_resolve = sqlValue("select cat2 from class_dynamicstorypoints4 where id='" . makeSafe($filterer_mc_approach) . "'");
	if($filterer_mc_approach && !$filterer_dp3_growth) $filterer_dp3_growth = sqlValue("select cat3 from class_dynamicstorypoints4 where id='" . makeSafe($filterer_mc_approach) . "'");
	if($filterer_illust_approach && !$filterer_hist_story) $filterer_hist_story = sqlValue("select hist_story from hist_chr_scene where id='" . makeSafe($filterer_illust_approach) . "'");
	if($filterer_illust_approach && !$filterer_agent_name) $filterer_agent_name = sqlValue("select hist_chr from hist_chr_scene where id='" . makeSafe($filterer_illust_approach) . "'");
	if($filterer_dp3_psstyle && !$filterer_dp1_resolve) $filterer_dp1_resolve = sqlValue("select cat1 from class_dynamicstorypoints3 where id='" . makeSafe($filterer_dp3_psstyle) . "'");
	if($filterer_dp3_psstyle && !$filterer_dp2_resolve) $filterer_dp2_resolve = sqlValue("select cat2 from class_dynamicstorypoints3 where id='" . makeSafe($filterer_dp3_psstyle) . "'");
	if($filterer_mc_ps_style && !$filterer_dp1_resolve) $filterer_dp1_resolve = sqlValue("select cat1 from class_dynamicstorypoints4 where id='" . makeSafe($filterer_mc_ps_style) . "'");
	if($filterer_mc_ps_style && !$filterer_dp2_resolve) $filterer_dp2_resolve = sqlValue("select cat2 from class_dynamicstorypoints4 where id='" . makeSafe($filterer_mc_ps_style) . "'");
	if($filterer_illust_ps_style && !$filterer_hist_story) $filterer_hist_story = sqlValue("select hist_story from hist_chr_scene where id='" . makeSafe($filterer_illust_ps_style) . "'");
	if($filterer_illust_ps_style && !$filterer_agent_name) $filterer_agent_name = sqlValue("select hist_chr from hist_chr_scene where id='" . makeSafe($filterer_illust_ps_style) . "'");
	if($filterer_illust_nt && !$filterer_hist_story) $filterer_hist_story = sqlValue("select hist_story from hist_chr_scene where id='" . makeSafe($filterer_illust_nt) . "'");
	if($filterer_illust_nt && !$filterer_agent_name) $filterer_agent_name = sqlValue("select hist_chr from hist_chr_scene where id='" . makeSafe($filterer_illust_nt) . "'");
	if($filterer_illust_im && !$filterer_hist_story) $filterer_hist_story = sqlValue("select hist_story from hist_chr_scene where id='" . makeSafe($filterer_illust_im) . "'");
	if($filterer_illust_im && !$filterer_agent_name) $filterer_agent_name = sqlValue("select hist_chr from hist_chr_scene where id='" . makeSafe($filterer_illust_im) . "'");
	if($filterer_illust_mcs_problem && !$filterer_hist_story) $filterer_hist_story = sqlValue("select hist_story from hist_chr_scene where id='" . makeSafe($filterer_illust_mcs_problem) . "'");
	if($filterer_illust_mcs_problem && !$filterer_agent_name) $filterer_agent_name = sqlValue("select hist_chr from hist_chr_scene where id='" . makeSafe($filterer_illust_mcs_problem) . "'");
	if($filterer_illust_mcs_solution && !$filterer_hist_story) $filterer_hist_story = sqlValue("select hist_story from hist_chr_scene where id='" . makeSafe($filterer_illust_mcs_solution) . "'");
	if($filterer_illust_mcs_solution && !$filterer_agent_name) $filterer_agent_name = sqlValue("select hist_chr from hist_chr_scene where id='" . makeSafe($filterer_illust_mcs_solution) . "'");
	if($filterer_illust_mcs_symptom && !$filterer_hist_story) $filterer_hist_story = sqlValue("select hist_story from hist_chr_scene where id='" . makeSafe($filterer_illust_mcs_symptom) . "'");
	if($filterer_illust_mcs_symptom && !$filterer_agent_name) $filterer_agent_name = sqlValue("select hist_chr from hist_chr_scene where id='" . makeSafe($filterer_illust_mcs_symptom) . "'");
	if($filterer_illust_mcs_response && !$filterer_agent_name) $filterer_agent_name = sqlValue("select hist_chr from hist_chr_scene where id='" . makeSafe($filterer_illust_mcs_response) . "'");
	if($filterer_illust_mcs_response && !$filterer_hist_story) $filterer_hist_story = sqlValue("select hist_story from hist_chr_scene where id='" . makeSafe($filterer_illust_mcs_response) . "'");

	// unique random identifier
	$rnd1 = ($dvprint ? rand(1000000, 9999999) : '');
	// combobox: hist_story
	$combo_hist_story = new DataCombo;
	// combobox: bio_story
	$combo_bio_story = new DataCombo;
	// combobox: agent_id
	$combo_agent_id = new DataCombo;
	// combobox: agent_name, filterable by: hist_story
	$combo_agent_name = new DataCombo;
	// combobox: cw_name, filterable by: hist_story
	$combo_cw_name = new DataCombo;
	// combobox: dp1_resolve
	$combo_dp1_resolve = new DataCombo;
	// combobox: dp2_resolve, filterable by: dp1_resolve
	$combo_dp2_resolve = new DataCombo;
	// combobox: dp3_resolve, filterable by: dp1_resolve,dp2_resolve
	$combo_dp3_resolve = new DataCombo;
	// combobox: mc_resolve, filterable by: dp1_resolve,dp2_resolve,dp3_resolve
	$combo_mc_resolve = new DataCombo;
	// combobox: illust_resolve, filterable by: hist_story,agent_name
	$combo_illust_resolve = new DataCombo;
	// combobox: dp3_growth, filterable by: dp1_resolve,dp2_resolve
	$combo_dp3_growth = new DataCombo;
	// combobox: mc_growth, filterable by: dp1_resolve,dp2_resolve,dp3_resolve
	$combo_mc_growth = new DataCombo;
	// combobox: illust_growth, filterable by: hist_story,agent_name
	$combo_illust_growth = new DataCombo;
	// combobox: dp3_approach, filterable by: dp1_resolve,dp2_resolve
	$combo_dp3_approach = new DataCombo;
	// combobox: mc_approach, filterable by: dp1_resolve,dp2_resolve,dp3_growth
	$combo_mc_approach = new DataCombo;
	// combobox: illust_approach, filterable by: hist_story,agent_name
	$combo_illust_approach = new DataCombo;
	// combobox: dp3_psstyle, filterable by: dp1_resolve,dp2_resolve
	$combo_dp3_psstyle = new DataCombo;
	// combobox: mc_ps_style, filterable by: dp1_resolve,dp2_resolve
	$combo_mc_ps_style = new DataCombo;
	// combobox: illust_ps_style, filterable by: hist_story,agent_name
	$combo_illust_ps_style = new DataCombo;
	// combobox: cw_gender
	$combo_cw_gender = new DataCombo;
	// combobox: noetictension
	$combo_noetictension = new DataCombo;
	// combobox: illust_nt, filterable by: hist_story,agent_name
	$combo_illust_nt = new DataCombo;
	// combobox: impression
	$combo_impression = new DataCombo;
	// combobox: illust_im, filterable by: hist_story,agent_name
	$combo_illust_im = new DataCombo;
	// combobox: mcs_problem
	$combo_mcs_problem = new DataCombo;
	// combobox: illust_mcs_problem, filterable by: hist_story,agent_name
	$combo_illust_mcs_problem = new DataCombo;
	// combobox: illust_mcs_solution, filterable by: hist_story,agent_name
	$combo_illust_mcs_solution = new DataCombo;
	// combobox: illust_mcs_symptom, filterable by: hist_story,agent_name
	$combo_illust_mcs_symptom = new DataCombo;
	// combobox: illust_mcs_response, filterable by: agent_name,hist_story
	$combo_illust_mcs_response = new DataCombo;

	if($selected_id) {
		// mm: check member permissions
		if(!$arrPerm['view']) return '';

		// mm: who is the owner?
		$ownerGroupID = sqlValue("SELECT `groupID` FROM `membership_userrecords` WHERE `tableName`='hist_chr_dev' AND `pkValue`='" . makeSafe($selected_id) . "'");
		$ownerMemberID = sqlValue("SELECT LCASE(`memberID`) FROM `membership_userrecords` WHERE `tableName`='hist_chr_dev' AND `pkValue`='" . makeSafe($selected_id) . "'");

		if($arrPerm['view'] == 1 && getLoggedMemberID() != $ownerMemberID) return '';
		if($arrPerm['view'] == 2 && getLoggedGroupID() != $ownerGroupID) return '';

		// can edit?
		$AllowUpdate = 0;
		if(($arrPerm['edit'] == 1 && $ownerMemberID == getLoggedMemberID()) || ($arrPerm['edit'] == 2 && $ownerGroupID == getLoggedGroupID()) || $arrPerm['edit'] == 3) {
			$AllowUpdate = 1;
		}

		$res = sql("SELECT * FROM `hist_chr_dev` WHERE `id`='" . makeSafe($selected_id) . "'", $eo);
		if(!($row = db_fetch_array($res))) {
			return error_message($Translation['No records found'], 'hist_chr_dev_view.php', false);
		}
		$combo_hist_story->SelectedData = $row['hist_story'];
		$combo_bio_story->SelectedData = $row['bio_story'];
		$combo_agent_id->SelectedData = $row['agent_id'];
		$combo_agent_name->SelectedData = $row['agent_name'];
		$combo_cw_name->SelectedData = $row['cw_name'];
		$combo_dp1_resolve->SelectedData = $row['dp1_resolve'];
		$combo_dp2_resolve->SelectedData = $row['dp2_resolve'];
		$combo_dp3_resolve->SelectedData = $row['dp3_resolve'];
		$combo_mc_resolve->SelectedData = $row['mc_resolve'];
		$combo_illust_resolve->SelectedData = $row['illust_resolve'];
		$combo_dp3_growth->SelectedData = $row['dp3_growth'];
		$combo_mc_growth->SelectedData = $row['mc_growth'];
		$combo_illust_growth->SelectedData = $row['illust_growth'];
		$combo_dp3_approach->SelectedData = $row['dp3_approach'];
		$combo_mc_approach->SelectedData = $row['mc_approach'];
		$combo_illust_approach->SelectedData = $row['illust_approach'];
		$combo_dp3_psstyle->SelectedData = $row['dp3_psstyle'];
		$combo_mc_ps_style->SelectedData = $row['mc_ps_style'];
		$combo_illust_ps_style->SelectedData = $row['illust_ps_style'];
		$combo_cw_gender->SelectedData = $row['cw_gender'];
		$combo_noetictension->SelectedData = $row['noetictension'];
		$combo_illust_nt->SelectedData = $row['illust_nt'];
		$combo_impression->SelectedData = $row['impression'];
		$combo_illust_im->SelectedData = $row['illust_im'];
		$combo_mcs_problem->SelectedData = $row['mcs_problem'];
		$combo_illust_mcs_problem->SelectedData = $row['illust_mcs_problem'];
		$combo_illust_mcs_solution->SelectedData = $row['illust_mcs_solution'];
		$combo_illust_mcs_symptom->SelectedData = $row['illust_mcs_symptom'];
		$combo_illust_mcs_response->SelectedData = $row['illust_mcs_response'];
		$urow = $row; /* unsanitized data */
		$hc = new CI_Input(datalist_db_encoding);
		$row = $hc->xss_clean($row); /* sanitize data */
	} else {
		$combo_hist_story->SelectedData = $filterer_hist_story;
		$combo_bio_story->SelectedData = $filterer_bio_story;
		$combo_agent_id->SelectedData = $filterer_agent_id;
		$combo_agent_name->SelectedData = $filterer_agent_name;
		$combo_cw_name->SelectedData = $filterer_cw_name;
		$combo_dp1_resolve->SelectedData = $filterer_dp1_resolve;
		$combo_dp2_resolve->SelectedData = $filterer_dp2_resolve;
		$combo_dp3_resolve->SelectedData = $filterer_dp3_resolve;
		$combo_mc_resolve->SelectedData = $filterer_mc_resolve;
		$combo_illust_resolve->SelectedData = $filterer_illust_resolve;
		$combo_dp3_growth->SelectedData = $filterer_dp3_growth;
		$combo_mc_growth->SelectedData = $filterer_mc_growth;
		$combo_illust_growth->SelectedData = $filterer_illust_growth;
		$combo_dp3_approach->SelectedData = $filterer_dp3_approach;
		$combo_mc_approach->SelectedData = $filterer_mc_approach;
		$combo_illust_approach->SelectedData = $filterer_illust_approach;
		$combo_dp3_psstyle->SelectedData = $filterer_dp3_psstyle;
		$combo_mc_ps_style->SelectedData = $filterer_mc_ps_style;
		$combo_illust_ps_style->SelectedData = $filterer_illust_ps_style;
		$combo_cw_gender->SelectedData = $filterer_cw_gender;
		$combo_noetictension->SelectedData = $filterer_noetictension;
		$combo_illust_nt->SelectedData = $filterer_illust_nt;
		$combo_impression->SelectedData = $filterer_impression;
		$combo_illust_im->SelectedData = $filterer_illust_im;
		$combo_mcs_problem->SelectedData = $filterer_mcs_problem;
		$combo_illust_mcs_problem->SelectedData = $filterer_illust_mcs_problem;
		$combo_illust_mcs_solution->SelectedData = $filterer_illust_mcs_solution;
		$combo_illust_mcs_symptom->SelectedData = $filterer_illust_mcs_symptom;
		$combo_illust_mcs_response->SelectedData = $filterer_illust_mcs_response;
	}
	$combo_hist_story->HTML = '<span id="hist_story-container' . $rnd1 . '"></span><input type="hidden" name="hist_story" id="hist_story' . $rnd1 . '" value="' . html_attr($combo_hist_story->SelectedData) . '">';
	$combo_hist_story->MatchText = '<span id="hist_story-container-readonly' . $rnd1 . '"></span><input type="hidden" name="hist_story" id="hist_story' . $rnd1 . '" value="' . html_attr($combo_hist_story->SelectedData) . '">';
	$combo_bio_story->HTML = '<span id="bio_story-container' . $rnd1 . '"></span><input type="hidden" name="bio_story" id="bio_story' . $rnd1 . '" value="' . html_attr($combo_bio_story->SelectedData) . '">';
	$combo_bio_story->MatchText = '<span id="bio_story-container-readonly' . $rnd1 . '"></span><input type="hidden" name="bio_story" id="bio_story' . $rnd1 . '" value="' . html_attr($combo_bio_story->SelectedData) . '">';
	$combo_agent_id->HTML = '<span id="agent_id-container' . $rnd1 . '"></span><input type="hidden" name="agent_id" id="agent_id' . $rnd1 . '" value="' . html_attr($combo_agent_id->SelectedData) . '">';
	$combo_agent_id->MatchText = '<span id="agent_id-container-readonly' . $rnd1 . '"></span><input type="hidden" name="agent_id" id="agent_id' . $rnd1 . '" value="' . html_attr($combo_agent_id->SelectedData) . '">';
	$combo_agent_name->HTML = '<span id="agent_name-container' . $rnd1 . '"></span><input type="hidden" name="agent_name" id="agent_name' . $rnd1 . '" value="' . html_attr($combo_agent_name->SelectedData) . '">';
	$combo_agent_name->MatchText = '<span id="agent_name-container-readonly' . $rnd1 . '"></span><input type="hidden" name="agent_name" id="agent_name' . $rnd1 . '" value="' . html_attr($combo_agent_name->SelectedData) . '">';
	$combo_cw_name->HTML = '<span id="cw_name-container' . $rnd1 . '"></span><input type="hidden" name="cw_name" id="cw_name' . $rnd1 . '" value="' . html_attr($combo_cw_name->SelectedData) . '">';
	$combo_cw_name->MatchText = '<span id="cw_name-container-readonly' . $rnd1 . '"></span><input type="hidden" name="cw_name" id="cw_name' . $rnd1 . '" value="' . html_attr($combo_cw_name->SelectedData) . '">';
	$combo_dp1_resolve->HTML = '<span id="dp1_resolve-container' . $rnd1 . '"></span><input type="hidden" name="dp1_resolve" id="dp1_resolve' . $rnd1 . '" value="' . html_attr($combo_dp1_resolve->SelectedData) . '">';
	$combo_dp1_resolve->MatchText = '<span id="dp1_resolve-container-readonly' . $rnd1 . '"></span><input type="hidden" name="dp1_resolve" id="dp1_resolve' . $rnd1 . '" value="' . html_attr($combo_dp1_resolve->SelectedData) . '">';
	$combo_dp2_resolve->HTML = '<span id="dp2_resolve-container' . $rnd1 . '"></span><input type="hidden" name="dp2_resolve" id="dp2_resolve' . $rnd1 . '" value="' . html_attr($combo_dp2_resolve->SelectedData) . '">';
	$combo_dp2_resolve->MatchText = '<span id="dp2_resolve-container-readonly' . $rnd1 . '"></span><input type="hidden" name="dp2_resolve" id="dp2_resolve' . $rnd1 . '" value="' . html_attr($combo_dp2_resolve->SelectedData) . '">';
	$combo_dp3_resolve->HTML = '<span id="dp3_resolve-container' . $rnd1 . '"></span><input type="hidden" name="dp3_resolve" id="dp3_resolve' . $rnd1 . '" value="' . html_attr($combo_dp3_resolve->SelectedData) . '">';
	$combo_dp3_resolve->MatchText = '<span id="dp3_resolve-container-readonly' . $rnd1 . '"></span><input type="hidden" name="dp3_resolve" id="dp3_resolve' . $rnd1 . '" value="' . html_attr($combo_dp3_resolve->SelectedData) . '">';
	$combo_mc_resolve->HTML = '<span id="mc_resolve-container' . $rnd1 . '"></span><input type="hidden" name="mc_resolve" id="mc_resolve' . $rnd1 . '" value="' . html_attr($combo_mc_resolve->SelectedData) . '">';
	$combo_mc_resolve->MatchText = '<span id="mc_resolve-container-readonly' . $rnd1 . '"></span><input type="hidden" name="mc_resolve" id="mc_resolve' . $rnd1 . '" value="' . html_attr($combo_mc_resolve->SelectedData) . '">';
	$combo_illust_resolve->HTML = '<span id="illust_resolve-container' . $rnd1 . '"></span><input type="hidden" name="illust_resolve" id="illust_resolve' . $rnd1 . '" value="' . html_attr($combo_illust_resolve->SelectedData) . '">';
	$combo_illust_resolve->MatchText = '<span id="illust_resolve-container-readonly' . $rnd1 . '"></span><input type="hidden" name="illust_resolve" id="illust_resolve' . $rnd1 . '" value="' . html_attr($combo_illust_resolve->SelectedData) . '">';
	$combo_dp3_growth->HTML = '<span id="dp3_growth-container' . $rnd1 . '"></span><input type="hidden" name="dp3_growth" id="dp3_growth' . $rnd1 . '" value="' . html_attr($combo_dp3_growth->SelectedData) . '">';
	$combo_dp3_growth->MatchText = '<span id="dp3_growth-container-readonly' . $rnd1 . '"></span><input type="hidden" name="dp3_growth" id="dp3_growth' . $rnd1 . '" value="' . html_attr($combo_dp3_growth->SelectedData) . '">';
	$combo_mc_growth->HTML = '<span id="mc_growth-container' . $rnd1 . '"></span><input type="hidden" name="mc_growth" id="mc_growth' . $rnd1 . '" value="' . html_attr($combo_mc_growth->SelectedData) . '">';
	$combo_mc_growth->MatchText = '<span id="mc_growth-container-readonly' . $rnd1 . '"></span><input type="hidden" name="mc_growth" id="mc_growth' . $rnd1 . '" value="' . html_attr($combo_mc_growth->SelectedData) . '">';
	$combo_illust_growth->HTML = '<span id="illust_growth-container' . $rnd1 . '"></span><input type="hidden" name="illust_growth" id="illust_growth' . $rnd1 . '" value="' . html_attr($combo_illust_growth->SelectedData) . '">';
	$combo_illust_growth->MatchText = '<span id="illust_growth-container-readonly' . $rnd1 . '"></span><input type="hidden" name="illust_growth" id="illust_growth' . $rnd1 . '" value="' . html_attr($combo_illust_growth->SelectedData) . '">';
	$combo_dp3_approach->HTML = '<span id="dp3_approach-container' . $rnd1 . '"></span><input type="hidden" name="dp3_approach" id="dp3_approach' . $rnd1 . '" value="' . html_attr($combo_dp3_approach->SelectedData) . '">';
	$combo_dp3_approach->MatchText = '<span id="dp3_approach-container-readonly' . $rnd1 . '"></span><input type="hidden" name="dp3_approach" id="dp3_approach' . $rnd1 . '" value="' . html_attr($combo_dp3_approach->SelectedData) . '">';
	$combo_mc_approach->HTML = '<span id="mc_approach-container' . $rnd1 . '"></span><input type="hidden" name="mc_approach" id="mc_approach' . $rnd1 . '" value="' . html_attr($combo_mc_approach->SelectedData) . '">';
	$combo_mc_approach->MatchText = '<span id="mc_approach-container-readonly' . $rnd1 . '"></span><input type="hidden" name="mc_approach" id="mc_approach' . $rnd1 . '" value="' . html_attr($combo_mc_approach->SelectedData) . '">';
	$combo_illust_approach->HTML = '<span id="illust_approach-container' . $rnd1 . '"></span><input type="hidden" name="illust_approach" id="illust_approach' . $rnd1 . '" value="' . html_attr($combo_illust_approach->SelectedData) . '">';
	$combo_illust_approach->MatchText = '<span id="illust_approach-container-readonly' . $rnd1 . '"></span><input type="hidden" name="illust_approach" id="illust_approach' . $rnd1 . '" value="' . html_attr($combo_illust_approach->SelectedData) . '">';
	$combo_dp3_psstyle->HTML = '<span id="dp3_psstyle-container' . $rnd1 . '"></span><input type="hidden" name="dp3_psstyle" id="dp3_psstyle' . $rnd1 . '" value="' . html_attr($combo_dp3_psstyle->SelectedData) . '">';
	$combo_dp3_psstyle->MatchText = '<span id="dp3_psstyle-container-readonly' . $rnd1 . '"></span><input type="hidden" name="dp3_psstyle" id="dp3_psstyle' . $rnd1 . '" value="' . html_attr($combo_dp3_psstyle->SelectedData) . '">';
	$combo_mc_ps_style->HTML = '<span id="mc_ps_style-container' . $rnd1 . '"></span><input type="hidden" name="mc_ps_style" id="mc_ps_style' . $rnd1 . '" value="' . html_attr($combo_mc_ps_style->SelectedData) . '">';
	$combo_mc_ps_style->MatchText = '<span id="mc_ps_style-container-readonly' . $rnd1 . '"></span><input type="hidden" name="mc_ps_style" id="mc_ps_style' . $rnd1 . '" value="' . html_attr($combo_mc_ps_style->SelectedData) . '">';
	$combo_illust_ps_style->HTML = '<span id="illust_ps_style-container' . $rnd1 . '"></span><input type="hidden" name="illust_ps_style" id="illust_ps_style' . $rnd1 . '" value="' . html_attr($combo_illust_ps_style->SelectedData) . '">';
	$combo_illust_ps_style->MatchText = '<span id="illust_ps_style-container-readonly' . $rnd1 . '"></span><input type="hidden" name="illust_ps_style" id="illust_ps_style' . $rnd1 . '" value="' . html_attr($combo_illust_ps_style->SelectedData) . '">';
	$combo_cw_gender->HTML = '<span id="cw_gender-container' . $rnd1 . '"></span><input type="hidden" name="cw_gender" id="cw_gender' . $rnd1 . '" value="' . html_attr($combo_cw_gender->SelectedData) . '">';
	$combo_cw_gender->MatchText = '<span id="cw_gender-container-readonly' . $rnd1 . '"></span><input type="hidden" name="cw_gender" id="cw_gender' . $rnd1 . '" value="' . html_attr($combo_cw_gender->SelectedData) . '">';
	$combo_noetictension->HTML = '<span id="noetictension-container' . $rnd1 . '"></span><input type="hidden" name="noetictension" id="noetictension' . $rnd1 . '" value="' . html_attr($combo_noetictension->SelectedData) . '">';
	$combo_noetictension->MatchText = '<span id="noetictension-container-readonly' . $rnd1 . '"></span><input type="hidden" name="noetictension" id="noetictension' . $rnd1 . '" value="' . html_attr($combo_noetictension->SelectedData) . '">';
	$combo_illust_nt->HTML = '<span id="illust_nt-container' . $rnd1 . '"></span><input type="hidden" name="illust_nt" id="illust_nt' . $rnd1 . '" value="' . html_attr($combo_illust_nt->SelectedData) . '">';
	$combo_illust_nt->MatchText = '<span id="illust_nt-container-readonly' . $rnd1 . '"></span><input type="hidden" name="illust_nt" id="illust_nt' . $rnd1 . '" value="' . html_attr($combo_illust_nt->SelectedData) . '">';
	$combo_impression->HTML = '<span id="impression-container' . $rnd1 . '"></span><input type="hidden" name="impression" id="impression' . $rnd1 . '" value="' . html_attr($combo_impression->SelectedData) . '">';
	$combo_impression->MatchText = '<span id="impression-container-readonly' . $rnd1 . '"></span><input type="hidden" name="impression" id="impression' . $rnd1 . '" value="' . html_attr($combo_impression->SelectedData) . '">';
	$combo_illust_im->HTML = '<span id="illust_im-container' . $rnd1 . '"></span><input type="hidden" name="illust_im" id="illust_im' . $rnd1 . '" value="' . html_attr($combo_illust_im->SelectedData) . '">';
	$combo_illust_im->MatchText = '<span id="illust_im-container-readonly' . $rnd1 . '"></span><input type="hidden" name="illust_im" id="illust_im' . $rnd1 . '" value="' . html_attr($combo_illust_im->SelectedData) . '">';
	$combo_mcs_problem->HTML = '<span id="mcs_problem-container' . $rnd1 . '"></span><input type="hidden" name="mcs_problem" id="mcs_problem' . $rnd1 . '" value="' . html_attr($combo_mcs_problem->SelectedData) . '">';
	$combo_mcs_problem->MatchText = '<span id="mcs_problem-container-readonly' . $rnd1 . '"></span><input type="hidden" name="mcs_problem" id="mcs_problem' . $rnd1 . '" value="' . html_attr($combo_mcs_problem->SelectedData) . '">';
	$combo_illust_mcs_problem->HTML = '<span id="illust_mcs_problem-container' . $rnd1 . '"></span><input type="hidden" name="illust_mcs_problem" id="illust_mcs_problem' . $rnd1 . '" value="' . html_attr($combo_illust_mcs_problem->SelectedData) . '">';
	$combo_illust_mcs_problem->MatchText = '<span id="illust_mcs_problem-container-readonly' . $rnd1 . '"></span><input type="hidden" name="illust_mcs_problem" id="illust_mcs_problem' . $rnd1 . '" value="' . html_attr($combo_illust_mcs_problem->SelectedData) . '">';
	$combo_illust_mcs_solution->HTML = '<span id="illust_mcs_solution-container' . $rnd1 . '"></span><input type="hidden" name="illust_mcs_solution" id="illust_mcs_solution' . $rnd1 . '" value="' . html_attr($combo_illust_mcs_solution->SelectedData) . '">';
	$combo_illust_mcs_solution->MatchText = '<span id="illust_mcs_solution-container-readonly' . $rnd1 . '"></span><input type="hidden" name="illust_mcs_solution" id="illust_mcs_solution' . $rnd1 . '" value="' . html_attr($combo_illust_mcs_solution->SelectedData) . '">';
	$combo_illust_mcs_symptom->HTML = '<span id="illust_mcs_symptom-container' . $rnd1 . '"></span><input type="hidden" name="illust_mcs_symptom" id="illust_mcs_symptom' . $rnd1 . '" value="' . html_attr($combo_illust_mcs_symptom->SelectedData) . '">';
	$combo_illust_mcs_symptom->MatchText = '<span id="illust_mcs_symptom-container-readonly' . $rnd1 . '"></span><input type="hidden" name="illust_mcs_symptom" id="illust_mcs_symptom' . $rnd1 . '" value="' . html_attr($combo_illust_mcs_symptom->SelectedData) . '">';
	$combo_illust_mcs_response->HTML = '<span id="illust_mcs_response-container' . $rnd1 . '"></span><input type="hidden" name="illust_mcs_response" id="illust_mcs_response' . $rnd1 . '" value="' . html_attr($combo_illust_mcs_response->SelectedData) . '">';
	$combo_illust_mcs_response->MatchText = '<span id="illust_mcs_response-container-readonly' . $rnd1 . '"></span><input type="hidden" name="illust_mcs_response" id="illust_mcs_response' . $rnd1 . '" value="' . html_attr($combo_illust_mcs_response->SelectedData) . '">';

	ob_start();
	?>

	<script>
		// initial lookup values
		AppGini.current_hist_story__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['hist_story'] : $filterer_hist_story); ?>"};
		AppGini.current_bio_story__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['bio_story'] : $filterer_bio_story); ?>"};
		AppGini.current_agent_id__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['agent_id'] : $filterer_agent_id); ?>"};
		AppGini.current_agent_name__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['agent_name'] : $filterer_agent_name); ?>"};
		AppGini.current_cw_name__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['cw_name'] : $filterer_cw_name); ?>"};
		AppGini.current_dp1_resolve__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['dp1_resolve'] : $filterer_dp1_resolve); ?>"};
		AppGini.current_dp2_resolve__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['dp2_resolve'] : $filterer_dp2_resolve); ?>"};
		AppGini.current_dp3_resolve__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['dp3_resolve'] : $filterer_dp3_resolve); ?>"};
		AppGini.current_mc_resolve__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['mc_resolve'] : $filterer_mc_resolve); ?>"};
		AppGini.current_illust_resolve__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['illust_resolve'] : $filterer_illust_resolve); ?>"};
		AppGini.current_dp3_growth__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['dp3_growth'] : $filterer_dp3_growth); ?>"};
		AppGini.current_mc_growth__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['mc_growth'] : $filterer_mc_growth); ?>"};
		AppGini.current_illust_growth__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['illust_growth'] : $filterer_illust_growth); ?>"};
		AppGini.current_dp3_approach__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['dp3_approach'] : $filterer_dp3_approach); ?>"};
		AppGini.current_mc_approach__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['mc_approach'] : $filterer_mc_approach); ?>"};
		AppGini.current_illust_approach__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['illust_approach'] : $filterer_illust_approach); ?>"};
		AppGini.current_dp3_psstyle__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['dp3_psstyle'] : $filterer_dp3_psstyle); ?>"};
		AppGini.current_mc_ps_style__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['mc_ps_style'] : $filterer_mc_ps_style); ?>"};
		AppGini.current_illust_ps_style__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['illust_ps_style'] : $filterer_illust_ps_style); ?>"};
		AppGini.current_cw_gender__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['cw_gender'] : $filterer_cw_gender); ?>"};
		AppGini.current_noetictension__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['noetictension'] : $filterer_noetictension); ?>"};
		AppGini.current_illust_nt__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['illust_nt'] : $filterer_illust_nt); ?>"};
		AppGini.current_impression__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['impression'] : $filterer_impression); ?>"};
		AppGini.current_illust_im__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['illust_im'] : $filterer_illust_im); ?>"};
		AppGini.current_mcs_problem__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['mcs_problem'] : $filterer_mcs_problem); ?>"};
		AppGini.current_illust_mcs_problem__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['illust_mcs_problem'] : $filterer_illust_mcs_problem); ?>"};
		AppGini.current_illust_mcs_solution__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['illust_mcs_solution'] : $filterer_illust_mcs_solution); ?>"};
		AppGini.current_illust_mcs_symptom__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['illust_mcs_symptom'] : $filterer_illust_mcs_symptom); ?>"};
		AppGini.current_illust_mcs_response__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['illust_mcs_response'] : $filterer_illust_mcs_response); ?>"};

		jQuery(function() {
			setTimeout(function() {
				if(typeof(hist_story_reload__RAND__) == 'function') hist_story_reload__RAND__();
				if(typeof(bio_story_reload__RAND__) == 'function') bio_story_reload__RAND__();
				if(typeof(agent_id_reload__RAND__) == 'function') agent_id_reload__RAND__();
				<?php echo (!$AllowUpdate || $dvprint ? 'if(typeof(agent_name_reload__RAND__) == \'function\') agent_name_reload__RAND__(AppGini.current_hist_story__RAND__.value);' : ''); ?>
				<?php echo (!$AllowUpdate || $dvprint ? 'if(typeof(cw_name_reload__RAND__) == \'function\') cw_name_reload__RAND__(AppGini.current_hist_story__RAND__.value);' : ''); ?>
				if(typeof(dp1_resolve_reload__RAND__) == 'function') dp1_resolve_reload__RAND__();
				<?php echo (!$AllowUpdate || $dvprint ? 'if(typeof(dp2_resolve_reload__RAND__) == \'function\') dp2_resolve_reload__RAND__(AppGini.current_dp1_resolve__RAND__.value);' : ''); ?>
				<?php echo (!$AllowUpdate || $dvprint ? 'if(typeof(dp3_resolve_reload__RAND__) == \'function\') dp3_resolve_reload__RAND__(AppGini.current_dp1_resolve__RAND__.value, AppGini.current_dp2_resolve__RAND__.value);' : ''); ?>
				<?php echo (!$AllowUpdate || $dvprint ? 'if(typeof(mc_resolve_reload__RAND__) == \'function\') mc_resolve_reload__RAND__(AppGini.current_dp1_resolve__RAND__.value, AppGini.current_dp2_resolve__RAND__.value, AppGini.current_dp3_resolve__RAND__.value);' : ''); ?>
				<?php echo (!$AllowUpdate || $dvprint ? 'if(typeof(illust_resolve_reload__RAND__) == \'function\') illust_resolve_reload__RAND__(AppGini.current_hist_story__RAND__.value, AppGini.current_agent_name__RAND__.value);' : ''); ?>
				<?php echo (!$AllowUpdate || $dvprint ? 'if(typeof(dp3_growth_reload__RAND__) == \'function\') dp3_growth_reload__RAND__(AppGini.current_dp1_resolve__RAND__.value, AppGini.current_dp2_resolve__RAND__.value);' : ''); ?>
				<?php echo (!$AllowUpdate || $dvprint ? 'if(typeof(mc_growth_reload__RAND__) == \'function\') mc_growth_reload__RAND__(AppGini.current_dp1_resolve__RAND__.value, AppGini.current_dp2_resolve__RAND__.value, AppGini.current_dp3_resolve__RAND__.value);' : ''); ?>
				<?php echo (!$AllowUpdate || $dvprint ? 'if(typeof(illust_growth_reload__RAND__) == \'function\') illust_growth_reload__RAND__(AppGini.current_hist_story__RAND__.value, AppGini.current_agent_name__RAND__.value);' : ''); ?>
				<?php echo (!$AllowUpdate || $dvprint ? 'if(typeof(dp3_approach_reload__RAND__) == \'function\') dp3_approach_reload__RAND__(AppGini.current_dp1_resolve__RAND__.value, AppGini.current_dp2_resolve__RAND__.value);' : ''); ?>
				<?php echo (!$AllowUpdate || $dvprint ? 'if(typeof(mc_approach_reload__RAND__) == \'function\') mc_approach_reload__RAND__(AppGini.current_dp1_resolve__RAND__.value, AppGini.current_dp2_resolve__RAND__.value, AppGini.current_dp3_growth__RAND__.value);' : ''); ?>
				<?php echo (!$AllowUpdate || $dvprint ? 'if(typeof(illust_approach_reload__RAND__) == \'function\') illust_approach_reload__RAND__(AppGini.current_hist_story__RAND__.value, AppGini.current_agent_name__RAND__.value);' : ''); ?>
				<?php echo (!$AllowUpdate || $dvprint ? 'if(typeof(dp3_psstyle_reload__RAND__) == \'function\') dp3_psstyle_reload__RAND__(AppGini.current_dp1_resolve__RAND__.value, AppGini.current_dp2_resolve__RAND__.value);' : ''); ?>
				<?php echo (!$AllowUpdate || $dvprint ? 'if(typeof(mc_ps_style_reload__RAND__) == \'function\') mc_ps_style_reload__RAND__(AppGini.current_dp1_resolve__RAND__.value, AppGini.current_dp2_resolve__RAND__.value);' : ''); ?>
				<?php echo (!$AllowUpdate || $dvprint ? 'if(typeof(illust_ps_style_reload__RAND__) == \'function\') illust_ps_style_reload__RAND__(AppGini.current_hist_story__RAND__.value, AppGini.current_agent_name__RAND__.value);' : ''); ?>
				if(typeof(cw_gender_reload__RAND__) == 'function') cw_gender_reload__RAND__();
				if(typeof(noetictension_reload__RAND__) == 'function') noetictension_reload__RAND__();
				<?php echo (!$AllowUpdate || $dvprint ? 'if(typeof(illust_nt_reload__RAND__) == \'function\') illust_nt_reload__RAND__(AppGini.current_hist_story__RAND__.value, AppGini.current_agent_name__RAND__.value);' : ''); ?>
				if(typeof(impression_reload__RAND__) == 'function') impression_reload__RAND__();
				<?php echo (!$AllowUpdate || $dvprint ? 'if(typeof(illust_im_reload__RAND__) == \'function\') illust_im_reload__RAND__(AppGini.current_hist_story__RAND__.value, AppGini.current_agent_name__RAND__.value);' : ''); ?>
				if(typeof(mcs_problem_reload__RAND__) == 'function') mcs_problem_reload__RAND__();
				<?php echo (!$AllowUpdate || $dvprint ? 'if(typeof(illust_mcs_problem_reload__RAND__) == \'function\') illust_mcs_problem_reload__RAND__(AppGini.current_hist_story__RAND__.value, AppGini.current_agent_name__RAND__.value);' : ''); ?>
				<?php echo (!$AllowUpdate || $dvprint ? 'if(typeof(illust_mcs_solution_reload__RAND__) == \'function\') illust_mcs_solution_reload__RAND__(AppGini.current_hist_story__RAND__.value, AppGini.current_agent_name__RAND__.value);' : ''); ?>
				<?php echo (!$AllowUpdate || $dvprint ? 'if(typeof(illust_mcs_symptom_reload__RAND__) == \'function\') illust_mcs_symptom_reload__RAND__(AppGini.current_hist_story__RAND__.value, AppGini.current_agent_name__RAND__.value);' : ''); ?>
				<?php echo (!$AllowUpdate || $dvprint ? 'if(typeof(illust_mcs_response_reload__RAND__) == \'function\') illust_mcs_response_reload__RAND__(AppGini.current_agent_name__RAND__.value, AppGini.current_hist_story__RAND__.value);' : ''); ?>
			}, 50); /* we need to slightly delay client-side execution of the above code to allow AppGini.ajaxCache to work */
		});
		function hist_story_reload__RAND__() {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#hist_story-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_hist_story__RAND__.value, t: 'hist_chr_dev', f: 'hist_story' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="hist_story"]').val(resp.results[0].id);
							$j('[id=hist_story-container-readonly__RAND__]').html('<span id="hist_story-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_story_view_parent]').hide(); } else { $j('.btn[id=hist_story_view_parent]').show(); }

						if(typeof(agent_name_reload__RAND__) == 'function') agent_name_reload__RAND__(AppGini.current_hist_story__RAND__.value);
						if(typeof(cw_name_reload__RAND__) == 'function') cw_name_reload__RAND__(AppGini.current_hist_story__RAND__.value);

							if(typeof(hist_story_update_autofills__RAND__) == 'function') hist_story_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'hist_chr_dev', f: 'hist_story' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_hist_story__RAND__.value = e.added.id;
				AppGini.current_hist_story__RAND__.text = e.added.text;
				$j('[name="hist_story"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_story_view_parent]').hide(); } else { $j('.btn[id=hist_story_view_parent]').show(); }

						if(typeof(agent_name_reload__RAND__) == 'function') agent_name_reload__RAND__(AppGini.current_hist_story__RAND__.value);
						if(typeof(cw_name_reload__RAND__) == 'function') cw_name_reload__RAND__(AppGini.current_hist_story__RAND__.value);

				if(typeof(hist_story_update_autofills__RAND__) == 'function') hist_story_update_autofills__RAND__();
			});

			if(!$j("#hist_story-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_hist_story__RAND__.value, t: 'hist_chr_dev', f: 'hist_story' },
					success: function(resp) {
						$j('[name="hist_story"]').val(resp.results[0].id);
						$j('[id=hist_story-container-readonly__RAND__]').html('<span id="hist_story-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_story_view_parent]').hide(); } else { $j('.btn[id=hist_story_view_parent]').show(); }

						if(typeof(hist_story_update_autofills__RAND__) == 'function') hist_story_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_hist_story__RAND__.value, t: 'hist_chr_dev', f: 'hist_story' },
				success: function(resp) {
					$j('[id=hist_story-container__RAND__], [id=hist_story-container-readonly__RAND__]').html('<span id="hist_story-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_story_view_parent]').hide(); } else { $j('.btn[id=hist_story_view_parent]').show(); }

					if(typeof(hist_story_update_autofills__RAND__) == 'function') hist_story_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function bio_story_reload__RAND__() {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#bio_story-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_bio_story__RAND__.value, t: 'hist_chr_dev', f: 'bio_story' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="bio_story"]').val(resp.results[0].id);
							$j('[id=bio_story-container-readonly__RAND__]').html('<span id="bio_story-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=bio_story_view_parent]').hide(); } else { $j('.btn[id=bio_story_view_parent]').show(); }


							if(typeof(bio_story_update_autofills__RAND__) == 'function') bio_story_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'hist_chr_dev', f: 'bio_story' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_bio_story__RAND__.value = e.added.id;
				AppGini.current_bio_story__RAND__.text = e.added.text;
				$j('[name="bio_story"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=bio_story_view_parent]').hide(); } else { $j('.btn[id=bio_story_view_parent]').show(); }


				if(typeof(bio_story_update_autofills__RAND__) == 'function') bio_story_update_autofills__RAND__();
			});

			if(!$j("#bio_story-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_bio_story__RAND__.value, t: 'hist_chr_dev', f: 'bio_story' },
					success: function(resp) {
						$j('[name="bio_story"]').val(resp.results[0].id);
						$j('[id=bio_story-container-readonly__RAND__]').html('<span id="bio_story-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=bio_story_view_parent]').hide(); } else { $j('.btn[id=bio_story_view_parent]').show(); }

						if(typeof(bio_story_update_autofills__RAND__) == 'function') bio_story_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_bio_story__RAND__.value, t: 'hist_chr_dev', f: 'bio_story' },
				success: function(resp) {
					$j('[id=bio_story-container__RAND__], [id=bio_story-container-readonly__RAND__]').html('<span id="bio_story-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=bio_story_view_parent]').hide(); } else { $j('.btn[id=bio_story_view_parent]').show(); }

					if(typeof(bio_story_update_autofills__RAND__) == 'function') bio_story_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function agent_id_reload__RAND__() {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#agent_id-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_agent_id__RAND__.value, t: 'hist_chr_dev', f: 'agent_id' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="agent_id"]').val(resp.results[0].id);
							$j('[id=agent_id-container-readonly__RAND__]').html('<span id="agent_id-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=biblio_author_view_parent]').hide(); } else { $j('.btn[id=biblio_author_view_parent]').show(); }


							if(typeof(agent_id_update_autofills__RAND__) == 'function') agent_id_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'hist_chr_dev', f: 'agent_id' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_agent_id__RAND__.value = e.added.id;
				AppGini.current_agent_id__RAND__.text = e.added.text;
				$j('[name="agent_id"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=biblio_author_view_parent]').hide(); } else { $j('.btn[id=biblio_author_view_parent]').show(); }


				if(typeof(agent_id_update_autofills__RAND__) == 'function') agent_id_update_autofills__RAND__();
			});

			if(!$j("#agent_id-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_agent_id__RAND__.value, t: 'hist_chr_dev', f: 'agent_id' },
					success: function(resp) {
						$j('[name="agent_id"]').val(resp.results[0].id);
						$j('[id=agent_id-container-readonly__RAND__]').html('<span id="agent_id-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=biblio_author_view_parent]').hide(); } else { $j('.btn[id=biblio_author_view_parent]').show(); }

						if(typeof(agent_id_update_autofills__RAND__) == 'function') agent_id_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_agent_id__RAND__.value, t: 'hist_chr_dev', f: 'agent_id' },
				success: function(resp) {
					$j('[id=agent_id-container__RAND__], [id=agent_id-container-readonly__RAND__]').html('<span id="agent_id-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=biblio_author_view_parent]').hide(); } else { $j('.btn[id=biblio_author_view_parent]').show(); }

					if(typeof(agent_id_update_autofills__RAND__) == 'function') agent_id_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function agent_name_reload__RAND__(filterer_hist_story) {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#agent_name-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { filterer_hist_story: filterer_hist_story, id: AppGini.current_agent_name__RAND__.value, t: 'hist_chr_dev', f: 'agent_name' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="agent_name"]').val(resp.results[0].id);
							$j('[id=agent_name-container-readonly__RAND__]').html('<span id="agent_name-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_chr_view_parent]').hide(); } else { $j('.btn[id=hist_chr_view_parent]').show(); }

						if(typeof(illust_resolve_reload__RAND__) == 'function') illust_resolve_reload__RAND__($j('#hist_story').val(), AppGini.current_agent_name__RAND__.value);
						if(typeof(illust_growth_reload__RAND__) == 'function') illust_growth_reload__RAND__($j('#hist_story').val(), AppGini.current_agent_name__RAND__.value);
						if(typeof(illust_approach_reload__RAND__) == 'function') illust_approach_reload__RAND__($j('#hist_story').val(), AppGini.current_agent_name__RAND__.value);
						if(typeof(illust_ps_style_reload__RAND__) == 'function') illust_ps_style_reload__RAND__($j('#hist_story').val(), AppGini.current_agent_name__RAND__.value);
						if(typeof(illust_nt_reload__RAND__) == 'function') illust_nt_reload__RAND__($j('#hist_story').val(), AppGini.current_agent_name__RAND__.value);
						if(typeof(illust_im_reload__RAND__) == 'function') illust_im_reload__RAND__($j('#hist_story').val(), AppGini.current_agent_name__RAND__.value);
						if(typeof(illust_mcs_problem_reload__RAND__) == 'function') illust_mcs_problem_reload__RAND__($j('#hist_story').val(), AppGini.current_agent_name__RAND__.value);
						if(typeof(illust_mcs_solution_reload__RAND__) == 'function') illust_mcs_solution_reload__RAND__($j('#hist_story').val(), AppGini.current_agent_name__RAND__.value);
						if(typeof(illust_mcs_symptom_reload__RAND__) == 'function') illust_mcs_symptom_reload__RAND__($j('#hist_story').val(), AppGini.current_agent_name__RAND__.value);
						if(typeof(illust_mcs_response_reload__RAND__) == 'function') illust_mcs_response_reload__RAND__(AppGini.current_agent_name__RAND__.value, $j('#hist_story').val());

							if(typeof(agent_name_update_autofills__RAND__) == 'function') agent_name_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { filterer_hist_story: filterer_hist_story, s: term, p: page, t: 'hist_chr_dev', f: 'agent_name' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_agent_name__RAND__.value = e.added.id;
				AppGini.current_agent_name__RAND__.text = e.added.text;
				$j('[name="agent_name"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_chr_view_parent]').hide(); } else { $j('.btn[id=hist_chr_view_parent]').show(); }

						if(typeof(illust_resolve_reload__RAND__) == 'function') illust_resolve_reload__RAND__($j('#hist_story').val(), AppGini.current_agent_name__RAND__.value);
						if(typeof(illust_growth_reload__RAND__) == 'function') illust_growth_reload__RAND__($j('#hist_story').val(), AppGini.current_agent_name__RAND__.value);
						if(typeof(illust_approach_reload__RAND__) == 'function') illust_approach_reload__RAND__($j('#hist_story').val(), AppGini.current_agent_name__RAND__.value);
						if(typeof(illust_ps_style_reload__RAND__) == 'function') illust_ps_style_reload__RAND__($j('#hist_story').val(), AppGini.current_agent_name__RAND__.value);
						if(typeof(illust_nt_reload__RAND__) == 'function') illust_nt_reload__RAND__($j('#hist_story').val(), AppGini.current_agent_name__RAND__.value);
						if(typeof(illust_im_reload__RAND__) == 'function') illust_im_reload__RAND__($j('#hist_story').val(), AppGini.current_agent_name__RAND__.value);
						if(typeof(illust_mcs_problem_reload__RAND__) == 'function') illust_mcs_problem_reload__RAND__($j('#hist_story').val(), AppGini.current_agent_name__RAND__.value);
						if(typeof(illust_mcs_solution_reload__RAND__) == 'function') illust_mcs_solution_reload__RAND__($j('#hist_story').val(), AppGini.current_agent_name__RAND__.value);
						if(typeof(illust_mcs_symptom_reload__RAND__) == 'function') illust_mcs_symptom_reload__RAND__($j('#hist_story').val(), AppGini.current_agent_name__RAND__.value);
						if(typeof(illust_mcs_response_reload__RAND__) == 'function') illust_mcs_response_reload__RAND__(AppGini.current_agent_name__RAND__.value, $j('#hist_story').val());

				if(typeof(agent_name_update_autofills__RAND__) == 'function') agent_name_update_autofills__RAND__();
			});

			if(!$j("#agent_name-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_agent_name__RAND__.value, t: 'hist_chr_dev', f: 'agent_name' },
					success: function(resp) {
						$j('[name="agent_name"]').val(resp.results[0].id);
						$j('[id=agent_name-container-readonly__RAND__]').html('<span id="agent_name-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_chr_view_parent]').hide(); } else { $j('.btn[id=hist_chr_view_parent]').show(); }

						if(typeof(agent_name_update_autofills__RAND__) == 'function') agent_name_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_agent_name__RAND__.value, t: 'hist_chr_dev', f: 'agent_name' },
				success: function(resp) {
					$j('[id=agent_name-container__RAND__], [id=agent_name-container-readonly__RAND__]').html('<span id="agent_name-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_chr_view_parent]').hide(); } else { $j('.btn[id=hist_chr_view_parent]').show(); }

					if(typeof(agent_name_update_autofills__RAND__) == 'function') agent_name_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function cw_name_reload__RAND__(filterer_hist_story) {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#cw_name-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { filterer_hist_story: filterer_hist_story, id: AppGini.current_cw_name__RAND__.value, t: 'hist_chr_dev', f: 'cw_name' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="cw_name"]').val(resp.results[0].id);
							$j('[id=cw_name-container-readonly__RAND__]').html('<span id="cw_name-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_chr_view_parent]').hide(); } else { $j('.btn[id=hist_chr_view_parent]').show(); }


							if(typeof(cw_name_update_autofills__RAND__) == 'function') cw_name_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { filterer_hist_story: filterer_hist_story, s: term, p: page, t: 'hist_chr_dev', f: 'cw_name' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_cw_name__RAND__.value = e.added.id;
				AppGini.current_cw_name__RAND__.text = e.added.text;
				$j('[name="cw_name"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_chr_view_parent]').hide(); } else { $j('.btn[id=hist_chr_view_parent]').show(); }


				if(typeof(cw_name_update_autofills__RAND__) == 'function') cw_name_update_autofills__RAND__();
			});

			if(!$j("#cw_name-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_cw_name__RAND__.value, t: 'hist_chr_dev', f: 'cw_name' },
					success: function(resp) {
						$j('[name="cw_name"]').val(resp.results[0].id);
						$j('[id=cw_name-container-readonly__RAND__]').html('<span id="cw_name-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_chr_view_parent]').hide(); } else { $j('.btn[id=hist_chr_view_parent]').show(); }

						if(typeof(cw_name_update_autofills__RAND__) == 'function') cw_name_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_cw_name__RAND__.value, t: 'hist_chr_dev', f: 'cw_name' },
				success: function(resp) {
					$j('[id=cw_name-container__RAND__], [id=cw_name-container-readonly__RAND__]').html('<span id="cw_name-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_chr_view_parent]').hide(); } else { $j('.btn[id=hist_chr_view_parent]').show(); }

					if(typeof(cw_name_update_autofills__RAND__) == 'function') cw_name_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function dp1_resolve_reload__RAND__() {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#dp1_resolve-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_dp1_resolve__RAND__.value, t: 'hist_chr_dev', f: 'dp1_resolve' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="dp1_resolve"]').val(resp.results[0].id);
							$j('[id=dp1_resolve-container-readonly__RAND__]').html('<span id="dp1_resolve-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_dynamicstorypoints1_view_parent]').hide(); } else { $j('.btn[id=class_dynamicstorypoints1_view_parent]').show(); }

						if(typeof(dp2_resolve_reload__RAND__) == 'function') dp2_resolve_reload__RAND__(AppGini.current_dp1_resolve__RAND__.value);

							if(typeof(dp1_resolve_update_autofills__RAND__) == 'function') dp1_resolve_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'hist_chr_dev', f: 'dp1_resolve' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_dp1_resolve__RAND__.value = e.added.id;
				AppGini.current_dp1_resolve__RAND__.text = e.added.text;
				$j('[name="dp1_resolve"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_dynamicstorypoints1_view_parent]').hide(); } else { $j('.btn[id=class_dynamicstorypoints1_view_parent]').show(); }

						if(typeof(dp2_resolve_reload__RAND__) == 'function') dp2_resolve_reload__RAND__(AppGini.current_dp1_resolve__RAND__.value);

				if(typeof(dp1_resolve_update_autofills__RAND__) == 'function') dp1_resolve_update_autofills__RAND__();
			});

			if(!$j("#dp1_resolve-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_dp1_resolve__RAND__.value, t: 'hist_chr_dev', f: 'dp1_resolve' },
					success: function(resp) {
						$j('[name="dp1_resolve"]').val(resp.results[0].id);
						$j('[id=dp1_resolve-container-readonly__RAND__]').html('<span id="dp1_resolve-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_dynamicstorypoints1_view_parent]').hide(); } else { $j('.btn[id=class_dynamicstorypoints1_view_parent]').show(); }

						if(typeof(dp1_resolve_update_autofills__RAND__) == 'function') dp1_resolve_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_dp1_resolve__RAND__.value, t: 'hist_chr_dev', f: 'dp1_resolve' },
				success: function(resp) {
					$j('[id=dp1_resolve-container__RAND__], [id=dp1_resolve-container-readonly__RAND__]').html('<span id="dp1_resolve-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_dynamicstorypoints1_view_parent]').hide(); } else { $j('.btn[id=class_dynamicstorypoints1_view_parent]').show(); }

					if(typeof(dp1_resolve_update_autofills__RAND__) == 'function') dp1_resolve_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function dp2_resolve_reload__RAND__(filterer_dp1_resolve) {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#dp2_resolve-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { filterer_dp1_resolve: filterer_dp1_resolve, id: AppGini.current_dp2_resolve__RAND__.value, t: 'hist_chr_dev', f: 'dp2_resolve' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="dp2_resolve"]').val(resp.results[0].id);
							$j('[id=dp2_resolve-container-readonly__RAND__]').html('<span id="dp2_resolve-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_dynamicstorypoints2_view_parent]').hide(); } else { $j('.btn[id=class_dynamicstorypoints2_view_parent]').show(); }

						if(typeof(dp3_resolve_reload__RAND__) == 'function') dp3_resolve_reload__RAND__($j('#dp1_resolve').val(), AppGini.current_dp2_resolve__RAND__.value);
						if(typeof(dp3_growth_reload__RAND__) == 'function') dp3_growth_reload__RAND__($j('#dp1_resolve').val(), AppGini.current_dp2_resolve__RAND__.value);
						if(typeof(dp3_approach_reload__RAND__) == 'function') dp3_approach_reload__RAND__($j('#dp1_resolve').val(), AppGini.current_dp2_resolve__RAND__.value);
						if(typeof(dp3_psstyle_reload__RAND__) == 'function') dp3_psstyle_reload__RAND__($j('#dp1_resolve').val(), AppGini.current_dp2_resolve__RAND__.value);
						if(typeof(mc_ps_style_reload__RAND__) == 'function') mc_ps_style_reload__RAND__($j('#dp1_resolve').val(), AppGini.current_dp2_resolve__RAND__.value);

							if(typeof(dp2_resolve_update_autofills__RAND__) == 'function') dp2_resolve_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { filterer_dp1_resolve: filterer_dp1_resolve, s: term, p: page, t: 'hist_chr_dev', f: 'dp2_resolve' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_dp2_resolve__RAND__.value = e.added.id;
				AppGini.current_dp2_resolve__RAND__.text = e.added.text;
				$j('[name="dp2_resolve"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_dynamicstorypoints2_view_parent]').hide(); } else { $j('.btn[id=class_dynamicstorypoints2_view_parent]').show(); }

						if(typeof(dp3_resolve_reload__RAND__) == 'function') dp3_resolve_reload__RAND__($j('#dp1_resolve').val(), AppGini.current_dp2_resolve__RAND__.value);
						if(typeof(dp3_growth_reload__RAND__) == 'function') dp3_growth_reload__RAND__($j('#dp1_resolve').val(), AppGini.current_dp2_resolve__RAND__.value);
						if(typeof(dp3_approach_reload__RAND__) == 'function') dp3_approach_reload__RAND__($j('#dp1_resolve').val(), AppGini.current_dp2_resolve__RAND__.value);
						if(typeof(dp3_psstyle_reload__RAND__) == 'function') dp3_psstyle_reload__RAND__($j('#dp1_resolve').val(), AppGini.current_dp2_resolve__RAND__.value);
						if(typeof(mc_ps_style_reload__RAND__) == 'function') mc_ps_style_reload__RAND__($j('#dp1_resolve').val(), AppGini.current_dp2_resolve__RAND__.value);

				if(typeof(dp2_resolve_update_autofills__RAND__) == 'function') dp2_resolve_update_autofills__RAND__();
			});

			if(!$j("#dp2_resolve-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_dp2_resolve__RAND__.value, t: 'hist_chr_dev', f: 'dp2_resolve' },
					success: function(resp) {
						$j('[name="dp2_resolve"]').val(resp.results[0].id);
						$j('[id=dp2_resolve-container-readonly__RAND__]').html('<span id="dp2_resolve-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_dynamicstorypoints2_view_parent]').hide(); } else { $j('.btn[id=class_dynamicstorypoints2_view_parent]').show(); }

						if(typeof(dp2_resolve_update_autofills__RAND__) == 'function') dp2_resolve_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_dp2_resolve__RAND__.value, t: 'hist_chr_dev', f: 'dp2_resolve' },
				success: function(resp) {
					$j('[id=dp2_resolve-container__RAND__], [id=dp2_resolve-container-readonly__RAND__]').html('<span id="dp2_resolve-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_dynamicstorypoints2_view_parent]').hide(); } else { $j('.btn[id=class_dynamicstorypoints2_view_parent]').show(); }

					if(typeof(dp2_resolve_update_autofills__RAND__) == 'function') dp2_resolve_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function dp3_resolve_reload__RAND__(filterer_dp1_resolve, filterer_dp2_resolve) {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#dp3_resolve-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { filterer_dp1_resolve: filterer_dp1_resolve, filterer_dp2_resolve: filterer_dp2_resolve, id: AppGini.current_dp3_resolve__RAND__.value, t: 'hist_chr_dev', f: 'dp3_resolve' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="dp3_resolve"]').val(resp.results[0].id);
							$j('[id=dp3_resolve-container-readonly__RAND__]').html('<span id="dp3_resolve-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_dynamicstorypoints3_view_parent]').hide(); } else { $j('.btn[id=class_dynamicstorypoints3_view_parent]').show(); }

						if(typeof(mc_resolve_reload__RAND__) == 'function') mc_resolve_reload__RAND__($j('#dp1_resolve').val(), $j('#dp2_resolve').val(), AppGini.current_dp3_resolve__RAND__.value);
						if(typeof(mc_growth_reload__RAND__) == 'function') mc_growth_reload__RAND__($j('#dp1_resolve').val(), $j('#dp2_resolve').val(), AppGini.current_dp3_resolve__RAND__.value);

							if(typeof(dp3_resolve_update_autofills__RAND__) == 'function') dp3_resolve_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { filterer_dp1_resolve: filterer_dp1_resolve, filterer_dp2_resolve: filterer_dp2_resolve, s: term, p: page, t: 'hist_chr_dev', f: 'dp3_resolve' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_dp3_resolve__RAND__.value = e.added.id;
				AppGini.current_dp3_resolve__RAND__.text = e.added.text;
				$j('[name="dp3_resolve"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_dynamicstorypoints3_view_parent]').hide(); } else { $j('.btn[id=class_dynamicstorypoints3_view_parent]').show(); }

						if(typeof(mc_resolve_reload__RAND__) == 'function') mc_resolve_reload__RAND__($j('#dp1_resolve').val(), $j('#dp2_resolve').val(), AppGini.current_dp3_resolve__RAND__.value);
						if(typeof(mc_growth_reload__RAND__) == 'function') mc_growth_reload__RAND__($j('#dp1_resolve').val(), $j('#dp2_resolve').val(), AppGini.current_dp3_resolve__RAND__.value);

				if(typeof(dp3_resolve_update_autofills__RAND__) == 'function') dp3_resolve_update_autofills__RAND__();
			});

			if(!$j("#dp3_resolve-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_dp3_resolve__RAND__.value, t: 'hist_chr_dev', f: 'dp3_resolve' },
					success: function(resp) {
						$j('[name="dp3_resolve"]').val(resp.results[0].id);
						$j('[id=dp3_resolve-container-readonly__RAND__]').html('<span id="dp3_resolve-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_dynamicstorypoints3_view_parent]').hide(); } else { $j('.btn[id=class_dynamicstorypoints3_view_parent]').show(); }

						if(typeof(dp3_resolve_update_autofills__RAND__) == 'function') dp3_resolve_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_dp3_resolve__RAND__.value, t: 'hist_chr_dev', f: 'dp3_resolve' },
				success: function(resp) {
					$j('[id=dp3_resolve-container__RAND__], [id=dp3_resolve-container-readonly__RAND__]').html('<span id="dp3_resolve-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_dynamicstorypoints3_view_parent]').hide(); } else { $j('.btn[id=class_dynamicstorypoints3_view_parent]').show(); }

					if(typeof(dp3_resolve_update_autofills__RAND__) == 'function') dp3_resolve_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function mc_resolve_reload__RAND__(filterer_dp1_resolve, filterer_dp2_resolve, filterer_dp3_resolve) {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#mc_resolve-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { filterer_dp1_resolve: filterer_dp1_resolve, filterer_dp2_resolve: filterer_dp2_resolve, filterer_dp3_resolve: filterer_dp3_resolve, id: AppGini.current_mc_resolve__RAND__.value, t: 'hist_chr_dev', f: 'mc_resolve' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="mc_resolve"]').val(resp.results[0].id);
							$j('[id=mc_resolve-container-readonly__RAND__]').html('<span id="mc_resolve-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_dynamicstorypoints4_view_parent]').hide(); } else { $j('.btn[id=class_dynamicstorypoints4_view_parent]').show(); }


							if(typeof(mc_resolve_update_autofills__RAND__) == 'function') mc_resolve_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { filterer_dp1_resolve: filterer_dp1_resolve, filterer_dp2_resolve: filterer_dp2_resolve, filterer_dp3_resolve: filterer_dp3_resolve, s: term, p: page, t: 'hist_chr_dev', f: 'mc_resolve' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_mc_resolve__RAND__.value = e.added.id;
				AppGini.current_mc_resolve__RAND__.text = e.added.text;
				$j('[name="mc_resolve"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_dynamicstorypoints4_view_parent]').hide(); } else { $j('.btn[id=class_dynamicstorypoints4_view_parent]').show(); }


				if(typeof(mc_resolve_update_autofills__RAND__) == 'function') mc_resolve_update_autofills__RAND__();
			});

			if(!$j("#mc_resolve-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_mc_resolve__RAND__.value, t: 'hist_chr_dev', f: 'mc_resolve' },
					success: function(resp) {
						$j('[name="mc_resolve"]').val(resp.results[0].id);
						$j('[id=mc_resolve-container-readonly__RAND__]').html('<span id="mc_resolve-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_dynamicstorypoints4_view_parent]').hide(); } else { $j('.btn[id=class_dynamicstorypoints4_view_parent]').show(); }

						if(typeof(mc_resolve_update_autofills__RAND__) == 'function') mc_resolve_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_mc_resolve__RAND__.value, t: 'hist_chr_dev', f: 'mc_resolve' },
				success: function(resp) {
					$j('[id=mc_resolve-container__RAND__], [id=mc_resolve-container-readonly__RAND__]').html('<span id="mc_resolve-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_dynamicstorypoints4_view_parent]').hide(); } else { $j('.btn[id=class_dynamicstorypoints4_view_parent]').show(); }

					if(typeof(mc_resolve_update_autofills__RAND__) == 'function') mc_resolve_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function illust_resolve_reload__RAND__(filterer_hist_story, filterer_agent_name) {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#illust_resolve-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { filterer_hist_story: filterer_hist_story, filterer_agent_name: filterer_agent_name, id: AppGini.current_illust_resolve__RAND__.value, t: 'hist_chr_dev', f: 'illust_resolve' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="illust_resolve"]').val(resp.results[0].id);
							$j('[id=illust_resolve-container-readonly__RAND__]').html('<span id="illust_resolve-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_chr_scene_view_parent]').hide(); } else { $j('.btn[id=hist_chr_scene_view_parent]').show(); }


							if(typeof(illust_resolve_update_autofills__RAND__) == 'function') illust_resolve_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { filterer_hist_story: filterer_hist_story, filterer_agent_name: filterer_agent_name, s: term, p: page, t: 'hist_chr_dev', f: 'illust_resolve' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_illust_resolve__RAND__.value = e.added.id;
				AppGini.current_illust_resolve__RAND__.text = e.added.text;
				$j('[name="illust_resolve"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_chr_scene_view_parent]').hide(); } else { $j('.btn[id=hist_chr_scene_view_parent]').show(); }


				if(typeof(illust_resolve_update_autofills__RAND__) == 'function') illust_resolve_update_autofills__RAND__();
			});

			if(!$j("#illust_resolve-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_illust_resolve__RAND__.value, t: 'hist_chr_dev', f: 'illust_resolve' },
					success: function(resp) {
						$j('[name="illust_resolve"]').val(resp.results[0].id);
						$j('[id=illust_resolve-container-readonly__RAND__]').html('<span id="illust_resolve-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_chr_scene_view_parent]').hide(); } else { $j('.btn[id=hist_chr_scene_view_parent]').show(); }

						if(typeof(illust_resolve_update_autofills__RAND__) == 'function') illust_resolve_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_illust_resolve__RAND__.value, t: 'hist_chr_dev', f: 'illust_resolve' },
				success: function(resp) {
					$j('[id=illust_resolve-container__RAND__], [id=illust_resolve-container-readonly__RAND__]').html('<span id="illust_resolve-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_chr_scene_view_parent]').hide(); } else { $j('.btn[id=hist_chr_scene_view_parent]').show(); }

					if(typeof(illust_resolve_update_autofills__RAND__) == 'function') illust_resolve_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function dp3_growth_reload__RAND__(filterer_dp1_resolve, filterer_dp2_resolve) {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#dp3_growth-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { filterer_dp1_resolve: filterer_dp1_resolve, filterer_dp2_resolve: filterer_dp2_resolve, id: AppGini.current_dp3_growth__RAND__.value, t: 'hist_chr_dev', f: 'dp3_growth' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="dp3_growth"]').val(resp.results[0].id);
							$j('[id=dp3_growth-container-readonly__RAND__]').html('<span id="dp3_growth-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_dynamicstorypoints3_view_parent]').hide(); } else { $j('.btn[id=class_dynamicstorypoints3_view_parent]').show(); }

						if(typeof(mc_approach_reload__RAND__) == 'function') mc_approach_reload__RAND__($j('#dp1_resolve').val(), $j('#dp2_resolve').val(), AppGini.current_dp3_growth__RAND__.value);

							if(typeof(dp3_growth_update_autofills__RAND__) == 'function') dp3_growth_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { filterer_dp1_resolve: filterer_dp1_resolve, filterer_dp2_resolve: filterer_dp2_resolve, s: term, p: page, t: 'hist_chr_dev', f: 'dp3_growth' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_dp3_growth__RAND__.value = e.added.id;
				AppGini.current_dp3_growth__RAND__.text = e.added.text;
				$j('[name="dp3_growth"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_dynamicstorypoints3_view_parent]').hide(); } else { $j('.btn[id=class_dynamicstorypoints3_view_parent]').show(); }

						if(typeof(mc_approach_reload__RAND__) == 'function') mc_approach_reload__RAND__($j('#dp1_resolve').val(), $j('#dp2_resolve').val(), AppGini.current_dp3_growth__RAND__.value);

				if(typeof(dp3_growth_update_autofills__RAND__) == 'function') dp3_growth_update_autofills__RAND__();
			});

			if(!$j("#dp3_growth-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_dp3_growth__RAND__.value, t: 'hist_chr_dev', f: 'dp3_growth' },
					success: function(resp) {
						$j('[name="dp3_growth"]').val(resp.results[0].id);
						$j('[id=dp3_growth-container-readonly__RAND__]').html('<span id="dp3_growth-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_dynamicstorypoints3_view_parent]').hide(); } else { $j('.btn[id=class_dynamicstorypoints3_view_parent]').show(); }

						if(typeof(dp3_growth_update_autofills__RAND__) == 'function') dp3_growth_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_dp3_growth__RAND__.value, t: 'hist_chr_dev', f: 'dp3_growth' },
				success: function(resp) {
					$j('[id=dp3_growth-container__RAND__], [id=dp3_growth-container-readonly__RAND__]').html('<span id="dp3_growth-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_dynamicstorypoints3_view_parent]').hide(); } else { $j('.btn[id=class_dynamicstorypoints3_view_parent]').show(); }

					if(typeof(dp3_growth_update_autofills__RAND__) == 'function') dp3_growth_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function mc_growth_reload__RAND__(filterer_dp1_resolve, filterer_dp2_resolve, filterer_dp3_resolve) {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#mc_growth-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { filterer_dp1_resolve: filterer_dp1_resolve, filterer_dp2_resolve: filterer_dp2_resolve, filterer_dp3_resolve: filterer_dp3_resolve, id: AppGini.current_mc_growth__RAND__.value, t: 'hist_chr_dev', f: 'mc_growth' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="mc_growth"]').val(resp.results[0].id);
							$j('[id=mc_growth-container-readonly__RAND__]').html('<span id="mc_growth-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_dynamicstorypoints4_view_parent]').hide(); } else { $j('.btn[id=class_dynamicstorypoints4_view_parent]').show(); }


							if(typeof(mc_growth_update_autofills__RAND__) == 'function') mc_growth_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { filterer_dp1_resolve: filterer_dp1_resolve, filterer_dp2_resolve: filterer_dp2_resolve, filterer_dp3_resolve: filterer_dp3_resolve, s: term, p: page, t: 'hist_chr_dev', f: 'mc_growth' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_mc_growth__RAND__.value = e.added.id;
				AppGini.current_mc_growth__RAND__.text = e.added.text;
				$j('[name="mc_growth"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_dynamicstorypoints4_view_parent]').hide(); } else { $j('.btn[id=class_dynamicstorypoints4_view_parent]').show(); }


				if(typeof(mc_growth_update_autofills__RAND__) == 'function') mc_growth_update_autofills__RAND__();
			});

			if(!$j("#mc_growth-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_mc_growth__RAND__.value, t: 'hist_chr_dev', f: 'mc_growth' },
					success: function(resp) {
						$j('[name="mc_growth"]').val(resp.results[0].id);
						$j('[id=mc_growth-container-readonly__RAND__]').html('<span id="mc_growth-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_dynamicstorypoints4_view_parent]').hide(); } else { $j('.btn[id=class_dynamicstorypoints4_view_parent]').show(); }

						if(typeof(mc_growth_update_autofills__RAND__) == 'function') mc_growth_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_mc_growth__RAND__.value, t: 'hist_chr_dev', f: 'mc_growth' },
				success: function(resp) {
					$j('[id=mc_growth-container__RAND__], [id=mc_growth-container-readonly__RAND__]').html('<span id="mc_growth-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_dynamicstorypoints4_view_parent]').hide(); } else { $j('.btn[id=class_dynamicstorypoints4_view_parent]').show(); }

					if(typeof(mc_growth_update_autofills__RAND__) == 'function') mc_growth_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function illust_growth_reload__RAND__(filterer_hist_story, filterer_agent_name) {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#illust_growth-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { filterer_hist_story: filterer_hist_story, filterer_agent_name: filterer_agent_name, id: AppGini.current_illust_growth__RAND__.value, t: 'hist_chr_dev', f: 'illust_growth' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="illust_growth"]').val(resp.results[0].id);
							$j('[id=illust_growth-container-readonly__RAND__]').html('<span id="illust_growth-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_chr_scene_view_parent]').hide(); } else { $j('.btn[id=hist_chr_scene_view_parent]').show(); }


							if(typeof(illust_growth_update_autofills__RAND__) == 'function') illust_growth_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { filterer_hist_story: filterer_hist_story, filterer_agent_name: filterer_agent_name, s: term, p: page, t: 'hist_chr_dev', f: 'illust_growth' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_illust_growth__RAND__.value = e.added.id;
				AppGini.current_illust_growth__RAND__.text = e.added.text;
				$j('[name="illust_growth"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_chr_scene_view_parent]').hide(); } else { $j('.btn[id=hist_chr_scene_view_parent]').show(); }


				if(typeof(illust_growth_update_autofills__RAND__) == 'function') illust_growth_update_autofills__RAND__();
			});

			if(!$j("#illust_growth-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_illust_growth__RAND__.value, t: 'hist_chr_dev', f: 'illust_growth' },
					success: function(resp) {
						$j('[name="illust_growth"]').val(resp.results[0].id);
						$j('[id=illust_growth-container-readonly__RAND__]').html('<span id="illust_growth-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_chr_scene_view_parent]').hide(); } else { $j('.btn[id=hist_chr_scene_view_parent]').show(); }

						if(typeof(illust_growth_update_autofills__RAND__) == 'function') illust_growth_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_illust_growth__RAND__.value, t: 'hist_chr_dev', f: 'illust_growth' },
				success: function(resp) {
					$j('[id=illust_growth-container__RAND__], [id=illust_growth-container-readonly__RAND__]').html('<span id="illust_growth-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_chr_scene_view_parent]').hide(); } else { $j('.btn[id=hist_chr_scene_view_parent]').show(); }

					if(typeof(illust_growth_update_autofills__RAND__) == 'function') illust_growth_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function dp3_approach_reload__RAND__(filterer_dp1_resolve, filterer_dp2_resolve) {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#dp3_approach-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { filterer_dp1_resolve: filterer_dp1_resolve, filterer_dp2_resolve: filterer_dp2_resolve, id: AppGini.current_dp3_approach__RAND__.value, t: 'hist_chr_dev', f: 'dp3_approach' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="dp3_approach"]').val(resp.results[0].id);
							$j('[id=dp3_approach-container-readonly__RAND__]').html('<span id="dp3_approach-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_dynamicstorypoints3_view_parent]').hide(); } else { $j('.btn[id=class_dynamicstorypoints3_view_parent]').show(); }


							if(typeof(dp3_approach_update_autofills__RAND__) == 'function') dp3_approach_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { filterer_dp1_resolve: filterer_dp1_resolve, filterer_dp2_resolve: filterer_dp2_resolve, s: term, p: page, t: 'hist_chr_dev', f: 'dp3_approach' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_dp3_approach__RAND__.value = e.added.id;
				AppGini.current_dp3_approach__RAND__.text = e.added.text;
				$j('[name="dp3_approach"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_dynamicstorypoints3_view_parent]').hide(); } else { $j('.btn[id=class_dynamicstorypoints3_view_parent]').show(); }


				if(typeof(dp3_approach_update_autofills__RAND__) == 'function') dp3_approach_update_autofills__RAND__();
			});

			if(!$j("#dp3_approach-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_dp3_approach__RAND__.value, t: 'hist_chr_dev', f: 'dp3_approach' },
					success: function(resp) {
						$j('[name="dp3_approach"]').val(resp.results[0].id);
						$j('[id=dp3_approach-container-readonly__RAND__]').html('<span id="dp3_approach-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_dynamicstorypoints3_view_parent]').hide(); } else { $j('.btn[id=class_dynamicstorypoints3_view_parent]').show(); }

						if(typeof(dp3_approach_update_autofills__RAND__) == 'function') dp3_approach_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_dp3_approach__RAND__.value, t: 'hist_chr_dev', f: 'dp3_approach' },
				success: function(resp) {
					$j('[id=dp3_approach-container__RAND__], [id=dp3_approach-container-readonly__RAND__]').html('<span id="dp3_approach-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_dynamicstorypoints3_view_parent]').hide(); } else { $j('.btn[id=class_dynamicstorypoints3_view_parent]').show(); }

					if(typeof(dp3_approach_update_autofills__RAND__) == 'function') dp3_approach_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function mc_approach_reload__RAND__(filterer_dp1_resolve, filterer_dp2_resolve, filterer_dp3_growth) {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#mc_approach-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { filterer_dp1_resolve: filterer_dp1_resolve, filterer_dp2_resolve: filterer_dp2_resolve, filterer_dp3_growth: filterer_dp3_growth, id: AppGini.current_mc_approach__RAND__.value, t: 'hist_chr_dev', f: 'mc_approach' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="mc_approach"]').val(resp.results[0].id);
							$j('[id=mc_approach-container-readonly__RAND__]').html('<span id="mc_approach-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_dynamicstorypoints4_view_parent]').hide(); } else { $j('.btn[id=class_dynamicstorypoints4_view_parent]').show(); }


							if(typeof(mc_approach_update_autofills__RAND__) == 'function') mc_approach_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { filterer_dp1_resolve: filterer_dp1_resolve, filterer_dp2_resolve: filterer_dp2_resolve, filterer_dp3_growth: filterer_dp3_growth, s: term, p: page, t: 'hist_chr_dev', f: 'mc_approach' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_mc_approach__RAND__.value = e.added.id;
				AppGini.current_mc_approach__RAND__.text = e.added.text;
				$j('[name="mc_approach"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_dynamicstorypoints4_view_parent]').hide(); } else { $j('.btn[id=class_dynamicstorypoints4_view_parent]').show(); }


				if(typeof(mc_approach_update_autofills__RAND__) == 'function') mc_approach_update_autofills__RAND__();
			});

			if(!$j("#mc_approach-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_mc_approach__RAND__.value, t: 'hist_chr_dev', f: 'mc_approach' },
					success: function(resp) {
						$j('[name="mc_approach"]').val(resp.results[0].id);
						$j('[id=mc_approach-container-readonly__RAND__]').html('<span id="mc_approach-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_dynamicstorypoints4_view_parent]').hide(); } else { $j('.btn[id=class_dynamicstorypoints4_view_parent]').show(); }

						if(typeof(mc_approach_update_autofills__RAND__) == 'function') mc_approach_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_mc_approach__RAND__.value, t: 'hist_chr_dev', f: 'mc_approach' },
				success: function(resp) {
					$j('[id=mc_approach-container__RAND__], [id=mc_approach-container-readonly__RAND__]').html('<span id="mc_approach-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_dynamicstorypoints4_view_parent]').hide(); } else { $j('.btn[id=class_dynamicstorypoints4_view_parent]').show(); }

					if(typeof(mc_approach_update_autofills__RAND__) == 'function') mc_approach_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function illust_approach_reload__RAND__(filterer_hist_story, filterer_agent_name) {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#illust_approach-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { filterer_hist_story: filterer_hist_story, filterer_agent_name: filterer_agent_name, id: AppGini.current_illust_approach__RAND__.value, t: 'hist_chr_dev', f: 'illust_approach' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="illust_approach"]').val(resp.results[0].id);
							$j('[id=illust_approach-container-readonly__RAND__]').html('<span id="illust_approach-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_chr_scene_view_parent]').hide(); } else { $j('.btn[id=hist_chr_scene_view_parent]').show(); }


							if(typeof(illust_approach_update_autofills__RAND__) == 'function') illust_approach_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { filterer_hist_story: filterer_hist_story, filterer_agent_name: filterer_agent_name, s: term, p: page, t: 'hist_chr_dev', f: 'illust_approach' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_illust_approach__RAND__.value = e.added.id;
				AppGini.current_illust_approach__RAND__.text = e.added.text;
				$j('[name="illust_approach"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_chr_scene_view_parent]').hide(); } else { $j('.btn[id=hist_chr_scene_view_parent]').show(); }


				if(typeof(illust_approach_update_autofills__RAND__) == 'function') illust_approach_update_autofills__RAND__();
			});

			if(!$j("#illust_approach-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_illust_approach__RAND__.value, t: 'hist_chr_dev', f: 'illust_approach' },
					success: function(resp) {
						$j('[name="illust_approach"]').val(resp.results[0].id);
						$j('[id=illust_approach-container-readonly__RAND__]').html('<span id="illust_approach-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_chr_scene_view_parent]').hide(); } else { $j('.btn[id=hist_chr_scene_view_parent]').show(); }

						if(typeof(illust_approach_update_autofills__RAND__) == 'function') illust_approach_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_illust_approach__RAND__.value, t: 'hist_chr_dev', f: 'illust_approach' },
				success: function(resp) {
					$j('[id=illust_approach-container__RAND__], [id=illust_approach-container-readonly__RAND__]').html('<span id="illust_approach-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_chr_scene_view_parent]').hide(); } else { $j('.btn[id=hist_chr_scene_view_parent]').show(); }

					if(typeof(illust_approach_update_autofills__RAND__) == 'function') illust_approach_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function dp3_psstyle_reload__RAND__(filterer_dp1_resolve, filterer_dp2_resolve) {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#dp3_psstyle-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { filterer_dp1_resolve: filterer_dp1_resolve, filterer_dp2_resolve: filterer_dp2_resolve, id: AppGini.current_dp3_psstyle__RAND__.value, t: 'hist_chr_dev', f: 'dp3_psstyle' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="dp3_psstyle"]').val(resp.results[0].id);
							$j('[id=dp3_psstyle-container-readonly__RAND__]').html('<span id="dp3_psstyle-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_dynamicstorypoints3_view_parent]').hide(); } else { $j('.btn[id=class_dynamicstorypoints3_view_parent]').show(); }


							if(typeof(dp3_psstyle_update_autofills__RAND__) == 'function') dp3_psstyle_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { filterer_dp1_resolve: filterer_dp1_resolve, filterer_dp2_resolve: filterer_dp2_resolve, s: term, p: page, t: 'hist_chr_dev', f: 'dp3_psstyle' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_dp3_psstyle__RAND__.value = e.added.id;
				AppGini.current_dp3_psstyle__RAND__.text = e.added.text;
				$j('[name="dp3_psstyle"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_dynamicstorypoints3_view_parent]').hide(); } else { $j('.btn[id=class_dynamicstorypoints3_view_parent]').show(); }


				if(typeof(dp3_psstyle_update_autofills__RAND__) == 'function') dp3_psstyle_update_autofills__RAND__();
			});

			if(!$j("#dp3_psstyle-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_dp3_psstyle__RAND__.value, t: 'hist_chr_dev', f: 'dp3_psstyle' },
					success: function(resp) {
						$j('[name="dp3_psstyle"]').val(resp.results[0].id);
						$j('[id=dp3_psstyle-container-readonly__RAND__]').html('<span id="dp3_psstyle-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_dynamicstorypoints3_view_parent]').hide(); } else { $j('.btn[id=class_dynamicstorypoints3_view_parent]').show(); }

						if(typeof(dp3_psstyle_update_autofills__RAND__) == 'function') dp3_psstyle_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_dp3_psstyle__RAND__.value, t: 'hist_chr_dev', f: 'dp3_psstyle' },
				success: function(resp) {
					$j('[id=dp3_psstyle-container__RAND__], [id=dp3_psstyle-container-readonly__RAND__]').html('<span id="dp3_psstyle-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_dynamicstorypoints3_view_parent]').hide(); } else { $j('.btn[id=class_dynamicstorypoints3_view_parent]').show(); }

					if(typeof(dp3_psstyle_update_autofills__RAND__) == 'function') dp3_psstyle_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function mc_ps_style_reload__RAND__(filterer_dp1_resolve, filterer_dp2_resolve) {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#mc_ps_style-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { filterer_dp1_resolve: filterer_dp1_resolve, filterer_dp2_resolve: filterer_dp2_resolve, id: AppGini.current_mc_ps_style__RAND__.value, t: 'hist_chr_dev', f: 'mc_ps_style' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="mc_ps_style"]').val(resp.results[0].id);
							$j('[id=mc_ps_style-container-readonly__RAND__]').html('<span id="mc_ps_style-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_dynamicstorypoints4_view_parent]').hide(); } else { $j('.btn[id=class_dynamicstorypoints4_view_parent]').show(); }


							if(typeof(mc_ps_style_update_autofills__RAND__) == 'function') mc_ps_style_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { filterer_dp1_resolve: filterer_dp1_resolve, filterer_dp2_resolve: filterer_dp2_resolve, s: term, p: page, t: 'hist_chr_dev', f: 'mc_ps_style' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_mc_ps_style__RAND__.value = e.added.id;
				AppGini.current_mc_ps_style__RAND__.text = e.added.text;
				$j('[name="mc_ps_style"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_dynamicstorypoints4_view_parent]').hide(); } else { $j('.btn[id=class_dynamicstorypoints4_view_parent]').show(); }


				if(typeof(mc_ps_style_update_autofills__RAND__) == 'function') mc_ps_style_update_autofills__RAND__();
			});

			if(!$j("#mc_ps_style-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_mc_ps_style__RAND__.value, t: 'hist_chr_dev', f: 'mc_ps_style' },
					success: function(resp) {
						$j('[name="mc_ps_style"]').val(resp.results[0].id);
						$j('[id=mc_ps_style-container-readonly__RAND__]').html('<span id="mc_ps_style-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_dynamicstorypoints4_view_parent]').hide(); } else { $j('.btn[id=class_dynamicstorypoints4_view_parent]').show(); }

						if(typeof(mc_ps_style_update_autofills__RAND__) == 'function') mc_ps_style_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_mc_ps_style__RAND__.value, t: 'hist_chr_dev', f: 'mc_ps_style' },
				success: function(resp) {
					$j('[id=mc_ps_style-container__RAND__], [id=mc_ps_style-container-readonly__RAND__]').html('<span id="mc_ps_style-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_dynamicstorypoints4_view_parent]').hide(); } else { $j('.btn[id=class_dynamicstorypoints4_view_parent]').show(); }

					if(typeof(mc_ps_style_update_autofills__RAND__) == 'function') mc_ps_style_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function illust_ps_style_reload__RAND__(filterer_hist_story, filterer_agent_name) {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#illust_ps_style-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { filterer_hist_story: filterer_hist_story, filterer_agent_name: filterer_agent_name, id: AppGini.current_illust_ps_style__RAND__.value, t: 'hist_chr_dev', f: 'illust_ps_style' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="illust_ps_style"]').val(resp.results[0].id);
							$j('[id=illust_ps_style-container-readonly__RAND__]').html('<span id="illust_ps_style-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_chr_scene_view_parent]').hide(); } else { $j('.btn[id=hist_chr_scene_view_parent]').show(); }


							if(typeof(illust_ps_style_update_autofills__RAND__) == 'function') illust_ps_style_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { filterer_hist_story: filterer_hist_story, filterer_agent_name: filterer_agent_name, s: term, p: page, t: 'hist_chr_dev', f: 'illust_ps_style' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_illust_ps_style__RAND__.value = e.added.id;
				AppGini.current_illust_ps_style__RAND__.text = e.added.text;
				$j('[name="illust_ps_style"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_chr_scene_view_parent]').hide(); } else { $j('.btn[id=hist_chr_scene_view_parent]').show(); }


				if(typeof(illust_ps_style_update_autofills__RAND__) == 'function') illust_ps_style_update_autofills__RAND__();
			});

			if(!$j("#illust_ps_style-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_illust_ps_style__RAND__.value, t: 'hist_chr_dev', f: 'illust_ps_style' },
					success: function(resp) {
						$j('[name="illust_ps_style"]').val(resp.results[0].id);
						$j('[id=illust_ps_style-container-readonly__RAND__]').html('<span id="illust_ps_style-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_chr_scene_view_parent]').hide(); } else { $j('.btn[id=hist_chr_scene_view_parent]').show(); }

						if(typeof(illust_ps_style_update_autofills__RAND__) == 'function') illust_ps_style_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_illust_ps_style__RAND__.value, t: 'hist_chr_dev', f: 'illust_ps_style' },
				success: function(resp) {
					$j('[id=illust_ps_style-container__RAND__], [id=illust_ps_style-container-readonly__RAND__]').html('<span id="illust_ps_style-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_chr_scene_view_parent]').hide(); } else { $j('.btn[id=hist_chr_scene_view_parent]').show(); }

					if(typeof(illust_ps_style_update_autofills__RAND__) == 'function') illust_ps_style_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function cw_gender_reload__RAND__() {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#cw_gender-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_cw_gender__RAND__.value, t: 'hist_chr_dev', f: 'cw_gender' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="cw_gender"]').val(resp.results[0].id);
							$j('[id=cw_gender-container-readonly__RAND__]').html('<span id="cw_gender-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_gender_view_parent]').hide(); } else { $j('.btn[id=class_gender_view_parent]').show(); }


							if(typeof(cw_gender_update_autofills__RAND__) == 'function') cw_gender_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'hist_chr_dev', f: 'cw_gender' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_cw_gender__RAND__.value = e.added.id;
				AppGini.current_cw_gender__RAND__.text = e.added.text;
				$j('[name="cw_gender"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_gender_view_parent]').hide(); } else { $j('.btn[id=class_gender_view_parent]').show(); }


				if(typeof(cw_gender_update_autofills__RAND__) == 'function') cw_gender_update_autofills__RAND__();
			});

			if(!$j("#cw_gender-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_cw_gender__RAND__.value, t: 'hist_chr_dev', f: 'cw_gender' },
					success: function(resp) {
						$j('[name="cw_gender"]').val(resp.results[0].id);
						$j('[id=cw_gender-container-readonly__RAND__]').html('<span id="cw_gender-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_gender_view_parent]').hide(); } else { $j('.btn[id=class_gender_view_parent]').show(); }

						if(typeof(cw_gender_update_autofills__RAND__) == 'function') cw_gender_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_cw_gender__RAND__.value, t: 'hist_chr_dev', f: 'cw_gender' },
				success: function(resp) {
					$j('[id=cw_gender-container__RAND__], [id=cw_gender-container-readonly__RAND__]').html('<span id="cw_gender-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_gender_view_parent]').hide(); } else { $j('.btn[id=class_gender_view_parent]').show(); }

					if(typeof(cw_gender_update_autofills__RAND__) == 'function') cw_gender_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function noetictension_reload__RAND__() {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#noetictension-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_noetictension__RAND__.value, t: 'hist_chr_dev', f: 'noetictension' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="noetictension"]').val(resp.results[0].id);
							$j('[id=noetictension-container-readonly__RAND__]').html('<span id="noetictension-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_nt_view_parent]').hide(); } else { $j('.btn[id=class_nt_view_parent]').show(); }


							if(typeof(noetictension_update_autofills__RAND__) == 'function') noetictension_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'hist_chr_dev', f: 'noetictension' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_noetictension__RAND__.value = e.added.id;
				AppGini.current_noetictension__RAND__.text = e.added.text;
				$j('[name="noetictension"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_nt_view_parent]').hide(); } else { $j('.btn[id=class_nt_view_parent]').show(); }


				if(typeof(noetictension_update_autofills__RAND__) == 'function') noetictension_update_autofills__RAND__();
			});

			if(!$j("#noetictension-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_noetictension__RAND__.value, t: 'hist_chr_dev', f: 'noetictension' },
					success: function(resp) {
						$j('[name="noetictension"]').val(resp.results[0].id);
						$j('[id=noetictension-container-readonly__RAND__]').html('<span id="noetictension-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_nt_view_parent]').hide(); } else { $j('.btn[id=class_nt_view_parent]').show(); }

						if(typeof(noetictension_update_autofills__RAND__) == 'function') noetictension_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_noetictension__RAND__.value, t: 'hist_chr_dev', f: 'noetictension' },
				success: function(resp) {
					$j('[id=noetictension-container__RAND__], [id=noetictension-container-readonly__RAND__]').html('<span id="noetictension-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_nt_view_parent]').hide(); } else { $j('.btn[id=class_nt_view_parent]').show(); }

					if(typeof(noetictension_update_autofills__RAND__) == 'function') noetictension_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function illust_nt_reload__RAND__(filterer_hist_story, filterer_agent_name) {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#illust_nt-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { filterer_hist_story: filterer_hist_story, filterer_agent_name: filterer_agent_name, id: AppGini.current_illust_nt__RAND__.value, t: 'hist_chr_dev', f: 'illust_nt' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="illust_nt"]').val(resp.results[0].id);
							$j('[id=illust_nt-container-readonly__RAND__]').html('<span id="illust_nt-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_chr_scene_view_parent]').hide(); } else { $j('.btn[id=hist_chr_scene_view_parent]').show(); }


							if(typeof(illust_nt_update_autofills__RAND__) == 'function') illust_nt_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { filterer_hist_story: filterer_hist_story, filterer_agent_name: filterer_agent_name, s: term, p: page, t: 'hist_chr_dev', f: 'illust_nt' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_illust_nt__RAND__.value = e.added.id;
				AppGini.current_illust_nt__RAND__.text = e.added.text;
				$j('[name="illust_nt"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_chr_scene_view_parent]').hide(); } else { $j('.btn[id=hist_chr_scene_view_parent]').show(); }


				if(typeof(illust_nt_update_autofills__RAND__) == 'function') illust_nt_update_autofills__RAND__();
			});

			if(!$j("#illust_nt-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_illust_nt__RAND__.value, t: 'hist_chr_dev', f: 'illust_nt' },
					success: function(resp) {
						$j('[name="illust_nt"]').val(resp.results[0].id);
						$j('[id=illust_nt-container-readonly__RAND__]').html('<span id="illust_nt-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_chr_scene_view_parent]').hide(); } else { $j('.btn[id=hist_chr_scene_view_parent]').show(); }

						if(typeof(illust_nt_update_autofills__RAND__) == 'function') illust_nt_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_illust_nt__RAND__.value, t: 'hist_chr_dev', f: 'illust_nt' },
				success: function(resp) {
					$j('[id=illust_nt-container__RAND__], [id=illust_nt-container-readonly__RAND__]').html('<span id="illust_nt-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_chr_scene_view_parent]').hide(); } else { $j('.btn[id=hist_chr_scene_view_parent]').show(); }

					if(typeof(illust_nt_update_autofills__RAND__) == 'function') illust_nt_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function impression_reload__RAND__() {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#impression-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_impression__RAND__.value, t: 'hist_chr_dev', f: 'impression' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="impression"]').val(resp.results[0].id);
							$j('[id=impression-container-readonly__RAND__]').html('<span id="impression-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_im_view_parent]').hide(); } else { $j('.btn[id=class_im_view_parent]').show(); }


							if(typeof(impression_update_autofills__RAND__) == 'function') impression_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'hist_chr_dev', f: 'impression' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_impression__RAND__.value = e.added.id;
				AppGini.current_impression__RAND__.text = e.added.text;
				$j('[name="impression"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_im_view_parent]').hide(); } else { $j('.btn[id=class_im_view_parent]').show(); }


				if(typeof(impression_update_autofills__RAND__) == 'function') impression_update_autofills__RAND__();
			});

			if(!$j("#impression-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_impression__RAND__.value, t: 'hist_chr_dev', f: 'impression' },
					success: function(resp) {
						$j('[name="impression"]').val(resp.results[0].id);
						$j('[id=impression-container-readonly__RAND__]').html('<span id="impression-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_im_view_parent]').hide(); } else { $j('.btn[id=class_im_view_parent]').show(); }

						if(typeof(impression_update_autofills__RAND__) == 'function') impression_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_impression__RAND__.value, t: 'hist_chr_dev', f: 'impression' },
				success: function(resp) {
					$j('[id=impression-container__RAND__], [id=impression-container-readonly__RAND__]').html('<span id="impression-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=class_im_view_parent]').hide(); } else { $j('.btn[id=class_im_view_parent]').show(); }

					if(typeof(impression_update_autofills__RAND__) == 'function') impression_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function illust_im_reload__RAND__(filterer_hist_story, filterer_agent_name) {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#illust_im-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { filterer_hist_story: filterer_hist_story, filterer_agent_name: filterer_agent_name, id: AppGini.current_illust_im__RAND__.value, t: 'hist_chr_dev', f: 'illust_im' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="illust_im"]').val(resp.results[0].id);
							$j('[id=illust_im-container-readonly__RAND__]').html('<span id="illust_im-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_chr_scene_view_parent]').hide(); } else { $j('.btn[id=hist_chr_scene_view_parent]').show(); }


							if(typeof(illust_im_update_autofills__RAND__) == 'function') illust_im_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { filterer_hist_story: filterer_hist_story, filterer_agent_name: filterer_agent_name, s: term, p: page, t: 'hist_chr_dev', f: 'illust_im' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_illust_im__RAND__.value = e.added.id;
				AppGini.current_illust_im__RAND__.text = e.added.text;
				$j('[name="illust_im"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_chr_scene_view_parent]').hide(); } else { $j('.btn[id=hist_chr_scene_view_parent]').show(); }


				if(typeof(illust_im_update_autofills__RAND__) == 'function') illust_im_update_autofills__RAND__();
			});

			if(!$j("#illust_im-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_illust_im__RAND__.value, t: 'hist_chr_dev', f: 'illust_im' },
					success: function(resp) {
						$j('[name="illust_im"]').val(resp.results[0].id);
						$j('[id=illust_im-container-readonly__RAND__]').html('<span id="illust_im-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_chr_scene_view_parent]').hide(); } else { $j('.btn[id=hist_chr_scene_view_parent]').show(); }

						if(typeof(illust_im_update_autofills__RAND__) == 'function') illust_im_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_illust_im__RAND__.value, t: 'hist_chr_dev', f: 'illust_im' },
				success: function(resp) {
					$j('[id=illust_im-container__RAND__], [id=illust_im-container-readonly__RAND__]').html('<span id="illust_im-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_chr_scene_view_parent]').hide(); } else { $j('.btn[id=hist_chr_scene_view_parent]').show(); }

					if(typeof(illust_im_update_autofills__RAND__) == 'function') illust_im_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function mcs_problem_reload__RAND__() {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#mcs_problem-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_mcs_problem__RAND__.value, t: 'hist_chr_dev', f: 'mcs_problem' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="mcs_problem"]').val(resp.results[0].id);
							$j('[id=mcs_problem-container-readonly__RAND__]').html('<span id="mcs_problem-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_storystatic_view_parent]').hide(); } else { $j('.btn[id=hist_storystatic_view_parent]').show(); }


							if(typeof(mcs_problem_update_autofills__RAND__) == 'function') mcs_problem_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'hist_chr_dev', f: 'mcs_problem' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_mcs_problem__RAND__.value = e.added.id;
				AppGini.current_mcs_problem__RAND__.text = e.added.text;
				$j('[name="mcs_problem"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_storystatic_view_parent]').hide(); } else { $j('.btn[id=hist_storystatic_view_parent]').show(); }


				if(typeof(mcs_problem_update_autofills__RAND__) == 'function') mcs_problem_update_autofills__RAND__();
			});

			if(!$j("#mcs_problem-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_mcs_problem__RAND__.value, t: 'hist_chr_dev', f: 'mcs_problem' },
					success: function(resp) {
						$j('[name="mcs_problem"]').val(resp.results[0].id);
						$j('[id=mcs_problem-container-readonly__RAND__]').html('<span id="mcs_problem-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_storystatic_view_parent]').hide(); } else { $j('.btn[id=hist_storystatic_view_parent]').show(); }

						if(typeof(mcs_problem_update_autofills__RAND__) == 'function') mcs_problem_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_mcs_problem__RAND__.value, t: 'hist_chr_dev', f: 'mcs_problem' },
				success: function(resp) {
					$j('[id=mcs_problem-container__RAND__], [id=mcs_problem-container-readonly__RAND__]').html('<span id="mcs_problem-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_storystatic_view_parent]').hide(); } else { $j('.btn[id=hist_storystatic_view_parent]').show(); }

					if(typeof(mcs_problem_update_autofills__RAND__) == 'function') mcs_problem_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function illust_mcs_problem_reload__RAND__(filterer_hist_story, filterer_agent_name) {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#illust_mcs_problem-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { filterer_hist_story: filterer_hist_story, filterer_agent_name: filterer_agent_name, id: AppGini.current_illust_mcs_problem__RAND__.value, t: 'hist_chr_dev', f: 'illust_mcs_problem' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="illust_mcs_problem"]').val(resp.results[0].id);
							$j('[id=illust_mcs_problem-container-readonly__RAND__]').html('<span id="illust_mcs_problem-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_chr_scene_view_parent]').hide(); } else { $j('.btn[id=hist_chr_scene_view_parent]').show(); }


							if(typeof(illust_mcs_problem_update_autofills__RAND__) == 'function') illust_mcs_problem_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { filterer_hist_story: filterer_hist_story, filterer_agent_name: filterer_agent_name, s: term, p: page, t: 'hist_chr_dev', f: 'illust_mcs_problem' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_illust_mcs_problem__RAND__.value = e.added.id;
				AppGini.current_illust_mcs_problem__RAND__.text = e.added.text;
				$j('[name="illust_mcs_problem"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_chr_scene_view_parent]').hide(); } else { $j('.btn[id=hist_chr_scene_view_parent]').show(); }


				if(typeof(illust_mcs_problem_update_autofills__RAND__) == 'function') illust_mcs_problem_update_autofills__RAND__();
			});

			if(!$j("#illust_mcs_problem-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_illust_mcs_problem__RAND__.value, t: 'hist_chr_dev', f: 'illust_mcs_problem' },
					success: function(resp) {
						$j('[name="illust_mcs_problem"]').val(resp.results[0].id);
						$j('[id=illust_mcs_problem-container-readonly__RAND__]').html('<span id="illust_mcs_problem-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_chr_scene_view_parent]').hide(); } else { $j('.btn[id=hist_chr_scene_view_parent]').show(); }

						if(typeof(illust_mcs_problem_update_autofills__RAND__) == 'function') illust_mcs_problem_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_illust_mcs_problem__RAND__.value, t: 'hist_chr_dev', f: 'illust_mcs_problem' },
				success: function(resp) {
					$j('[id=illust_mcs_problem-container__RAND__], [id=illust_mcs_problem-container-readonly__RAND__]').html('<span id="illust_mcs_problem-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_chr_scene_view_parent]').hide(); } else { $j('.btn[id=hist_chr_scene_view_parent]').show(); }

					if(typeof(illust_mcs_problem_update_autofills__RAND__) == 'function') illust_mcs_problem_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function illust_mcs_solution_reload__RAND__(filterer_hist_story, filterer_agent_name) {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#illust_mcs_solution-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { filterer_hist_story: filterer_hist_story, filterer_agent_name: filterer_agent_name, id: AppGini.current_illust_mcs_solution__RAND__.value, t: 'hist_chr_dev', f: 'illust_mcs_solution' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="illust_mcs_solution"]').val(resp.results[0].id);
							$j('[id=illust_mcs_solution-container-readonly__RAND__]').html('<span id="illust_mcs_solution-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_chr_scene_view_parent]').hide(); } else { $j('.btn[id=hist_chr_scene_view_parent]').show(); }


							if(typeof(illust_mcs_solution_update_autofills__RAND__) == 'function') illust_mcs_solution_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { filterer_hist_story: filterer_hist_story, filterer_agent_name: filterer_agent_name, s: term, p: page, t: 'hist_chr_dev', f: 'illust_mcs_solution' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_illust_mcs_solution__RAND__.value = e.added.id;
				AppGini.current_illust_mcs_solution__RAND__.text = e.added.text;
				$j('[name="illust_mcs_solution"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_chr_scene_view_parent]').hide(); } else { $j('.btn[id=hist_chr_scene_view_parent]').show(); }


				if(typeof(illust_mcs_solution_update_autofills__RAND__) == 'function') illust_mcs_solution_update_autofills__RAND__();
			});

			if(!$j("#illust_mcs_solution-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_illust_mcs_solution__RAND__.value, t: 'hist_chr_dev', f: 'illust_mcs_solution' },
					success: function(resp) {
						$j('[name="illust_mcs_solution"]').val(resp.results[0].id);
						$j('[id=illust_mcs_solution-container-readonly__RAND__]').html('<span id="illust_mcs_solution-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_chr_scene_view_parent]').hide(); } else { $j('.btn[id=hist_chr_scene_view_parent]').show(); }

						if(typeof(illust_mcs_solution_update_autofills__RAND__) == 'function') illust_mcs_solution_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_illust_mcs_solution__RAND__.value, t: 'hist_chr_dev', f: 'illust_mcs_solution' },
				success: function(resp) {
					$j('[id=illust_mcs_solution-container__RAND__], [id=illust_mcs_solution-container-readonly__RAND__]').html('<span id="illust_mcs_solution-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_chr_scene_view_parent]').hide(); } else { $j('.btn[id=hist_chr_scene_view_parent]').show(); }

					if(typeof(illust_mcs_solution_update_autofills__RAND__) == 'function') illust_mcs_solution_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function illust_mcs_symptom_reload__RAND__(filterer_hist_story, filterer_agent_name) {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#illust_mcs_symptom-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { filterer_hist_story: filterer_hist_story, filterer_agent_name: filterer_agent_name, id: AppGini.current_illust_mcs_symptom__RAND__.value, t: 'hist_chr_dev', f: 'illust_mcs_symptom' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="illust_mcs_symptom"]').val(resp.results[0].id);
							$j('[id=illust_mcs_symptom-container-readonly__RAND__]').html('<span id="illust_mcs_symptom-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_chr_scene_view_parent]').hide(); } else { $j('.btn[id=hist_chr_scene_view_parent]').show(); }


							if(typeof(illust_mcs_symptom_update_autofills__RAND__) == 'function') illust_mcs_symptom_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { filterer_hist_story: filterer_hist_story, filterer_agent_name: filterer_agent_name, s: term, p: page, t: 'hist_chr_dev', f: 'illust_mcs_symptom' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_illust_mcs_symptom__RAND__.value = e.added.id;
				AppGini.current_illust_mcs_symptom__RAND__.text = e.added.text;
				$j('[name="illust_mcs_symptom"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_chr_scene_view_parent]').hide(); } else { $j('.btn[id=hist_chr_scene_view_parent]').show(); }


				if(typeof(illust_mcs_symptom_update_autofills__RAND__) == 'function') illust_mcs_symptom_update_autofills__RAND__();
			});

			if(!$j("#illust_mcs_symptom-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_illust_mcs_symptom__RAND__.value, t: 'hist_chr_dev', f: 'illust_mcs_symptom' },
					success: function(resp) {
						$j('[name="illust_mcs_symptom"]').val(resp.results[0].id);
						$j('[id=illust_mcs_symptom-container-readonly__RAND__]').html('<span id="illust_mcs_symptom-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_chr_scene_view_parent]').hide(); } else { $j('.btn[id=hist_chr_scene_view_parent]').show(); }

						if(typeof(illust_mcs_symptom_update_autofills__RAND__) == 'function') illust_mcs_symptom_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_illust_mcs_symptom__RAND__.value, t: 'hist_chr_dev', f: 'illust_mcs_symptom' },
				success: function(resp) {
					$j('[id=illust_mcs_symptom-container__RAND__], [id=illust_mcs_symptom-container-readonly__RAND__]').html('<span id="illust_mcs_symptom-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_chr_scene_view_parent]').hide(); } else { $j('.btn[id=hist_chr_scene_view_parent]').show(); }

					if(typeof(illust_mcs_symptom_update_autofills__RAND__) == 'function') illust_mcs_symptom_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function illust_mcs_response_reload__RAND__(filterer_agent_name, filterer_hist_story) {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#illust_mcs_response-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { filterer_agent_name: filterer_agent_name, filterer_hist_story: filterer_hist_story, id: AppGini.current_illust_mcs_response__RAND__.value, t: 'hist_chr_dev', f: 'illust_mcs_response' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="illust_mcs_response"]').val(resp.results[0].id);
							$j('[id=illust_mcs_response-container-readonly__RAND__]').html('<span id="illust_mcs_response-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_chr_scene_view_parent]').hide(); } else { $j('.btn[id=hist_chr_scene_view_parent]').show(); }


							if(typeof(illust_mcs_response_update_autofills__RAND__) == 'function') illust_mcs_response_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { filterer_agent_name: filterer_agent_name, filterer_hist_story: filterer_hist_story, s: term, p: page, t: 'hist_chr_dev', f: 'illust_mcs_response' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_illust_mcs_response__RAND__.value = e.added.id;
				AppGini.current_illust_mcs_response__RAND__.text = e.added.text;
				$j('[name="illust_mcs_response"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_chr_scene_view_parent]').hide(); } else { $j('.btn[id=hist_chr_scene_view_parent]').show(); }


				if(typeof(illust_mcs_response_update_autofills__RAND__) == 'function') illust_mcs_response_update_autofills__RAND__();
			});

			if(!$j("#illust_mcs_response-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_illust_mcs_response__RAND__.value, t: 'hist_chr_dev', f: 'illust_mcs_response' },
					success: function(resp) {
						$j('[name="illust_mcs_response"]').val(resp.results[0].id);
						$j('[id=illust_mcs_response-container-readonly__RAND__]').html('<span id="illust_mcs_response-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_chr_scene_view_parent]').hide(); } else { $j('.btn[id=hist_chr_scene_view_parent]').show(); }

						if(typeof(illust_mcs_response_update_autofills__RAND__) == 'function') illust_mcs_response_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_illust_mcs_response__RAND__.value, t: 'hist_chr_dev', f: 'illust_mcs_response' },
				success: function(resp) {
					$j('[id=illust_mcs_response-container__RAND__], [id=illust_mcs_response-container-readonly__RAND__]').html('<span id="illust_mcs_response-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=hist_chr_scene_view_parent]').hide(); } else { $j('.btn[id=hist_chr_scene_view_parent]').show(); }

					if(typeof(illust_mcs_response_update_autofills__RAND__) == 'function') illust_mcs_response_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
	</script>
	<?php

	$lookups = str_replace('__RAND__', $rnd1, ob_get_contents());
	ob_end_clean();


	// code for template based detail view forms

	// open the detail view template
	if($dvprint) {
		$template_file = is_file("./{$TemplateDVP}") ? "./{$TemplateDVP}" : './templates/hist_chr_dev_templateDVP.html';
		$templateCode = @file_get_contents($template_file);
	} else {
		$template_file = is_file("./{$TemplateDV}") ? "./{$TemplateDV}" : './templates/hist_chr_dev_templateDV.html';
		$templateCode = @file_get_contents($template_file);
	}

	// process form title
	$templateCode = str_replace('<%%DETAIL_VIEW_TITLE%%>', 'Detail View', $templateCode);
	$templateCode = str_replace('<%%RND1%%>', $rnd1, $templateCode);
	$templateCode = str_replace('<%%EMBEDDED%%>', ($_REQUEST['Embedded'] ? 'Embedded=1' : ''), $templateCode);
	// process buttons
	if($AllowInsert) {
		if(!$selected_id) $templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-success" id="insert" name="insert_x" value="1" onclick="return hist_chr_dev_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save New'] . '</button>', $templateCode);
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="insert" name="insert_x" value="1" onclick="return hist_chr_dev_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save As Copy'] . '</button>', $templateCode);
	} else {
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '', $templateCode);
	}

	// 'Back' button action
	if($_REQUEST['Embedded']) {
		$backAction = 'AppGini.closeParentModal(); return false;';
	} else {
		$backAction = '$j(\'form\').eq(0).attr(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;';
	}

	if($selected_id) {
		if(!$_REQUEST['Embedded']) $templateCode = str_replace('<%%DVPRINT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="dvprint" name="dvprint_x" value="1" onclick="$j(\'form\').eq(0).prop(\'novalidate\', true); document.myform.reset(); return true;" title="' . html_attr($Translation['Print Preview']) . '"><i class="glyphicon glyphicon-print"></i> ' . $Translation['Print Preview'] . '</button>', $templateCode);
		if($AllowUpdate) {
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '<button type="submit" class="btn btn-success btn-lg" id="update" name="update_x" value="1" onclick="return hist_chr_dev_validateData();" title="' . html_attr($Translation['Save Changes']) . '"><i class="glyphicon glyphicon-ok"></i> ' . $Translation['Save Changes'] . '</button>', $templateCode);
		} else {
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		}
		if(($arrPerm[4]==1 && $ownerMemberID==getLoggedMemberID()) || ($arrPerm[4]==2 && $ownerGroupID==getLoggedGroupID()) || $arrPerm[4]==3) { // allow delete?
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '<button type="submit" class="btn btn-danger" id="delete" name="delete_x" value="1" onclick="return confirm(\'' . $Translation['are you sure?'] . '\');" title="' . html_attr($Translation['Delete']) . '"><i class="glyphicon glyphicon-trash"></i> ' . $Translation['Delete'] . '</button>', $templateCode);
		} else {
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		}
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>', $templateCode);
	} else {
		$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', ($ShowCancel ? '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>' : ''), $templateCode);
	}

	// set records to read only if user can't insert new records and can't edit current record
	if(($selected_id && !$AllowUpdate && !$AllowInsert) || (!$selected_id && !$AllowInsert)) {
		$jsReadOnly .= "\tjQuery('#hist_story').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#hist_story_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#bio_story').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#bio_story_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#agent_id').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#agent_id_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#agent_name').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#agent_name_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#cw_name').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#cw_name_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#dp1_resolve').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#dp1_resolve_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#dp2_resolve').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#dp2_resolve_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#dp3_resolve').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#dp3_resolve_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#mc_resolve').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#mc_resolve_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#illust_resolve').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#illust_resolve_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#dp3_growth').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#dp3_growth_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#mc_growth').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#mc_growth_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#illust_growth').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#illust_growth_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#dp3_approach').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#dp3_approach_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#mc_approach').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#mc_approach_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#illust_approach').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#illust_approach_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#dp3_psstyle').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#dp3_psstyle_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#mc_ps_style').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#mc_ps_style_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#illust_ps_style').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#illust_ps_style_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#cw_age').replaceWith('<div class=\"form-control-static\" id=\"cw_age\">' + (jQuery('#cw_age').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#cw_gender').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#cw_gender_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#cw_communication_style').replaceWith('<div class=\"form-control-static\" id=\"cw_communication_style\">' + (jQuery('#cw_communication_style').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#cw_background').replaceWith('<div class=\"form-control-static\" id=\"cw_background\">' + (jQuery('#cw_background').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#cw_appearance').replaceWith('<div class=\"form-control-static\" id=\"cw_appearance\">' + (jQuery('#cw_appearance').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#cw_relationships').replaceWith('<div class=\"form-control-static\" id=\"cw_relationships\">' + (jQuery('#cw_relationships').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#cw_ambition').replaceWith('<div class=\"form-control-static\" id=\"cw_ambition\">' + (jQuery('#cw_ambition').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#cw_defects').replaceWith('<div class=\"form-control-static\" id=\"cw_defects\">' + (jQuery('#cw_defects').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#cw_thoughts').replaceWith('<div class=\"form-control-static\" id=\"cw_thoughts\">' + (jQuery('#cw_thoughts').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#cw_relatedness').replaceWith('<div class=\"form-control-static\" id=\"cw_relatedness\">' + (jQuery('#cw_relatedness').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#cw_restrictions').replaceWith('<div class=\"form-control-static\" id=\"cw_restrictions\">' + (jQuery('#cw_restrictions').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#locations').replaceWith('<div class=\"form-control-static\" id=\"locations\">' + (jQuery('#locations').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#persons').replaceWith('<div class=\"form-control-static\" id=\"persons\">' + (jQuery('#persons').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#events').replaceWith('<div class=\"form-control-static\" id=\"events\">' + (jQuery('#events').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#noetictension').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#noetictension_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#illust_nt').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#illust_nt_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#impression').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#impression_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#illust_im').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#illust_im_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#mcs_problem').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#mcs_problem_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#illust_mcs_problem').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#illust_mcs_problem_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#illust_mcs_solution').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#illust_mcs_solution_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#illust_mcs_symptom').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#illust_mcs_symptom_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#illust_mcs_response').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#illust_mcs_response_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('.select2-container').hide();\n";

		$noUploads = true;
	} elseif($AllowInsert) {
		$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', true);"; // temporarily disable form change handler
			$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', false);"; // re-enable form change handler
	}

	// process combos
	$templateCode = str_replace('<%%COMBO(hist_story)%%>', $combo_hist_story->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(hist_story)%%>', $combo_hist_story->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(hist_story)%%>', urlencode($combo_hist_story->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(bio_story)%%>', $combo_bio_story->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(bio_story)%%>', $combo_bio_story->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(bio_story)%%>', urlencode($combo_bio_story->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(agent_id)%%>', $combo_agent_id->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(agent_id)%%>', $combo_agent_id->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(agent_id)%%>', urlencode($combo_agent_id->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(agent_name)%%>', $combo_agent_name->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(agent_name)%%>', $combo_agent_name->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(agent_name)%%>', urlencode($combo_agent_name->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(cw_name)%%>', $combo_cw_name->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(cw_name)%%>', $combo_cw_name->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(cw_name)%%>', urlencode($combo_cw_name->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(dp1_resolve)%%>', $combo_dp1_resolve->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(dp1_resolve)%%>', $combo_dp1_resolve->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(dp1_resolve)%%>', urlencode($combo_dp1_resolve->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(dp2_resolve)%%>', $combo_dp2_resolve->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(dp2_resolve)%%>', $combo_dp2_resolve->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(dp2_resolve)%%>', urlencode($combo_dp2_resolve->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(dp3_resolve)%%>', $combo_dp3_resolve->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(dp3_resolve)%%>', $combo_dp3_resolve->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(dp3_resolve)%%>', urlencode($combo_dp3_resolve->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(mc_resolve)%%>', $combo_mc_resolve->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(mc_resolve)%%>', $combo_mc_resolve->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(mc_resolve)%%>', urlencode($combo_mc_resolve->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(illust_resolve)%%>', $combo_illust_resolve->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(illust_resolve)%%>', $combo_illust_resolve->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(illust_resolve)%%>', urlencode($combo_illust_resolve->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(dp3_growth)%%>', $combo_dp3_growth->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(dp3_growth)%%>', $combo_dp3_growth->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(dp3_growth)%%>', urlencode($combo_dp3_growth->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(mc_growth)%%>', $combo_mc_growth->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(mc_growth)%%>', $combo_mc_growth->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(mc_growth)%%>', urlencode($combo_mc_growth->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(illust_growth)%%>', $combo_illust_growth->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(illust_growth)%%>', $combo_illust_growth->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(illust_growth)%%>', urlencode($combo_illust_growth->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(dp3_approach)%%>', $combo_dp3_approach->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(dp3_approach)%%>', $combo_dp3_approach->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(dp3_approach)%%>', urlencode($combo_dp3_approach->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(mc_approach)%%>', $combo_mc_approach->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(mc_approach)%%>', $combo_mc_approach->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(mc_approach)%%>', urlencode($combo_mc_approach->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(illust_approach)%%>', $combo_illust_approach->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(illust_approach)%%>', $combo_illust_approach->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(illust_approach)%%>', urlencode($combo_illust_approach->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(dp3_psstyle)%%>', $combo_dp3_psstyle->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(dp3_psstyle)%%>', $combo_dp3_psstyle->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(dp3_psstyle)%%>', urlencode($combo_dp3_psstyle->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(mc_ps_style)%%>', $combo_mc_ps_style->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(mc_ps_style)%%>', $combo_mc_ps_style->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(mc_ps_style)%%>', urlencode($combo_mc_ps_style->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(illust_ps_style)%%>', $combo_illust_ps_style->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(illust_ps_style)%%>', $combo_illust_ps_style->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(illust_ps_style)%%>', urlencode($combo_illust_ps_style->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(cw_gender)%%>', $combo_cw_gender->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(cw_gender)%%>', $combo_cw_gender->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(cw_gender)%%>', urlencode($combo_cw_gender->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(noetictension)%%>', $combo_noetictension->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(noetictension)%%>', $combo_noetictension->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(noetictension)%%>', urlencode($combo_noetictension->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(illust_nt)%%>', $combo_illust_nt->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(illust_nt)%%>', $combo_illust_nt->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(illust_nt)%%>', urlencode($combo_illust_nt->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(impression)%%>', $combo_impression->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(impression)%%>', $combo_impression->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(impression)%%>', urlencode($combo_impression->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(illust_im)%%>', $combo_illust_im->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(illust_im)%%>', $combo_illust_im->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(illust_im)%%>', urlencode($combo_illust_im->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(mcs_problem)%%>', $combo_mcs_problem->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(mcs_problem)%%>', $combo_mcs_problem->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(mcs_problem)%%>', urlencode($combo_mcs_problem->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(illust_mcs_problem)%%>', $combo_illust_mcs_problem->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(illust_mcs_problem)%%>', $combo_illust_mcs_problem->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(illust_mcs_problem)%%>', urlencode($combo_illust_mcs_problem->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(illust_mcs_solution)%%>', $combo_illust_mcs_solution->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(illust_mcs_solution)%%>', $combo_illust_mcs_solution->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(illust_mcs_solution)%%>', urlencode($combo_illust_mcs_solution->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(illust_mcs_symptom)%%>', $combo_illust_mcs_symptom->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(illust_mcs_symptom)%%>', $combo_illust_mcs_symptom->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(illust_mcs_symptom)%%>', urlencode($combo_illust_mcs_symptom->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(illust_mcs_response)%%>', $combo_illust_mcs_response->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(illust_mcs_response)%%>', $combo_illust_mcs_response->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(illust_mcs_response)%%>', urlencode($combo_illust_mcs_response->MatchText), $templateCode);

	/* lookup fields array: 'lookup field name' => array('parent table name', 'lookup field caption') */
	$lookup_fields = array('hist_story' => array('hist_story', 'Historia'), 'bio_story' => array('bio_story', 'Biograf&#237;a'), 'agent_id' => array('biblio_author', 'ID autor'), 'agent_name' => array('hist_chr', 'Nombre de autor'), 'cw_name' => array('hist_chr', 'Nombre de personaje'), 'dp1_resolve' => array('class_dynamicstorypoints1', 'Punto din&#225;mico categor&#237;a 1'), 'dp2_resolve' => array('class_dynamicstorypoints2', 'Punto din&#225;mico categor&#237;a 2'), 'dp3_resolve' => array('class_dynamicstorypoints3', 'Punto din&#225;mico categor&#237;a 3'), 'mc_resolve' => array('class_dynamicstorypoints4', 'Resoluci&#243;n de personaje principal'), 'illust_resolve' => array('hist_chr_scene', 'Ilustraci&#243;n de la resoluci&#243;n'), 'dp3_growth' => array('class_dynamicstorypoints3', 'Punto din&#225;mico Crecimiento'), 'mc_growth' => array('class_dynamicstorypoints4', 'Crecimiento de personaje principal'), 'illust_growth' => array('hist_chr_scene', 'Ilustraci&#243;n del crecimiento'), 'dp3_approach' => array('class_dynamicstorypoints3', 'Punto din&#225;mico Enfoque'), 'mc_approach' => array('class_dynamicstorypoints4', 'Enfoque de personaje principal'), 'illust_approach' => array('hist_chr_scene', 'Ilustraci&#243;n del enfoque'), 'dp3_psstyle' => array('class_dynamicstorypoints3', 'Punto din&#225;mico estilo de resolver problemas'), 'mc_ps_style' => array('class_dynamicstorypoints4', 'Estilo de resolver problemas de personaje principal'), 'illust_ps_style' => array('hist_chr_scene', 'Ilustraci&#243;n del estilo de resolver problemas'), 'cw_gender' => array('class_gender', 'G&#233;nero del personaje'), 'noetictension' => array('class_nt', 'Tensi&#243;n no&#233;tica principal'), 'illust_nt' => array('hist_chr_scene', 'Ilustraci&#243;n de la tens&#237;on no&#233;tica'), 'impression' => array('class_im', 'Gesti&#243;n general de impresiones'), 'illust_im' => array('hist_chr_scene', 'Ilustraci&#243;n de la gesti&#243;n de impresi&#243;n'), 'mcs_problem' => array('hist_storystatic', 'Problema MCS'), 'illust_mcs_problem' => array('hist_chr_scene', 'Ilustraci&#243;n de problema'), 'illust_mcs_solution' => array('hist_chr_scene', 'Ilustraci&#243;n de soluci&#243;n'), 'illust_mcs_symptom' => array('hist_chr_scene', 'Ilustraci&#243;n de s&#237;ntoma'), 'illust_mcs_response' => array('hist_chr_scene', 'Illustration of MCS Response'), );
	foreach($lookup_fields as $luf => $ptfc) {
		$pt_perm = getTablePermissions($ptfc[0]);

		// process foreign key links
		if($pt_perm['view'] || $pt_perm['edit']) {
			$templateCode = str_replace("<%%PLINK({$luf})%%>", '<button type="button" class="btn btn-default view_parent hspacer-md" id="' . $ptfc[0] . '_view_parent" title="' . html_attr($Translation['View'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-eye-open"></i></button>', $templateCode);
		}

		// if user has insert permission to parent table of a lookup field, put an add new button
		if($pt_perm['insert'] && !$_REQUEST['Embedded']) {
			$templateCode = str_replace("<%%ADDNEW({$ptfc[0]})%%>", '<button type="button" class="btn btn-success add_new_parent hspacer-md" id="' . $ptfc[0] . '_add_new" title="' . html_attr($Translation['Add New'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-plus-sign"></i></button>', $templateCode);
		}
	}

	// process images
	$templateCode = str_replace('<%%UPLOADFILE(id)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(hist_story)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(bio_story)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(agent_id)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(agent_name)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(cw_name)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(dp1_resolve)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(dp2_resolve)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(dp3_resolve)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(mc_resolve)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(illust_resolve)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(dp3_growth)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(mc_growth)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(illust_growth)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(dp3_approach)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(mc_approach)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(illust_approach)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(dp3_psstyle)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(mc_ps_style)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(illust_ps_style)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(cw_age)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(cw_gender)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(cw_communication_style)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(cw_background)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(cw_appearance)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(cw_relationships)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(cw_ambition)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(cw_defects)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(cw_thoughts)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(cw_relatedness)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(cw_restrictions)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(locations)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(persons)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(events)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(noetictension)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(illust_nt)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(impression)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(illust_im)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(mcs_problem)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(illust_mcs_problem)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(illust_mcs_solution)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(illust_mcs_symptom)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(illust_mcs_response)%%>', '', $templateCode);

	// process values
	if($selected_id) {
		if( $dvprint) $templateCode = str_replace('<%%VALUE(id)%%>', safe_html($urow['id']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(id)%%>', html_attr($row['id']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(id)%%>', urlencode($urow['id']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(hist_story)%%>', safe_html($urow['hist_story']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(hist_story)%%>', html_attr($row['hist_story']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(hist_story)%%>', urlencode($urow['hist_story']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(bio_story)%%>', safe_html($urow['bio_story']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(bio_story)%%>', html_attr($row['bio_story']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(bio_story)%%>', urlencode($urow['bio_story']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(agent_id)%%>', safe_html($urow['agent_id']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(agent_id)%%>', html_attr($row['agent_id']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(agent_id)%%>', urlencode($urow['agent_id']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(agent_name)%%>', safe_html($urow['agent_name']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(agent_name)%%>', html_attr($row['agent_name']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(agent_name)%%>', urlencode($urow['agent_name']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(cw_name)%%>', safe_html($urow['cw_name']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(cw_name)%%>', html_attr($row['cw_name']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(cw_name)%%>', urlencode($urow['cw_name']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(dp1_resolve)%%>', safe_html($urow['dp1_resolve']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(dp1_resolve)%%>', html_attr($row['dp1_resolve']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(dp1_resolve)%%>', urlencode($urow['dp1_resolve']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(dp2_resolve)%%>', safe_html($urow['dp2_resolve']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(dp2_resolve)%%>', html_attr($row['dp2_resolve']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(dp2_resolve)%%>', urlencode($urow['dp2_resolve']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(dp3_resolve)%%>', safe_html($urow['dp3_resolve']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(dp3_resolve)%%>', html_attr($row['dp3_resolve']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(dp3_resolve)%%>', urlencode($urow['dp3_resolve']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(mc_resolve)%%>', safe_html($urow['mc_resolve']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(mc_resolve)%%>', html_attr($row['mc_resolve']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(mc_resolve)%%>', urlencode($urow['mc_resolve']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(illust_resolve)%%>', safe_html($urow['illust_resolve']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(illust_resolve)%%>', html_attr($row['illust_resolve']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(illust_resolve)%%>', urlencode($urow['illust_resolve']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(dp3_growth)%%>', safe_html($urow['dp3_growth']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(dp3_growth)%%>', html_attr($row['dp3_growth']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(dp3_growth)%%>', urlencode($urow['dp3_growth']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(mc_growth)%%>', safe_html($urow['mc_growth']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(mc_growth)%%>', html_attr($row['mc_growth']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(mc_growth)%%>', urlencode($urow['mc_growth']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(illust_growth)%%>', safe_html($urow['illust_growth']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(illust_growth)%%>', html_attr($row['illust_growth']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(illust_growth)%%>', urlencode($urow['illust_growth']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(dp3_approach)%%>', safe_html($urow['dp3_approach']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(dp3_approach)%%>', html_attr($row['dp3_approach']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(dp3_approach)%%>', urlencode($urow['dp3_approach']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(mc_approach)%%>', safe_html($urow['mc_approach']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(mc_approach)%%>', html_attr($row['mc_approach']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(mc_approach)%%>', urlencode($urow['mc_approach']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(illust_approach)%%>', safe_html($urow['illust_approach']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(illust_approach)%%>', html_attr($row['illust_approach']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(illust_approach)%%>', urlencode($urow['illust_approach']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(dp3_psstyle)%%>', safe_html($urow['dp3_psstyle']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(dp3_psstyle)%%>', html_attr($row['dp3_psstyle']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(dp3_psstyle)%%>', urlencode($urow['dp3_psstyle']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(mc_ps_style)%%>', safe_html($urow['mc_ps_style']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(mc_ps_style)%%>', html_attr($row['mc_ps_style']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(mc_ps_style)%%>', urlencode($urow['mc_ps_style']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(illust_ps_style)%%>', safe_html($urow['illust_ps_style']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(illust_ps_style)%%>', html_attr($row['illust_ps_style']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(illust_ps_style)%%>', urlencode($urow['illust_ps_style']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(cw_age)%%>', safe_html($urow['cw_age']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(cw_age)%%>', html_attr($row['cw_age']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(cw_age)%%>', urlencode($urow['cw_age']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(cw_gender)%%>', safe_html($urow['cw_gender']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(cw_gender)%%>', html_attr($row['cw_gender']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(cw_gender)%%>', urlencode($urow['cw_gender']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(cw_communication_style)%%>', safe_html($urow['cw_communication_style']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(cw_communication_style)%%>', html_attr($row['cw_communication_style']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(cw_communication_style)%%>', urlencode($urow['cw_communication_style']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(cw_background)%%>', safe_html($urow['cw_background']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(cw_background)%%>', html_attr($row['cw_background']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(cw_background)%%>', urlencode($urow['cw_background']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(cw_appearance)%%>', safe_html($urow['cw_appearance']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(cw_appearance)%%>', html_attr($row['cw_appearance']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(cw_appearance)%%>', urlencode($urow['cw_appearance']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(cw_relationships)%%>', safe_html($urow['cw_relationships']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(cw_relationships)%%>', html_attr($row['cw_relationships']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(cw_relationships)%%>', urlencode($urow['cw_relationships']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(cw_ambition)%%>', safe_html($urow['cw_ambition']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(cw_ambition)%%>', html_attr($row['cw_ambition']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(cw_ambition)%%>', urlencode($urow['cw_ambition']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(cw_defects)%%>', safe_html($urow['cw_defects']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(cw_defects)%%>', html_attr($row['cw_defects']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(cw_defects)%%>', urlencode($urow['cw_defects']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(cw_thoughts)%%>', safe_html($urow['cw_thoughts']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(cw_thoughts)%%>', html_attr($row['cw_thoughts']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(cw_thoughts)%%>', urlencode($urow['cw_thoughts']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(cw_relatedness)%%>', safe_html($urow['cw_relatedness']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(cw_relatedness)%%>', html_attr($row['cw_relatedness']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(cw_relatedness)%%>', urlencode($urow['cw_relatedness']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(cw_restrictions)%%>', safe_html($urow['cw_restrictions']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(cw_restrictions)%%>', html_attr($row['cw_restrictions']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(cw_restrictions)%%>', urlencode($urow['cw_restrictions']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(locations)%%>', safe_html($urow['locations']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(locations)%%>', html_attr($row['locations']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(locations)%%>', urlencode($urow['locations']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(persons)%%>', safe_html($urow['persons']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(persons)%%>', html_attr($row['persons']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(persons)%%>', urlencode($urow['persons']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(events)%%>', safe_html($urow['events']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(events)%%>', html_attr($row['events']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(events)%%>', urlencode($urow['events']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(noetictension)%%>', safe_html($urow['noetictension']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(noetictension)%%>', html_attr($row['noetictension']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(noetictension)%%>', urlencode($urow['noetictension']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(illust_nt)%%>', safe_html($urow['illust_nt']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(illust_nt)%%>', html_attr($row['illust_nt']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(illust_nt)%%>', urlencode($urow['illust_nt']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(impression)%%>', safe_html($urow['impression']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(impression)%%>', html_attr($row['impression']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(impression)%%>', urlencode($urow['impression']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(illust_im)%%>', safe_html($urow['illust_im']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(illust_im)%%>', html_attr($row['illust_im']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(illust_im)%%>', urlencode($urow['illust_im']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(mcs_problem)%%>', safe_html($urow['mcs_problem']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(mcs_problem)%%>', html_attr($row['mcs_problem']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(mcs_problem)%%>', urlencode($urow['mcs_problem']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(illust_mcs_problem)%%>', safe_html($urow['illust_mcs_problem']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(illust_mcs_problem)%%>', html_attr($row['illust_mcs_problem']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(illust_mcs_problem)%%>', urlencode($urow['illust_mcs_problem']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(illust_mcs_solution)%%>', safe_html($urow['illust_mcs_solution']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(illust_mcs_solution)%%>', html_attr($row['illust_mcs_solution']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(illust_mcs_solution)%%>', urlencode($urow['illust_mcs_solution']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(illust_mcs_symptom)%%>', safe_html($urow['illust_mcs_symptom']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(illust_mcs_symptom)%%>', html_attr($row['illust_mcs_symptom']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(illust_mcs_symptom)%%>', urlencode($urow['illust_mcs_symptom']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(illust_mcs_response)%%>', safe_html($urow['illust_mcs_response']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(illust_mcs_response)%%>', html_attr($row['illust_mcs_response']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(illust_mcs_response)%%>', urlencode($urow['illust_mcs_response']), $templateCode);
	} else {
		$templateCode = str_replace('<%%VALUE(id)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(id)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(hist_story)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(hist_story)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(bio_story)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(bio_story)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(agent_id)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(agent_id)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(agent_name)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(agent_name)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(cw_name)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(cw_name)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(dp1_resolve)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(dp1_resolve)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(dp2_resolve)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(dp2_resolve)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(dp3_resolve)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(dp3_resolve)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(mc_resolve)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(mc_resolve)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(illust_resolve)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(illust_resolve)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(dp3_growth)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(dp3_growth)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(mc_growth)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(mc_growth)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(illust_growth)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(illust_growth)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(dp3_approach)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(dp3_approach)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(mc_approach)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(mc_approach)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(illust_approach)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(illust_approach)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(dp3_psstyle)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(dp3_psstyle)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(mc_ps_style)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(mc_ps_style)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(illust_ps_style)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(illust_ps_style)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(cw_age)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(cw_age)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(cw_gender)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(cw_gender)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(cw_communication_style)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(cw_communication_style)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(cw_background)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(cw_background)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(cw_appearance)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(cw_appearance)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(cw_relationships)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(cw_relationships)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(cw_ambition)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(cw_ambition)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(cw_defects)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(cw_defects)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(cw_thoughts)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(cw_thoughts)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(cw_relatedness)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(cw_relatedness)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(cw_restrictions)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(cw_restrictions)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(locations)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(locations)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(persons)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(persons)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(events)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(events)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(noetictension)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(noetictension)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(illust_nt)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(illust_nt)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(impression)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(impression)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(illust_im)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(illust_im)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(mcs_problem)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(mcs_problem)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(illust_mcs_problem)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(illust_mcs_problem)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(illust_mcs_solution)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(illust_mcs_solution)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(illust_mcs_symptom)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(illust_mcs_symptom)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(illust_mcs_response)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(illust_mcs_response)%%>', urlencode(''), $templateCode);
	}

	// process translations
	$templateCode = parseTemplate($templateCode);

	// clear scrap
	$templateCode = str_replace('<%%', '<!-- ', $templateCode);
	$templateCode = str_replace('%%>', ' -->', $templateCode);

	// hide links to inaccessible tables
	if($_REQUEST['dvprint_x'] == '') {
		$templateCode .= "\n\n<script>\$j(function() {\n";
		$arrTables = getTableList();
		foreach($arrTables as $name => $caption) {
			$templateCode .= "\t\$j('#{$name}_link').removeClass('hidden');\n";
			$templateCode .= "\t\$j('#xs_{$name}_link').removeClass('hidden');\n";
		}

		$templateCode .= $jsReadOnly;
		$templateCode .= $jsEditable;

		if(!$selected_id) {
		}

		$templateCode.="\n});</script>\n";
	}

	// ajaxed auto-fill fields
	$templateCode .= '<script>';
	$templateCode .= '$j(function() {';

	$templateCode .= "\tmcs_problem_update_autofills$rnd1 = function() {\n";
	$templateCode .= "\t\t\$j.ajax({\n";
	if($dvprint) {
		$templateCode .= "\t\t\turl: 'hist_chr_dev_autofill.php?rnd1=$rnd1&mfk=mcs_problem&id=' + encodeURIComponent('".addslashes($row['mcs_problem'])."'),\n";
		$templateCode .= "\t\t\tcontentType: 'application/x-www-form-urlencoded; charset=" . datalist_db_encoding . "',\n";
		$templateCode .= "\t\t\ttype: 'GET'\n";
	} else {
		$templateCode .= "\t\t\turl: 'hist_chr_dev_autofill.php?rnd1=$rnd1&mfk=mcs_problem&id=' + encodeURIComponent(AppGini.current_mcs_problem{$rnd1}.value),\n";
		$templateCode .= "\t\t\tcontentType: 'application/x-www-form-urlencoded; charset=" . datalist_db_encoding . "',\n";
		$templateCode .= "\t\t\ttype: 'GET',\n";
		$templateCode .= "\t\t\tbeforeSend: function() { \$j('#mcs_problem$rnd1').prop('disabled', true); \$j('#mcs_problemLoading').html('<img src=loading.gif align=top>'); },\n";
		$templateCode .= "\t\t\tcomplete: function() { " . (($arrPerm[1] || (($arrPerm[3] == 1 && $ownerMemberID == getLoggedMemberID()) || ($arrPerm[3] == 2 && $ownerGroupID == getLoggedGroupID()) || $arrPerm[3] == 3)) ? "\$j('#mcs_problem$rnd1').prop('disabled', false); " : "\$j('#mcs_problem$rnd1').prop('disabled', true); ")."\$j('#mcs_problemLoading').html(''); \$j(window).resize(); }\n";
	}
	$templateCode .= "\t\t});\n";
	$templateCode .= "\t};\n";
	if(!$dvprint) $templateCode .= "\tif(\$j('#mcs_problem_caption').length) \$j('#mcs_problem_caption').click(function() { mcs_problem_update_autofills$rnd1(); });\n";


	$templateCode.="});";
	$templateCode.="</script>";
	$templateCode .= $lookups;

	// handle enforced parent values for read-only lookup fields

	// don't include blank images in lightbox gallery
	$templateCode = preg_replace('/blank.gif" data-lightbox=".*?"/', 'blank.gif"', $templateCode);

	// don't display empty email links
	$templateCode=preg_replace('/<a .*?href="mailto:".*?<\/a>/', '', $templateCode);

	/* default field values */
	$rdata = $jdata = get_defaults('hist_chr_dev');
	if($selected_id) {
		$jdata = get_joined_record('hist_chr_dev', $selected_id);
		if($jdata === false) $jdata = get_defaults('hist_chr_dev');
		$rdata = $row;
	}
	$templateCode .= loadView('hist_chr_dev-ajax-cache', array('rdata' => $rdata, 'jdata' => $jdata));

	// hook: hist_chr_dev_dv
	if(function_exists('hist_chr_dev_dv')) {
		$args=[];
		hist_chr_dev_dv(($selected_id ? $selected_id : FALSE), getMemberInfo(), $templateCode, $args);
	}

	return $templateCode;
}